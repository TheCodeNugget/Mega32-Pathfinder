
AVRPathfinder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003432  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001c6  00800060  00003432  000034c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c8  00800226  00800226  0000368c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000368c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000036e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d8  00000000  00000000  00003728  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005b7a  00000000  00000000  00003a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000117e  00000000  00000000  0000957a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a5d  00000000  00000000  0000a6f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000009b8  00000000  00000000  0000c158  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001a4b  00000000  00000000  0000cb10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002f7c  00000000  00000000  0000e55b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000290  00000000  00000000  000114d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3c 01 	jmp	0x278	; 0x278 <__ctors_end>
       4:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
       8:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
       c:	0c 94 86 0e 	jmp	0x1d0c	; 0x1d0c <__vector_3>
      10:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      14:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      18:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      1c:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      20:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      24:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      28:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      2c:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__vector_11>
      30:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      34:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      38:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      3c:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      40:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      44:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      48:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      4c:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      50:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__bad_interrupt>
      54:	42 08       	sbc	r4, r2
      56:	53 08       	sbc	r5, r3
      58:	5a 08       	sbc	r5, r10
      5a:	60 08       	sbc	r6, r0
      5c:	67 08       	sbc	r6, r7
      5e:	86 08       	sbc	r8, r6
      60:	8f 08       	sbc	r8, r15
      62:	98 08       	sbc	r9, r8
      64:	a1 08       	sbc	r10, r1
      66:	a9 08       	sbc	r10, r9
      68:	a9 08       	sbc	r10, r9
      6a:	a9 08       	sbc	r10, r9
      6c:	a9 08       	sbc	r10, r9
      6e:	a9 08       	sbc	r10, r9
      70:	a9 08       	sbc	r10, r9
      72:	a9 08       	sbc	r10, r9
      74:	a9 08       	sbc	r10, r9
      76:	a9 08       	sbc	r10, r9
      78:	a9 08       	sbc	r10, r9
      7a:	a9 08       	sbc	r10, r9
      7c:	a9 08       	sbc	r10, r9
      7e:	a9 08       	sbc	r10, r9
      80:	a9 08       	sbc	r10, r9
      82:	a9 08       	sbc	r10, r9
      84:	a9 08       	sbc	r10, r9
      86:	a9 08       	sbc	r10, r9
      88:	a9 08       	sbc	r10, r9
      8a:	a9 08       	sbc	r10, r9
      8c:	a9 08       	sbc	r10, r9
      8e:	a9 08       	sbc	r10, r9
      90:	a9 08       	sbc	r10, r9
      92:	a9 08       	sbc	r10, r9
      94:	42 08       	sbc	r4, r2
      96:	4a 08       	sbc	r4, r10
      98:	53 08       	sbc	r5, r3
      9a:	5a 08       	sbc	r5, r10
      9c:	60 08       	sbc	r6, r0
      9e:	67 08       	sbc	r6, r7
      a0:	6d 08       	sbc	r6, r13
      a2:	75 08       	sbc	r7, r5
      a4:	7e 08       	sbc	r7, r14
      a6:	08 4a       	sbci	r16, 0xA8	; 168
      a8:	d7 3b       	cpi	r29, 0xB7	; 183
      aa:	3b ce       	rjmp	.-906    	; 0xfffffd22 <__eeprom_end+0xff7efd22>
      ac:	01 6e       	ori	r16, 0xE1	; 225
      ae:	84 bc       	out	0x24, r8	; 36
      b0:	bf fd       	.word	0xfdbf	; ????
      b2:	c1 2f       	mov	r28, r17
      b4:	3d 6c       	ori	r19, 0xCD	; 205
      b6:	74 31       	cpi	r23, 0x14	; 20
      b8:	9a bd       	out	0x2a, r25	; 42
      ba:	56 83       	std	Z+6, r21	; 0x06
      bc:	3d da       	rcall	.-2950   	; 0xfffff538 <__eeprom_end+0xff7ef538>
      be:	3d 00       	.word	0x003d	; ????
      c0:	c7 7f       	andi	r28, 0xF7	; 247
      c2:	11 be       	out	0x31, r1	; 49
      c4:	d9 e4       	ldi	r29, 0x49	; 73
      c6:	bb 4c       	sbci	r27, 0xCB	; 203
      c8:	3e 91       	ld	r19, -X
      ca:	6b aa       	std	Y+51, r6	; 0x33
      cc:	aa be       	out	0x3a, r10	; 58
      ce:	00 00       	nop
      d0:	00 80       	ld	r0, Z
      d2:	3f 05       	cpc	r19, r15
      d4:	a8 4c       	sbci	r26, 0xC8	; 200
      d6:	cd b2       	in	r12, 0x1d	; 29
      d8:	d4 4e       	sbci	r29, 0xE4	; 228
      da:	b9 38       	cpi	r27, 0x89	; 137
      dc:	36 a9       	ldd	r19, Z+54	; 0x36
      de:	02 0c       	add	r0, r2
      e0:	50 b9       	out	0x00, r21	; 0
      e2:	91 86       	std	Z+9, r9	; 0x09
      e4:	88 08       	sbc	r8, r8
      e6:	3c a6       	std	Y+44, r3	; 0x2c
      e8:	aa aa       	std	Y+50, r10	; 0x32
      ea:	2a be       	out	0x3a, r2	; 58
      ec:	00 00       	nop
      ee:	00 80       	ld	r0, Z
      f0:	3f 07       	cpc	r19, r31
      f2:	63 42       	sbci	r22, 0x23	; 35
      f4:	36 b7       	in	r19, 0x36	; 54
      f6:	9b d8       	rcall	.-3786   	; 0xfffff22e <__eeprom_end+0xff7ef22e>
      f8:	a7 1a       	sub	r10, r23
      fa:	39 68       	ori	r19, 0x89	; 137
      fc:	56 18       	sub	r5, r6
      fe:	ae ba       	out	0x1e, r10	; 30
     100:	ab 55       	subi	r26, 0x5B	; 91
     102:	8c 1d       	adc	r24, r12
     104:	3c b7       	in	r19, 0x3c	; 60
     106:	cc 57       	subi	r28, 0x7C	; 124
     108:	63 bd       	out	0x23, r22	; 35
     10a:	6d ed       	ldi	r22, 0xDD	; 221
     10c:	fd 75       	andi	r31, 0x5D	; 93
     10e:	3e f6       	brtc	.-114    	; 0x9e <__SREG__+0x5f>
     110:	17 72       	andi	r17, 0x27	; 39
     112:	31 bf       	out	0x31, r19	; 49
     114:	00 00       	nop
     116:	00 80       	ld	r0, Z
     118:	3f 08       	sbc	r3, r15
     11a:	00 00       	nop
     11c:	00 be       	out	0x30, r0	; 48
     11e:	92 24       	eor	r9, r2
     120:	49 12       	cpse	r4, r25
     122:	3e ab       	std	Y+54, r19	; 0x36
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	2a be       	out	0x3a, r2	; 58
     128:	cd cc       	rjmp	.-1638   	; 0xfffffac4 <__eeprom_end+0xff7efac4>
     12a:	cc 4c       	sbci	r28, 0xCC	; 204
     12c:	3e 00       	.word	0x003e	; ????
     12e:	00 00       	nop
     130:	80 be       	out	0x30, r8	; 48
     132:	ab aa       	std	Y+51, r10	; 0x33
     134:	aa aa       	std	Y+50, r10	; 0x32
     136:	3e 00       	.word	0x003e	; ????
     138:	00 00       	nop
     13a:	00 bf       	out	0x30, r16	; 48
     13c:	00 00       	nop
     13e:	00 80       	ld	r0, Z
     140:	3f 00       	.word	0x003f	; ????
     142:	00 00       	nop
     144:	00 00       	nop
     146:	08 41       	sbci	r16, 0x18	; 24
     148:	78 d3       	rcall	.+1776   	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     14a:	bb 43       	sbci	r27, 0x3B	; 59
     14c:	87 d1       	rcall	.+782    	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
     14e:	13 3d       	cpi	r17, 0xD3	; 211
     150:	19 0e       	add	r1, r25
     152:	3c c3       	rjmp	.+1656   	; 0x7cc <_ZN11TinyGPSPlus15distanceBetweenEdddd+0xce>
     154:	bd 42       	sbci	r27, 0x2D	; 45
     156:	82 ad       	ldd	r24, Z+58	; 0x3a
     158:	2b 3e       	cpi	r18, 0xEB	; 235
     15a:	68 ec       	ldi	r22, 0xC8	; 200
     15c:	82 76       	andi	r24, 0x62	; 98
     15e:	be d9       	rcall	.-3204   	; 0xfffff4dc <__eeprom_end+0xff7ef4dc>
     160:	8f e1       	ldi	r24, 0x1F	; 31
     162:	a9 3e       	cpi	r26, 0xE9	; 233
     164:	4c 80       	ldd	r4, Y+4	; 0x04
     166:	ef ff       	.word	0xffef	; ????
     168:	be 01       	movw	r22, r28
     16a:	c4 ff       	sbrs	r28, 4
     16c:	7f 3f       	cpi	r23, 0xFF	; 255
     16e:	00 00       	nop
     170:	00 00       	nop
	...

00000174 <__trampolines_end>:
     174:	6e 61       	ori	r22, 0x1E	; 30
     176:	6e 00       	.word	0x006e	; ????

00000178 <__c.2332>:
     178:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     188:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     198:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     1a8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     1b8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1c8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1d8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1e8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     1f8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     208:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     218:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     228:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     238:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     248:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     258:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     268:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000276 <__ctors_start>:
     276:	9b 0e       	add	r9, r27

00000278 <__ctors_end>:
     278:	11 24       	eor	r1, r1
     27a:	1f be       	out	0x3f, r1	; 63
     27c:	cf e5       	ldi	r28, 0x5F	; 95
     27e:	d8 e0       	ldi	r29, 0x08	; 8
     280:	de bf       	out	0x3e, r29	; 62
     282:	cd bf       	out	0x3d, r28	; 61

00000284 <__do_copy_data>:
     284:	12 e0       	ldi	r17, 0x02	; 2
     286:	a0 e6       	ldi	r26, 0x60	; 96
     288:	b0 e0       	ldi	r27, 0x00	; 0
     28a:	e2 e3       	ldi	r30, 0x32	; 50
     28c:	f4 e3       	ldi	r31, 0x34	; 52
     28e:	02 c0       	rjmp	.+4      	; 0x294 <__do_copy_data+0x10>
     290:	05 90       	lpm	r0, Z+
     292:	0d 92       	st	X+, r0
     294:	a6 32       	cpi	r26, 0x26	; 38
     296:	b1 07       	cpc	r27, r17
     298:	d9 f7       	brne	.-10     	; 0x290 <__do_copy_data+0xc>

0000029a <__do_clear_bss>:
     29a:	22 e0       	ldi	r18, 0x02	; 2
     29c:	a6 e2       	ldi	r26, 0x26	; 38
     29e:	b2 e0       	ldi	r27, 0x02	; 2
     2a0:	01 c0       	rjmp	.+2      	; 0x2a4 <.do_clear_bss_start>

000002a2 <.do_clear_bss_loop>:
     2a2:	1d 92       	st	X+, r1

000002a4 <.do_clear_bss_start>:
     2a4:	ae 3e       	cpi	r26, 0xEE	; 238
     2a6:	b2 07       	cpc	r27, r18
     2a8:	e1 f7       	brne	.-8      	; 0x2a2 <.do_clear_bss_loop>

000002aa <__do_global_ctors>:
     2aa:	11 e0       	ldi	r17, 0x01	; 1
     2ac:	cc e3       	ldi	r28, 0x3C	; 60
     2ae:	d1 e0       	ldi	r29, 0x01	; 1
     2b0:	04 c0       	rjmp	.+8      	; 0x2ba <__do_global_ctors+0x10>
     2b2:	21 97       	sbiw	r28, 0x01	; 1
     2b4:	fe 01       	movw	r30, r28
     2b6:	0e 94 40 17 	call	0x2e80	; 0x2e80 <__tablejump2__>
     2ba:	cb 33       	cpi	r28, 0x3B	; 59
     2bc:	d1 07       	cpc	r29, r17
     2be:	c9 f7       	brne	.-14     	; 0x2b2 <__do_global_ctors+0x8>
     2c0:	0e 94 76 0e 	call	0x1cec	; 0x1cec <main>
     2c4:	0c 94 17 1a 	jmp	0x342e	; 0x342e <_exit>

000002c8 <__bad_interrupt>:
     2c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002cc <_Z11runTimeInitv>:
uint16_t _1ms = 0;

void runTimeInit() {
	// interrupt setup
	// prescale timer0 to 1/64th the clock rate
	TCCR0 |= (1 << CS01) | (1 << CS00);
     2cc:	83 b7       	in	r24, 0x33	; 51
     2ce:	83 60       	ori	r24, 0x03	; 3
     2d0:	83 bf       	out	0x33, r24	; 51
	// enable timer overflow interrupt
	TIMSK  |= 1 << TOIE0;
     2d2:	89 b7       	in	r24, 0x39	; 57
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	89 bf       	out	0x39, r24	; 57
	sei();
     2d8:	78 94       	sei
     2da:	08 95       	ret

000002dc <__vector_11>:
}

ISR(TIMER0_OVF_vect) {
     2dc:	1f 92       	push	r1
     2de:	0f 92       	push	r0
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	0f 92       	push	r0
     2e4:	11 24       	eor	r1, r1
     2e6:	2f 93       	push	r18
     2e8:	3f 93       	push	r19
     2ea:	4f 93       	push	r20
     2ec:	5f 93       	push	r21
     2ee:	6f 93       	push	r22
     2f0:	7f 93       	push	r23
     2f2:	8f 93       	push	r24
     2f4:	9f 93       	push	r25
     2f6:	af 93       	push	r26
     2f8:	bf 93       	push	r27
     2fa:	ef 93       	push	r30
     2fc:	ff 93       	push	r31
	uint8_t sregstore = SREG;
     2fe:	bf b7       	in	r27, 0x3f	; 63
	_1ms += 256;
     300:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
     304:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
     308:	93 95       	inc	r25
     30a:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <__data_end+0x1>
     30e:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
	while (_1ms > 1000) {
     312:	e0 91 26 02 	lds	r30, 0x0226	; 0x800226 <__data_end>
     316:	f0 91 27 02 	lds	r31, 0x0227	; 0x800227 <__data_end+0x1>
     31a:	e9 3e       	cpi	r30, 0xE9	; 233
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	f8 07       	cpc	r31, r24
     320:	50 f1       	brcs	.+84     	; 0x376 <__vector_11+0x9a>
		_runTime++;
     322:	20 91 28 02 	lds	r18, 0x0228	; 0x800228 <_runTime>
     326:	30 91 29 02 	lds	r19, 0x0229	; 0x800229 <_runTime+0x1>
     32a:	40 91 2a 02 	lds	r20, 0x022A	; 0x80022a <_runTime+0x2>
     32e:	50 91 2b 02 	lds	r21, 0x022B	; 0x80022b <_runTime+0x3>
     332:	60 91 2c 02 	lds	r22, 0x022C	; 0x80022c <_runTime+0x4>
     336:	70 91 2d 02 	lds	r23, 0x022D	; 0x80022d <_runTime+0x5>
     33a:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <_runTime+0x6>
     33e:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <_runTime+0x7>
     342:	a1 e0       	ldi	r26, 0x01	; 1
     344:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <__adddi3_s8>
     348:	20 93 28 02 	sts	0x0228, r18	; 0x800228 <_runTime>
     34c:	30 93 29 02 	sts	0x0229, r19	; 0x800229 <_runTime+0x1>
     350:	40 93 2a 02 	sts	0x022A, r20	; 0x80022a <_runTime+0x2>
     354:	50 93 2b 02 	sts	0x022B, r21	; 0x80022b <_runTime+0x3>
     358:	60 93 2c 02 	sts	0x022C, r22	; 0x80022c <_runTime+0x4>
     35c:	70 93 2d 02 	sts	0x022D, r23	; 0x80022d <_runTime+0x5>
     360:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <_runTime+0x6>
     364:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <_runTime+0x7>
		_1ms -= 1000;
     368:	e8 5e       	subi	r30, 0xE8	; 232
     36a:	f3 40       	sbci	r31, 0x03	; 3
     36c:	f0 93 27 02 	sts	0x0227, r31	; 0x800227 <__data_end+0x1>
     370:	e0 93 26 02 	sts	0x0226, r30	; 0x800226 <__data_end>
}

ISR(TIMER0_OVF_vect) {
	uint8_t sregstore = SREG;
	_1ms += 256;
	while (_1ms > 1000) {
     374:	ce cf       	rjmp	.-100    	; 0x312 <__vector_11+0x36>
		_runTime++;
		_1ms -= 1000;
	}
	SREG = sregstore;
     376:	bf bf       	out	0x3f, r27	; 63
}
     378:	ff 91       	pop	r31
     37a:	ef 91       	pop	r30
     37c:	bf 91       	pop	r27
     37e:	af 91       	pop	r26
     380:	9f 91       	pop	r25
     382:	8f 91       	pop	r24
     384:	7f 91       	pop	r23
     386:	6f 91       	pop	r22
     388:	5f 91       	pop	r21
     38a:	4f 91       	pop	r20
     38c:	3f 91       	pop	r19
     38e:	2f 91       	pop	r18
     390:	0f 90       	pop	r0
     392:	0f be       	out	0x3f, r0	; 63
     394:	0f 90       	pop	r0
     396:	1f 90       	pop	r1
     398:	18 95       	reti

0000039a <_Z10getrunTimev>:

uint64_t getrunTime() {
	uint64_t time;
	cli(); //Stop Interrupts to get clear runtime reading
     39a:	f8 94       	cli
	time = _runTime;
     39c:	20 91 28 02 	lds	r18, 0x0228	; 0x800228 <_runTime>
     3a0:	30 91 29 02 	lds	r19, 0x0229	; 0x800229 <_runTime+0x1>
     3a4:	40 91 2a 02 	lds	r20, 0x022A	; 0x80022a <_runTime+0x2>
     3a8:	50 91 2b 02 	lds	r21, 0x022B	; 0x80022b <_runTime+0x3>
     3ac:	60 91 2c 02 	lds	r22, 0x022C	; 0x80022c <_runTime+0x4>
     3b0:	70 91 2d 02 	lds	r23, 0x022D	; 0x80022d <_runTime+0x5>
     3b4:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <_runTime+0x6>
     3b8:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <_runTime+0x7>
	sei();
     3bc:	78 94       	sei
	return time;
     3be:	08 95       	ret

000003c0 <_ZN11TinyGPSPlusC1Ev>:

uint8_t TinyGPSTime::centisecond()
{
   updated = false;
   return time % 100;
}
     3c0:	fc 01       	movw	r30, r24
     3c2:	10 82       	st	Z, r1
     3c4:	11 82       	std	Z+1, r1	; 0x01
     3c6:	13 82       	std	Z+3, r1	; 0x03
     3c8:	12 82       	std	Z+2, r1	; 0x02
     3ca:	14 82       	std	Z+4, r1	; 0x04
     3cc:	15 82       	std	Z+5, r1	; 0x05
     3ce:	16 82       	std	Z+6, r1	; 0x06
     3d0:	17 82       	std	Z+7, r1	; 0x07
     3d2:	10 86       	std	Z+8, r1	; 0x08
     3d4:	12 86       	std	Z+10, r1	; 0x0a
     3d6:	11 86       	std	Z+9, r1	; 0x09
     3d8:	13 86       	std	Z+11, r1	; 0x0b
     3da:	14 86       	std	Z+12, r1	; 0x0c
     3dc:	15 86       	std	Z+13, r1	; 0x0d
     3de:	16 86       	std	Z+14, r1	; 0x0e
     3e0:	17 86       	std	Z+15, r1	; 0x0f
     3e2:	11 8a       	std	Z+17, r1	; 0x11
     3e4:	10 8a       	std	Z+16, r1	; 0x10
     3e6:	12 8a       	std	Z+18, r1	; 0x12
     3e8:	13 8a       	std	Z+19, r1	; 0x13
     3ea:	14 8a       	std	Z+20, r1	; 0x14
     3ec:	15 8a       	std	Z+21, r1	; 0x15
     3ee:	16 8a       	std	Z+22, r1	; 0x16
     3f0:	10 8e       	std	Z+24, r1	; 0x18
     3f2:	17 8a       	std	Z+23, r1	; 0x17
     3f4:	11 8e       	std	Z+25, r1	; 0x19
     3f6:	12 8e       	std	Z+26, r1	; 0x1a
     3f8:	13 8e       	std	Z+27, r1	; 0x1b
     3fa:	14 8e       	std	Z+28, r1	; 0x1c
     3fc:	15 8e       	std	Z+29, r1	; 0x1d
     3fe:	12 a2       	std	Z+34, r1	; 0x22
     400:	13 a2       	std	Z+35, r1	; 0x23
     402:	14 a2       	std	Z+36, r1	; 0x24
     404:	15 a2       	std	Z+37, r1	; 0x25
     406:	16 a2       	std	Z+38, r1	; 0x26
     408:	17 a2       	std	Z+39, r1	; 0x27
     40a:	10 aa       	std	Z+48, r1	; 0x30
     40c:	11 aa       	std	Z+49, r1	; 0x31
     40e:	12 aa       	std	Z+50, r1	; 0x32
     410:	13 aa       	std	Z+51, r1	; 0x33
     412:	14 aa       	std	Z+52, r1	; 0x34
     414:	15 aa       	std	Z+53, r1	; 0x35
     416:	16 ae       	std	Z+62, r1	; 0x3e
     418:	17 ae       	std	Z+63, r1	; 0x3f
     41a:	dc 01       	movw	r26, r24
     41c:	de 96       	adiw	r26, 0x3e	; 62
     41e:	16 96       	adiw	r26, 0x06	; 6
     420:	1d 92       	st	X+, r1
     422:	1d 92       	st	X+, r1
     424:	1d 92       	st	X+, r1
     426:	1c 92       	st	X, r1
     428:	19 97       	sbiw	r26, 0x09	; 9
     42a:	1e 96       	adiw	r26, 0x0e	; 14
     42c:	1c 92       	st	X, r1
     42e:	11 96       	adiw	r26, 0x01	; 1
     430:	1c 92       	st	X, r1
     432:	11 97       	sbiw	r26, 0x01	; 1
     434:	16 96       	adiw	r26, 0x06	; 6
     436:	1d 92       	st	X+, r1
     438:	1d 92       	st	X+, r1
     43a:	1d 92       	st	X+, r1
     43c:	1c 92       	st	X, r1
     43e:	19 97       	sbiw	r26, 0x09	; 9
     440:	1e 96       	adiw	r26, 0x0e	; 14
     442:	1c 92       	st	X, r1
     444:	11 96       	adiw	r26, 0x01	; 1
     446:	1c 92       	st	X, r1
     448:	11 97       	sbiw	r26, 0x01	; 1
     44a:	16 96       	adiw	r26, 0x06	; 6
     44c:	1d 92       	st	X+, r1
     44e:	1d 92       	st	X+, r1
     450:	1d 92       	st	X+, r1
     452:	1c 92       	st	X, r1
     454:	19 97       	sbiw	r26, 0x09	; 9
     456:	1e 96       	adiw	r26, 0x0e	; 14
     458:	1c 92       	st	X, r1
     45a:	11 96       	adiw	r26, 0x01	; 1
     45c:	1c 92       	st	X, r1
     45e:	11 97       	sbiw	r26, 0x01	; 1
     460:	16 96       	adiw	r26, 0x06	; 6
     462:	1d 92       	st	X+, r1
     464:	1d 92       	st	X+, r1
     466:	1d 92       	st	X+, r1
     468:	1c 92       	st	X, r1
     46a:	19 97       	sbiw	r26, 0x09	; 9
     46c:	1e 96       	adiw	r26, 0x0e	; 14
     46e:	1c 92       	st	X, r1
     470:	11 96       	adiw	r26, 0x01	; 1
     472:	1c 92       	st	X, r1
     474:	11 97       	sbiw	r26, 0x01	; 1
     476:	16 96       	adiw	r26, 0x06	; 6
     478:	1d 92       	st	X+, r1
     47a:	1d 92       	st	X+, r1
     47c:	1d 92       	st	X+, r1
     47e:	1c 92       	st	X, r1
     480:	19 97       	sbiw	r26, 0x09	; 9
     482:	1e 96       	adiw	r26, 0x0e	; 14
     484:	1c 92       	st	X, r1
     486:	11 96       	adiw	r26, 0x01	; 1
     488:	1c 92       	st	X, r1
     48a:	50 96       	adiw	r26, 0x10	; 16
     48c:	82 e0       	ldi	r24, 0x02	; 2
     48e:	8c 93       	st	X, r24
     490:	11 96       	adiw	r26, 0x01	; 1
     492:	1c 92       	st	X, r1
     494:	11 96       	adiw	r26, 0x01	; 1
     496:	1c 92       	st	X, r1
     498:	11 96       	adiw	r26, 0x01	; 1
     49a:	1c 92       	st	X, r1
     49c:	11 96       	adiw	r26, 0x01	; 1
     49e:	11 96       	adiw	r26, 0x01	; 1
     4a0:	1c 92       	st	X, r1
     4a2:	1e 92       	st	-X, r1
     4a4:	12 96       	adiw	r26, 0x02	; 2
     4a6:	11 96       	adiw	r26, 0x01	; 1
     4a8:	1c 92       	st	X, r1
     4aa:	1e 92       	st	-X, r1
     4ac:	12 96       	adiw	r26, 0x02	; 2
     4ae:	1d 92       	st	X+, r1
     4b0:	1d 92       	st	X+, r1
     4b2:	1d 92       	st	X+, r1
     4b4:	1c 92       	st	X, r1
     4b6:	13 97       	sbiw	r26, 0x03	; 3
     4b8:	14 96       	adiw	r26, 0x04	; 4
     4ba:	1d 92       	st	X+, r1
     4bc:	1d 92       	st	X+, r1
     4be:	1d 92       	st	X+, r1
     4c0:	1c 92       	st	X, r1
     4c2:	13 97       	sbiw	r26, 0x03	; 3
     4c4:	14 96       	adiw	r26, 0x04	; 4
     4c6:	1d 92       	st	X+, r1
     4c8:	1d 92       	st	X+, r1
     4ca:	1d 92       	st	X+, r1
     4cc:	1c 92       	st	X, r1
     4ce:	13 97       	sbiw	r26, 0x03	; 3
     4d0:	14 96       	adiw	r26, 0x04	; 4
     4d2:	1d 92       	st	X+, r1
     4d4:	1d 92       	st	X+, r1
     4d6:	1d 92       	st	X+, r1
     4d8:	1c 92       	st	X, r1
     4da:	13 97       	sbiw	r26, 0x03	; 3
     4dc:	ea 57       	subi	r30, 0x7A	; 122
     4de:	ff 4f       	sbci	r31, 0xFF	; 255
     4e0:	10 82       	st	Z, r1
     4e2:	08 95       	ret

000004e4 <_ZN11TinyGPSPlus7fromHexEc>:
     4e4:	8f eb       	ldi	r24, 0xBF	; 191
     4e6:	86 0f       	add	r24, r22
     4e8:	86 30       	cpi	r24, 0x06	; 6
     4ea:	20 f4       	brcc	.+8      	; 0x4f4 <_ZN11TinyGPSPlus7fromHexEc+0x10>
     4ec:	86 2f       	mov	r24, r22
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	c7 97       	sbiw	r24, 0x37	; 55
     4f2:	08 95       	ret
     4f4:	8f e9       	ldi	r24, 0x9F	; 159
     4f6:	86 0f       	add	r24, r22
     4f8:	86 30       	cpi	r24, 0x06	; 6
     4fa:	28 f4       	brcc	.+10     	; 0x506 <_ZN11TinyGPSPlus7fromHexEc+0x22>
     4fc:	86 2f       	mov	r24, r22
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	87 55       	subi	r24, 0x57	; 87
     502:	91 09       	sbc	r25, r1
     504:	08 95       	ret
     506:	86 2f       	mov	r24, r22
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	c0 97       	sbiw	r24, 0x30	; 48
     50c:	08 95       	ret

0000050e <_ZN11TinyGPSPlus12parseDecimalEPKc>:
     50e:	0f 93       	push	r16
     510:	1f 93       	push	r17
     512:	cf 93       	push	r28
     514:	df 93       	push	r29
     516:	ec 01       	movw	r28, r24
     518:	18 81       	ld	r17, Y
     51a:	1d 32       	cpi	r17, 0x2D	; 45
     51c:	09 f4       	brne	.+2      	; 0x520 <_ZN11TinyGPSPlus12parseDecimalEPKc+0x12>
     51e:	21 96       	adiw	r28, 0x01	; 1
     520:	ce 01       	movw	r24, r28
     522:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <atol>
     526:	9b 01       	movw	r18, r22
     528:	ac 01       	movw	r20, r24
     52a:	a4 e6       	ldi	r26, 0x64	; 100
     52c:	b0 e0       	ldi	r27, 0x00	; 0
     52e:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <__muluhisi3>
     532:	ab 01       	movw	r20, r22
     534:	bc 01       	movw	r22, r24
     536:	28 81       	ld	r18, Y
     538:	82 2f       	mov	r24, r18
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	c0 97       	sbiw	r24, 0x30	; 48
     53e:	0a 97       	sbiw	r24, 0x0a	; 10
     540:	10 f4       	brcc	.+4      	; 0x546 <_ZN11TinyGPSPlus12parseDecimalEPKc+0x38>
     542:	21 96       	adiw	r28, 0x01	; 1
     544:	f8 cf       	rjmp	.-16     	; 0x536 <_ZN11TinyGPSPlus12parseDecimalEPKc+0x28>
     546:	2e 32       	cpi	r18, 0x2E	; 46
     548:	59 f5       	brne	.+86     	; 0x5a0 <_ZN11TinyGPSPlus12parseDecimalEPKc+0x92>
     54a:	29 81       	ldd	r18, Y+1	; 0x01
     54c:	82 2f       	mov	r24, r18
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	c0 97       	sbiw	r24, 0x30	; 48
     552:	8a 30       	cpi	r24, 0x0A	; 10
     554:	91 05       	cpc	r25, r1
     556:	20 f5       	brcc	.+72     	; 0x5a0 <_ZN11TinyGPSPlus12parseDecimalEPKc+0x92>
     558:	9c 01       	movw	r18, r24
     55a:	88 0f       	add	r24, r24
     55c:	99 1f       	adc	r25, r25
     55e:	22 0f       	add	r18, r18
     560:	33 1f       	adc	r19, r19
     562:	22 0f       	add	r18, r18
     564:	33 1f       	adc	r19, r19
     566:	22 0f       	add	r18, r18
     568:	33 1f       	adc	r19, r19
     56a:	82 0f       	add	r24, r18
     56c:	93 1f       	adc	r25, r19
     56e:	09 2e       	mov	r0, r25
     570:	00 0c       	add	r0, r0
     572:	aa 0b       	sbc	r26, r26
     574:	bb 0b       	sbc	r27, r27
     576:	48 0f       	add	r20, r24
     578:	59 1f       	adc	r21, r25
     57a:	6a 1f       	adc	r22, r26
     57c:	7b 1f       	adc	r23, r27
     57e:	8a 81       	ldd	r24, Y+2	; 0x02
     580:	28 2f       	mov	r18, r24
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	20 53       	subi	r18, 0x30	; 48
     586:	31 09       	sbc	r19, r1
     588:	2a 30       	cpi	r18, 0x0A	; 10
     58a:	31 05       	cpc	r19, r1
     58c:	48 f4       	brcc	.+18     	; 0x5a0 <_ZN11TinyGPSPlus12parseDecimalEPKc+0x92>
     58e:	c9 01       	movw	r24, r18
     590:	09 2e       	mov	r0, r25
     592:	00 0c       	add	r0, r0
     594:	aa 0b       	sbc	r26, r26
     596:	bb 0b       	sbc	r27, r27
     598:	48 0f       	add	r20, r24
     59a:	59 1f       	adc	r21, r25
     59c:	6a 1f       	adc	r22, r26
     59e:	7b 1f       	adc	r23, r27
     5a0:	1d 32       	cpi	r17, 0x2D	; 45
     5a2:	51 f4       	brne	.+20     	; 0x5b8 <_ZN11TinyGPSPlus12parseDecimalEPKc+0xaa>
     5a4:	8a 01       	movw	r16, r20
     5a6:	9b 01       	movw	r18, r22
     5a8:	66 27       	eor	r22, r22
     5aa:	77 27       	eor	r23, r23
     5ac:	cb 01       	movw	r24, r22
     5ae:	60 1b       	sub	r22, r16
     5b0:	71 0b       	sbc	r23, r17
     5b2:	82 0b       	sbc	r24, r18
     5b4:	93 0b       	sbc	r25, r19
     5b6:	02 c0       	rjmp	.+4      	; 0x5bc <_ZN11TinyGPSPlus12parseDecimalEPKc+0xae>
     5b8:	cb 01       	movw	r24, r22
     5ba:	ba 01       	movw	r22, r20
     5bc:	df 91       	pop	r29
     5be:	cf 91       	pop	r28
     5c0:	1f 91       	pop	r17
     5c2:	0f 91       	pop	r16
     5c4:	08 95       	ret

000005c6 <_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees>:
     5c6:	2f 92       	push	r2
     5c8:	3f 92       	push	r3
     5ca:	4f 92       	push	r4
     5cc:	5f 92       	push	r5
     5ce:	6f 92       	push	r6
     5d0:	7f 92       	push	r7
     5d2:	8f 92       	push	r8
     5d4:	9f 92       	push	r9
     5d6:	af 92       	push	r10
     5d8:	bf 92       	push	r11
     5da:	cf 92       	push	r12
     5dc:	df 92       	push	r13
     5de:	ef 92       	push	r14
     5e0:	ff 92       	push	r15
     5e2:	0f 93       	push	r16
     5e4:	1f 93       	push	r17
     5e6:	cf 93       	push	r28
     5e8:	df 93       	push	r29
     5ea:	ec 01       	movw	r28, r24
     5ec:	1b 01       	movw	r2, r22
     5ee:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <atol>
     5f2:	24 e6       	ldi	r18, 0x64	; 100
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	50 e0       	ldi	r21, 0x00	; 0
     5fa:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     5fe:	29 01       	movw	r4, r18
     600:	3a 01       	movw	r6, r20
     602:	9b 01       	movw	r18, r22
     604:	ac 01       	movw	r20, r24
     606:	44 27       	eor	r20, r20
     608:	55 27       	eor	r21, r21
     60a:	60 e8       	ldi	r22, 0x80	; 128
     60c:	76 e9       	ldi	r23, 0x96	; 150
     60e:	88 e9       	ldi	r24, 0x98	; 152
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	0e 94 0e 17 	call	0x2e1c	; 0x2e1c <__mulsi3>
     616:	4b 01       	movw	r8, r22
     618:	5c 01       	movw	r10, r24
     61a:	f1 01       	movw	r30, r2
     61c:	51 82       	std	Z+1, r5	; 0x01
     61e:	40 82       	st	Z, r4
     620:	28 81       	ld	r18, Y
     622:	82 2f       	mov	r24, r18
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	c0 97       	sbiw	r24, 0x30	; 48
     628:	0a 97       	sbiw	r24, 0x0a	; 10
     62a:	10 f4       	brcc	.+4      	; 0x630 <_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees+0x6a>
     62c:	21 96       	adiw	r28, 0x01	; 1
     62e:	f8 cf       	rjmp	.-16     	; 0x620 <_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees+0x5a>
     630:	2e 32       	cpi	r18, 0x2E	; 46
     632:	29 f5       	brne	.+74     	; 0x67e <_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees+0xb8>
     634:	68 94       	set
     636:	dd 24       	eor	r13, r13
     638:	d7 f8       	bld	r13, 7
     63a:	06 e9       	ldi	r16, 0x96	; 150
     63c:	f8 e9       	ldi	r31, 0x98	; 152
     63e:	e0 e0       	ldi	r30, 0x00	; 0
     640:	21 96       	adiw	r28, 0x01	; 1
     642:	18 81       	ld	r17, Y
     644:	81 2f       	mov	r24, r17
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	c0 97       	sbiw	r24, 0x30	; 48
     64a:	0a 97       	sbiw	r24, 0x0a	; 10
     64c:	c0 f4       	brcc	.+48     	; 0x67e <_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees+0xb8>
     64e:	6d 2d       	mov	r22, r13
     650:	70 2f       	mov	r23, r16
     652:	8f 2f       	mov	r24, r31
     654:	9e 2f       	mov	r25, r30
     656:	2a e0       	ldi	r18, 0x0A	; 10
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	40 e0       	ldi	r20, 0x00	; 0
     65c:	50 e0       	ldi	r21, 0x00	; 0
     65e:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     662:	d2 2e       	mov	r13, r18
     664:	03 2f       	mov	r16, r19
     666:	f4 2f       	mov	r31, r20
     668:	e5 2f       	mov	r30, r21
     66a:	a1 2f       	mov	r26, r17
     66c:	b0 e0       	ldi	r27, 0x00	; 0
     66e:	d0 97       	sbiw	r26, 0x30	; 48
     670:	0e 94 51 17 	call	0x2ea2	; 0x2ea2 <__mulshisi3>
     674:	86 0e       	add	r8, r22
     676:	97 1e       	adc	r9, r23
     678:	a8 1e       	adc	r10, r24
     67a:	b9 1e       	adc	r11, r25
     67c:	e1 cf       	rjmp	.-62     	; 0x640 <_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees+0x7a>
     67e:	d5 01       	movw	r26, r10
     680:	c4 01       	movw	r24, r8
     682:	88 0f       	add	r24, r24
     684:	99 1f       	adc	r25, r25
     686:	aa 1f       	adc	r26, r26
     688:	bb 1f       	adc	r27, r27
     68a:	88 0f       	add	r24, r24
     68c:	99 1f       	adc	r25, r25
     68e:	aa 1f       	adc	r26, r26
     690:	bb 1f       	adc	r27, r27
     692:	88 0d       	add	r24, r8
     694:	99 1d       	adc	r25, r9
     696:	aa 1d       	adc	r26, r10
     698:	bb 1d       	adc	r27, r11
     69a:	bc 01       	movw	r22, r24
     69c:	cd 01       	movw	r24, r26
     69e:	6f 5f       	subi	r22, 0xFF	; 255
     6a0:	7f 4f       	sbci	r23, 0xFF	; 255
     6a2:	8f 4f       	sbci	r24, 0xFF	; 255
     6a4:	9f 4f       	sbci	r25, 0xFF	; 255
     6a6:	2b ea       	ldi	r18, 0xAB	; 171
     6a8:	3a ea       	ldi	r19, 0xAA	; 170
     6aa:	4a ea       	ldi	r20, 0xAA	; 170
     6ac:	5a ea       	ldi	r21, 0xAA	; 170
     6ae:	0e 94 59 17 	call	0x2eb2	; 0x2eb2 <__umulsidi3>
     6b2:	00 e2       	ldi	r16, 0x20	; 32
     6b4:	0e 94 bd 17 	call	0x2f7a	; 0x2f7a <__lshrdi3>
     6b8:	82 2e       	mov	r8, r18
     6ba:	93 2e       	mov	r9, r19
     6bc:	a4 2e       	mov	r10, r20
     6be:	b5 2e       	mov	r11, r21
     6c0:	d5 01       	movw	r26, r10
     6c2:	c4 01       	movw	r24, r8
     6c4:	b6 95       	lsr	r27
     6c6:	a7 95       	ror	r26
     6c8:	97 95       	ror	r25
     6ca:	87 95       	ror	r24
     6cc:	f1 01       	movw	r30, r2
     6ce:	82 83       	std	Z+2, r24	; 0x02
     6d0:	93 83       	std	Z+3, r25	; 0x03
     6d2:	a4 83       	std	Z+4, r26	; 0x04
     6d4:	b5 83       	std	Z+5, r27	; 0x05
     6d6:	16 82       	std	Z+6, r1	; 0x06
     6d8:	df 91       	pop	r29
     6da:	cf 91       	pop	r28
     6dc:	1f 91       	pop	r17
     6de:	0f 91       	pop	r16
     6e0:	ff 90       	pop	r15
     6e2:	ef 90       	pop	r14
     6e4:	df 90       	pop	r13
     6e6:	cf 90       	pop	r12
     6e8:	bf 90       	pop	r11
     6ea:	af 90       	pop	r10
     6ec:	9f 90       	pop	r9
     6ee:	8f 90       	pop	r8
     6f0:	7f 90       	pop	r7
     6f2:	6f 90       	pop	r6
     6f4:	5f 90       	pop	r5
     6f6:	4f 90       	pop	r4
     6f8:	3f 90       	pop	r3
     6fa:	2f 90       	pop	r2
     6fc:	08 95       	ret

000006fe <_ZN11TinyGPSPlus15distanceBetweenEdddd>:
     6fe:	4f 92       	push	r4
     700:	5f 92       	push	r5
     702:	6f 92       	push	r6
     704:	7f 92       	push	r7
     706:	8f 92       	push	r8
     708:	9f 92       	push	r9
     70a:	af 92       	push	r10
     70c:	bf 92       	push	r11
     70e:	cf 92       	push	r12
     710:	df 92       	push	r13
     712:	ef 92       	push	r14
     714:	ff 92       	push	r15
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	cd b7       	in	r28, 0x3d	; 61
     720:	de b7       	in	r29, 0x3e	; 62
     722:	60 97       	sbiw	r28, 0x10	; 16
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	f8 94       	cli
     728:	de bf       	out	0x3e, r29	; 62
     72a:	0f be       	out	0x3f, r0	; 63
     72c:	cd bf       	out	0x3d, r28	; 61
     72e:	69 83       	std	Y+1, r22	; 0x01
     730:	7a 83       	std	Y+2, r23	; 0x02
     732:	8b 83       	std	Y+3, r24	; 0x03
     734:	9c 83       	std	Y+4, r25	; 0x04
     736:	ca 01       	movw	r24, r20
     738:	b9 01       	movw	r22, r18
     73a:	27 01       	movw	r4, r14
     73c:	38 01       	movw	r6, r16
     73e:	a6 01       	movw	r20, r12
     740:	95 01       	movw	r18, r10
     742:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__subsf3>
     746:	25 e3       	ldi	r18, 0x35	; 53
     748:	3a ef       	ldi	r19, 0xFA	; 250
     74a:	4e e8       	ldi	r20, 0x8E	; 142
     74c:	5c e3       	ldi	r21, 0x3C	; 60
     74e:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     752:	6b 01       	movw	r12, r22
     754:	7c 01       	movw	r14, r24
     756:	0e 94 1e 12 	call	0x243c	; 0x243c <sin>
     75a:	6d 87       	std	Y+13, r22	; 0x0d
     75c:	7e 87       	std	Y+14, r23	; 0x0e
     75e:	8f 87       	std	Y+15, r24	; 0x0f
     760:	98 8b       	std	Y+16, r25	; 0x10
     762:	c7 01       	movw	r24, r14
     764:	b6 01       	movw	r22, r12
     766:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <cos>
     76a:	6d 83       	std	Y+5, r22	; 0x05
     76c:	7e 83       	std	Y+6, r23	; 0x06
     76e:	8f 83       	std	Y+7, r24	; 0x07
     770:	98 87       	std	Y+8, r25	; 0x08
     772:	25 e3       	ldi	r18, 0x35	; 53
     774:	3a ef       	ldi	r19, 0xFA	; 250
     776:	4e e8       	ldi	r20, 0x8E	; 142
     778:	5c e3       	ldi	r21, 0x3C	; 60
     77a:	69 81       	ldd	r22, Y+1	; 0x01
     77c:	7a 81       	ldd	r23, Y+2	; 0x02
     77e:	8b 81       	ldd	r24, Y+3	; 0x03
     780:	9c 81       	ldd	r25, Y+4	; 0x04
     782:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     786:	6b 01       	movw	r12, r22
     788:	7c 01       	movw	r14, r24
     78a:	25 e3       	ldi	r18, 0x35	; 53
     78c:	3a ef       	ldi	r19, 0xFA	; 250
     78e:	4e e8       	ldi	r20, 0x8E	; 142
     790:	5c e3       	ldi	r21, 0x3C	; 60
     792:	c3 01       	movw	r24, r6
     794:	b2 01       	movw	r22, r4
     796:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     79a:	2b 01       	movw	r4, r22
     79c:	3c 01       	movw	r6, r24
     79e:	c7 01       	movw	r24, r14
     7a0:	b6 01       	movw	r22, r12
     7a2:	0e 94 1e 12 	call	0x243c	; 0x243c <sin>
     7a6:	4b 01       	movw	r8, r22
     7a8:	5c 01       	movw	r10, r24
     7aa:	c7 01       	movw	r24, r14
     7ac:	b6 01       	movw	r22, r12
     7ae:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <cos>
     7b2:	69 83       	std	Y+1, r22	; 0x01
     7b4:	7a 83       	std	Y+2, r23	; 0x02
     7b6:	8b 83       	std	Y+3, r24	; 0x03
     7b8:	9c 83       	std	Y+4, r25	; 0x04
     7ba:	c3 01       	movw	r24, r6
     7bc:	b2 01       	movw	r22, r4
     7be:	0e 94 1e 12 	call	0x243c	; 0x243c <sin>
     7c2:	69 87       	std	Y+9, r22	; 0x09
     7c4:	7a 87       	std	Y+10, r23	; 0x0a
     7c6:	8b 87       	std	Y+11, r24	; 0x0b
     7c8:	9c 87       	std	Y+12, r25	; 0x0c
     7ca:	c3 01       	movw	r24, r6
     7cc:	b2 01       	movw	r22, r4
     7ce:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <cos>
     7d2:	6b 01       	movw	r12, r22
     7d4:	7c 01       	movw	r14, r24
     7d6:	29 85       	ldd	r18, Y+9	; 0x09
     7d8:	3a 85       	ldd	r19, Y+10	; 0x0a
     7da:	4b 85       	ldd	r20, Y+11	; 0x0b
     7dc:	5c 85       	ldd	r21, Y+12	; 0x0c
     7de:	69 81       	ldd	r22, Y+1	; 0x01
     7e0:	7a 81       	ldd	r23, Y+2	; 0x02
     7e2:	8b 81       	ldd	r24, Y+3	; 0x03
     7e4:	9c 81       	ldd	r25, Y+4	; 0x04
     7e6:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     7ea:	2b 01       	movw	r4, r22
     7ec:	3c 01       	movw	r6, r24
     7ee:	a7 01       	movw	r20, r14
     7f0:	96 01       	movw	r18, r12
     7f2:	c5 01       	movw	r24, r10
     7f4:	b4 01       	movw	r22, r8
     7f6:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     7fa:	9b 01       	movw	r18, r22
     7fc:	ac 01       	movw	r20, r24
     7fe:	6d 81       	ldd	r22, Y+5	; 0x05
     800:	7e 81       	ldd	r23, Y+6	; 0x06
     802:	8f 81       	ldd	r24, Y+7	; 0x07
     804:	98 85       	ldd	r25, Y+8	; 0x08
     806:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     80a:	9b 01       	movw	r18, r22
     80c:	ac 01       	movw	r20, r24
     80e:	c3 01       	movw	r24, r6
     810:	b2 01       	movw	r22, r4
     812:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__subsf3>
     816:	20 e0       	ldi	r18, 0x00	; 0
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	40 e0       	ldi	r20, 0x00	; 0
     81c:	50 e4       	ldi	r21, 0x40	; 64
     81e:	0e 94 ce 11 	call	0x239c	; 0x239c <pow>
     822:	2b 01       	movw	r4, r22
     824:	3c 01       	movw	r6, r24
     826:	a7 01       	movw	r20, r14
     828:	96 01       	movw	r18, r12
     82a:	6d 85       	ldd	r22, Y+13	; 0x0d
     82c:	7e 85       	ldd	r23, Y+14	; 0x0e
     82e:	8f 85       	ldd	r24, Y+15	; 0x0f
     830:	98 89       	ldd	r25, Y+16	; 0x10
     832:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     836:	20 e0       	ldi	r18, 0x00	; 0
     838:	30 e0       	ldi	r19, 0x00	; 0
     83a:	40 e0       	ldi	r20, 0x00	; 0
     83c:	50 e4       	ldi	r21, 0x40	; 64
     83e:	0e 94 ce 11 	call	0x239c	; 0x239c <pow>
     842:	9b 01       	movw	r18, r22
     844:	ac 01       	movw	r20, r24
     846:	c3 01       	movw	r24, r6
     848:	b2 01       	movw	r22, r4
     84a:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__addsf3>
     84e:	0e 94 2c 12 	call	0x2458	; 0x2458 <sqrt>
     852:	2b 01       	movw	r4, r22
     854:	3c 01       	movw	r6, r24
     856:	29 85       	ldd	r18, Y+9	; 0x09
     858:	3a 85       	ldd	r19, Y+10	; 0x0a
     85a:	4b 85       	ldd	r20, Y+11	; 0x0b
     85c:	5c 85       	ldd	r21, Y+12	; 0x0c
     85e:	c5 01       	movw	r24, r10
     860:	b4 01       	movw	r22, r8
     862:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     866:	4b 01       	movw	r8, r22
     868:	5c 01       	movw	r10, r24
     86a:	a7 01       	movw	r20, r14
     86c:	96 01       	movw	r18, r12
     86e:	69 81       	ldd	r22, Y+1	; 0x01
     870:	7a 81       	ldd	r23, Y+2	; 0x02
     872:	8b 81       	ldd	r24, Y+3	; 0x03
     874:	9c 81       	ldd	r25, Y+4	; 0x04
     876:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     87a:	9b 01       	movw	r18, r22
     87c:	ac 01       	movw	r20, r24
     87e:	6d 81       	ldd	r22, Y+5	; 0x05
     880:	7e 81       	ldd	r23, Y+6	; 0x06
     882:	8f 81       	ldd	r24, Y+7	; 0x07
     884:	98 85       	ldd	r25, Y+8	; 0x08
     886:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     88a:	9b 01       	movw	r18, r22
     88c:	ac 01       	movw	r20, r24
     88e:	c5 01       	movw	r24, r10
     890:	b4 01       	movw	r22, r8
     892:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__addsf3>
     896:	9b 01       	movw	r18, r22
     898:	ac 01       	movw	r20, r24
     89a:	c3 01       	movw	r24, r6
     89c:	b2 01       	movw	r22, r4
     89e:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <atan2>
     8a2:	26 e7       	ldi	r18, 0x76	; 118
     8a4:	3b e7       	ldi	r19, 0x7B	; 123
     8a6:	42 ec       	ldi	r20, 0xC2	; 194
     8a8:	5a e4       	ldi	r21, 0x4A	; 74
     8aa:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     8ae:	60 96       	adiw	r28, 0x10	; 16
     8b0:	0f b6       	in	r0, 0x3f	; 63
     8b2:	f8 94       	cli
     8b4:	de bf       	out	0x3e, r29	; 62
     8b6:	0f be       	out	0x3f, r0	; 63
     8b8:	cd bf       	out	0x3d, r28	; 61
     8ba:	df 91       	pop	r29
     8bc:	cf 91       	pop	r28
     8be:	1f 91       	pop	r17
     8c0:	0f 91       	pop	r16
     8c2:	ff 90       	pop	r15
     8c4:	ef 90       	pop	r14
     8c6:	df 90       	pop	r13
     8c8:	cf 90       	pop	r12
     8ca:	bf 90       	pop	r11
     8cc:	af 90       	pop	r10
     8ce:	9f 90       	pop	r9
     8d0:	8f 90       	pop	r8
     8d2:	7f 90       	pop	r7
     8d4:	6f 90       	pop	r6
     8d6:	5f 90       	pop	r5
     8d8:	4f 90       	pop	r4
     8da:	08 95       	ret

000008dc <_ZN11TinyGPSPlus8courseToEdddd>:
     8dc:	4f 92       	push	r4
     8de:	5f 92       	push	r5
     8e0:	6f 92       	push	r6
     8e2:	7f 92       	push	r7
     8e4:	8f 92       	push	r8
     8e6:	9f 92       	push	r9
     8e8:	af 92       	push	r10
     8ea:	bf 92       	push	r11
     8ec:	cf 92       	push	r12
     8ee:	df 92       	push	r13
     8f0:	ef 92       	push	r14
     8f2:	ff 92       	push	r15
     8f4:	0f 93       	push	r16
     8f6:	1f 93       	push	r17
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	cd b7       	in	r28, 0x3d	; 61
     8fe:	de b7       	in	r29, 0x3e	; 62
     900:	28 97       	sbiw	r28, 0x08	; 8
     902:	0f b6       	in	r0, 0x3f	; 63
     904:	f8 94       	cli
     906:	de bf       	out	0x3e, r29	; 62
     908:	0f be       	out	0x3f, r0	; 63
     90a:	cd bf       	out	0x3d, r28	; 61
     90c:	69 83       	std	Y+1, r22	; 0x01
     90e:	7a 83       	std	Y+2, r23	; 0x02
     910:	8b 83       	std	Y+3, r24	; 0x03
     912:	9c 83       	std	Y+4, r25	; 0x04
     914:	ed 82       	std	Y+5, r14	; 0x05
     916:	fe 82       	std	Y+6, r15	; 0x06
     918:	0f 83       	std	Y+7, r16	; 0x07
     91a:	18 87       	std	Y+8, r17	; 0x08
     91c:	c6 01       	movw	r24, r12
     91e:	b5 01       	movw	r22, r10
     920:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__subsf3>
     924:	25 e3       	ldi	r18, 0x35	; 53
     926:	3a ef       	ldi	r19, 0xFA	; 250
     928:	4e e8       	ldi	r20, 0x8E	; 142
     92a:	5c e3       	ldi	r21, 0x3C	; 60
     92c:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     930:	2b 01       	movw	r4, r22
     932:	3c 01       	movw	r6, r24
     934:	25 e3       	ldi	r18, 0x35	; 53
     936:	3a ef       	ldi	r19, 0xFA	; 250
     938:	4e e8       	ldi	r20, 0x8E	; 142
     93a:	5c e3       	ldi	r21, 0x3C	; 60
     93c:	69 81       	ldd	r22, Y+1	; 0x01
     93e:	7a 81       	ldd	r23, Y+2	; 0x02
     940:	8b 81       	ldd	r24, Y+3	; 0x03
     942:	9c 81       	ldd	r25, Y+4	; 0x04
     944:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     948:	4b 01       	movw	r8, r22
     94a:	5c 01       	movw	r10, r24
     94c:	25 e3       	ldi	r18, 0x35	; 53
     94e:	3a ef       	ldi	r19, 0xFA	; 250
     950:	4e e8       	ldi	r20, 0x8E	; 142
     952:	5c e3       	ldi	r21, 0x3C	; 60
     954:	c8 01       	movw	r24, r16
     956:	b7 01       	movw	r22, r14
     958:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     95c:	6b 01       	movw	r12, r22
     95e:	7c 01       	movw	r14, r24
     960:	c3 01       	movw	r24, r6
     962:	b2 01       	movw	r22, r4
     964:	0e 94 1e 12 	call	0x243c	; 0x243c <sin>
     968:	6d 83       	std	Y+5, r22	; 0x05
     96a:	7e 83       	std	Y+6, r23	; 0x06
     96c:	8f 83       	std	Y+7, r24	; 0x07
     96e:	98 87       	std	Y+8, r25	; 0x08
     970:	c7 01       	movw	r24, r14
     972:	b6 01       	movw	r22, r12
     974:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <cos>
     978:	69 83       	std	Y+1, r22	; 0x01
     97a:	7a 83       	std	Y+2, r23	; 0x02
     97c:	8b 83       	std	Y+3, r24	; 0x03
     97e:	9c 83       	std	Y+4, r25	; 0x04
     980:	9b 01       	movw	r18, r22
     982:	ac 01       	movw	r20, r24
     984:	6d 81       	ldd	r22, Y+5	; 0x05
     986:	7e 81       	ldd	r23, Y+6	; 0x06
     988:	8f 81       	ldd	r24, Y+7	; 0x07
     98a:	98 85       	ldd	r25, Y+8	; 0x08
     98c:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     990:	6d 83       	std	Y+5, r22	; 0x05
     992:	7e 83       	std	Y+6, r23	; 0x06
     994:	8f 83       	std	Y+7, r24	; 0x07
     996:	98 87       	std	Y+8, r25	; 0x08
     998:	c5 01       	movw	r24, r10
     99a:	b4 01       	movw	r22, r8
     99c:	0e 94 1e 12 	call	0x243c	; 0x243c <sin>
     9a0:	9b 01       	movw	r18, r22
     9a2:	ac 01       	movw	r20, r24
     9a4:	69 81       	ldd	r22, Y+1	; 0x01
     9a6:	7a 81       	ldd	r23, Y+2	; 0x02
     9a8:	8b 81       	ldd	r24, Y+3	; 0x03
     9aa:	9c 81       	ldd	r25, Y+4	; 0x04
     9ac:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     9b0:	69 83       	std	Y+1, r22	; 0x01
     9b2:	7a 83       	std	Y+2, r23	; 0x02
     9b4:	8b 83       	std	Y+3, r24	; 0x03
     9b6:	9c 83       	std	Y+4, r25	; 0x04
     9b8:	c3 01       	movw	r24, r6
     9ba:	b2 01       	movw	r22, r4
     9bc:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <cos>
     9c0:	9b 01       	movw	r18, r22
     9c2:	ac 01       	movw	r20, r24
     9c4:	69 81       	ldd	r22, Y+1	; 0x01
     9c6:	7a 81       	ldd	r23, Y+2	; 0x02
     9c8:	8b 81       	ldd	r24, Y+3	; 0x03
     9ca:	9c 81       	ldd	r25, Y+4	; 0x04
     9cc:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     9d0:	2b 01       	movw	r4, r22
     9d2:	3c 01       	movw	r6, r24
     9d4:	c5 01       	movw	r24, r10
     9d6:	b4 01       	movw	r22, r8
     9d8:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <cos>
     9dc:	4b 01       	movw	r8, r22
     9de:	5c 01       	movw	r10, r24
     9e0:	c7 01       	movw	r24, r14
     9e2:	b6 01       	movw	r22, r12
     9e4:	0e 94 1e 12 	call	0x243c	; 0x243c <sin>
     9e8:	9b 01       	movw	r18, r22
     9ea:	ac 01       	movw	r20, r24
     9ec:	c5 01       	movw	r24, r10
     9ee:	b4 01       	movw	r22, r8
     9f0:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     9f4:	a3 01       	movw	r20, r6
     9f6:	92 01       	movw	r18, r4
     9f8:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__subsf3>
     9fc:	9b 01       	movw	r18, r22
     9fe:	ac 01       	movw	r20, r24
     a00:	6d 81       	ldd	r22, Y+5	; 0x05
     a02:	7e 81       	ldd	r23, Y+6	; 0x06
     a04:	8f 81       	ldd	r24, Y+7	; 0x07
     a06:	98 85       	ldd	r25, Y+8	; 0x08
     a08:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <atan2>
     a0c:	6b 01       	movw	r12, r22
     a0e:	7c 01       	movw	r14, r24
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	a9 01       	movw	r20, r18
     a16:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <__cmpsf2>
     a1a:	88 23       	and	r24, r24
     a1c:	54 f4       	brge	.+20     	; 0xa32 <_ZN11TinyGPSPlus8courseToEdddd+0x156>
     a1e:	2b ed       	ldi	r18, 0xDB	; 219
     a20:	3f e0       	ldi	r19, 0x0F	; 15
     a22:	49 ec       	ldi	r20, 0xC9	; 201
     a24:	50 e4       	ldi	r21, 0x40	; 64
     a26:	c7 01       	movw	r24, r14
     a28:	b6 01       	movw	r22, r12
     a2a:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__addsf3>
     a2e:	6b 01       	movw	r12, r22
     a30:	7c 01       	movw	r14, r24
     a32:	21 ee       	ldi	r18, 0xE1	; 225
     a34:	3e e2       	ldi	r19, 0x2E	; 46
     a36:	45 e6       	ldi	r20, 0x65	; 101
     a38:	52 e4       	ldi	r21, 0x42	; 66
     a3a:	c7 01       	movw	r24, r14
     a3c:	b6 01       	movw	r22, r12
     a3e:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
     a42:	28 96       	adiw	r28, 0x08	; 8
     a44:	0f b6       	in	r0, 0x3f	; 63
     a46:	f8 94       	cli
     a48:	de bf       	out	0x3e, r29	; 62
     a4a:	0f be       	out	0x3f, r0	; 63
     a4c:	cd bf       	out	0x3d, r28	; 61
     a4e:	df 91       	pop	r29
     a50:	cf 91       	pop	r28
     a52:	1f 91       	pop	r17
     a54:	0f 91       	pop	r16
     a56:	ff 90       	pop	r15
     a58:	ef 90       	pop	r14
     a5a:	df 90       	pop	r13
     a5c:	cf 90       	pop	r12
     a5e:	bf 90       	pop	r11
     a60:	af 90       	pop	r10
     a62:	9f 90       	pop	r9
     a64:	8f 90       	pop	r8
     a66:	7f 90       	pop	r7
     a68:	6f 90       	pop	r6
     a6a:	5f 90       	pop	r5
     a6c:	4f 90       	pop	r4
     a6e:	08 95       	ret

00000a70 <_ZN11TinyGPSPlus8cardinalEd>:
     a70:	20 e0       	ldi	r18, 0x00	; 0
     a72:	30 e0       	ldi	r19, 0x00	; 0
     a74:	44 e3       	ldi	r20, 0x34	; 52
     a76:	51 e4       	ldi	r21, 0x41	; 65
     a78:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__addsf3>
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	44 eb       	ldi	r20, 0xB4	; 180
     a82:	51 e4       	ldi	r21, 0x41	; 65
     a84:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__divsf3>
     a88:	0e 94 0b 10 	call	0x2016	; 0x2016 <__fixsfsi>
     a8c:	6f 70       	andi	r22, 0x0F	; 15
     a8e:	70 78       	andi	r23, 0x80	; 128
     a90:	77 23       	and	r23, r23
     a92:	34 f4       	brge	.+12     	; 0xaa0 <_ZN11TinyGPSPlus8cardinalEd+0x30>
     a94:	61 50       	subi	r22, 0x01	; 1
     a96:	71 09       	sbc	r23, r1
     a98:	60 6f       	ori	r22, 0xF0	; 240
     a9a:	7f 6f       	ori	r23, 0xFF	; 255
     a9c:	6f 5f       	subi	r22, 0xFF	; 255
     a9e:	7f 4f       	sbci	r23, 0xFF	; 255
     aa0:	66 0f       	add	r22, r22
     aa2:	77 1f       	adc	r23, r23
     aa4:	fb 01       	movw	r30, r22
     aa6:	e4 56       	subi	r30, 0x64	; 100
     aa8:	ff 4f       	sbci	r31, 0xFF	; 255
     aaa:	80 81       	ld	r24, Z
     aac:	91 81       	ldd	r25, Z+1	; 0x01
     aae:	08 95       	ret

00000ab0 <_ZN15TinyGPSLocation6commitEv>:
     ab0:	cf 93       	push	r28
     ab2:	df 93       	push	r29
     ab4:	ec 01       	movw	r28, r24
     ab6:	87 e0       	ldi	r24, 0x07	; 7
     ab8:	fe 01       	movw	r30, r28
     aba:	70 96       	adiw	r30, 0x10	; 16
     abc:	de 01       	movw	r26, r28
     abe:	12 96       	adiw	r26, 0x02	; 2
     ac0:	01 90       	ld	r0, Z+
     ac2:	0d 92       	st	X+, r0
     ac4:	8a 95       	dec	r24
     ac6:	e1 f7       	brne	.-8      	; 0xac0 <_ZN15TinyGPSLocation6commitEv+0x10>
     ac8:	87 e0       	ldi	r24, 0x07	; 7
     aca:	fe 01       	movw	r30, r28
     acc:	77 96       	adiw	r30, 0x17	; 23
     ace:	de 01       	movw	r26, r28
     ad0:	19 96       	adiw	r26, 0x09	; 9
     ad2:	01 90       	ld	r0, Z+
     ad4:	0d 92       	st	X+, r0
     ad6:	8a 95       	dec	r24
     ad8:	e1 f7       	brne	.-8      	; 0xad2 <_ZN15TinyGPSLocation6commitEv+0x22>
     ada:	0e 94 cd 01 	call	0x39a	; 0x39a <_Z10getrunTimev>
     ade:	2e 8f       	std	Y+30, r18	; 0x1e
     ae0:	3f 8f       	std	Y+31, r19	; 0x1f
     ae2:	48 a3       	std	Y+32, r20	; 0x20
     ae4:	59 a3       	std	Y+33, r21	; 0x21
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	89 83       	std	Y+1, r24	; 0x01
     aea:	88 83       	st	Y, r24
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	08 95       	ret

00000af2 <_ZN15TinyGPSLocation11setLatitudeEPKc>:
     af2:	9b 01       	movw	r18, r22
     af4:	bc 01       	movw	r22, r24
     af6:	60 5f       	subi	r22, 0xF0	; 240
     af8:	7f 4f       	sbci	r23, 0xFF	; 255
     afa:	c9 01       	movw	r24, r18
     afc:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees>
     b00:	08 95       	ret

00000b02 <_ZN15TinyGPSLocation12setLongitudeEPKc>:
     b02:	9b 01       	movw	r18, r22
     b04:	bc 01       	movw	r22, r24
     b06:	69 5e       	subi	r22, 0xE9	; 233
     b08:	7f 4f       	sbci	r23, 0xFF	; 255
     b0a:	c9 01       	movw	r24, r18
     b0c:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees>
     b10:	08 95       	ret

00000b12 <_ZN15TinyGPSLocation3latEv>:
     b12:	cf 92       	push	r12
     b14:	df 92       	push	r13
     b16:	ef 92       	push	r14
     b18:	ff 92       	push	r15
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	ec 01       	movw	r28, r24
     b20:	19 82       	std	Y+1, r1	; 0x01
     b22:	6a 81       	ldd	r22, Y+2	; 0x02
     b24:	7b 81       	ldd	r23, Y+3	; 0x03
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	0e 94 41 10 	call	0x2082	; 0x2082 <__floatunsisf>
     b2e:	6b 01       	movw	r12, r22
     b30:	7c 01       	movw	r14, r24
     b32:	6c 81       	ldd	r22, Y+4	; 0x04
     b34:	7d 81       	ldd	r23, Y+5	; 0x05
     b36:	8e 81       	ldd	r24, Y+6	; 0x06
     b38:	9f 81       	ldd	r25, Y+7	; 0x07
     b3a:	0e 94 41 10 	call	0x2082	; 0x2082 <__floatunsisf>
     b3e:	28 e2       	ldi	r18, 0x28	; 40
     b40:	3b e6       	ldi	r19, 0x6B	; 107
     b42:	4e e6       	ldi	r20, 0x6E	; 110
     b44:	5e e4       	ldi	r21, 0x4E	; 78
     b46:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__divsf3>
     b4a:	9b 01       	movw	r18, r22
     b4c:	ac 01       	movw	r20, r24
     b4e:	c7 01       	movw	r24, r14
     b50:	b6 01       	movw	r22, r12
     b52:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__addsf3>
     b56:	28 85       	ldd	r18, Y+8	; 0x08
     b58:	21 11       	cpse	r18, r1
     b5a:	90 58       	subi	r25, 0x80	; 128
     b5c:	df 91       	pop	r29
     b5e:	cf 91       	pop	r28
     b60:	ff 90       	pop	r15
     b62:	ef 90       	pop	r14
     b64:	df 90       	pop	r13
     b66:	cf 90       	pop	r12
     b68:	08 95       	ret

00000b6a <_ZN15TinyGPSLocation3lngEv>:
     b6a:	cf 92       	push	r12
     b6c:	df 92       	push	r13
     b6e:	ef 92       	push	r14
     b70:	ff 92       	push	r15
     b72:	cf 93       	push	r28
     b74:	df 93       	push	r29
     b76:	ec 01       	movw	r28, r24
     b78:	19 82       	std	Y+1, r1	; 0x01
     b7a:	69 85       	ldd	r22, Y+9	; 0x09
     b7c:	7a 85       	ldd	r23, Y+10	; 0x0a
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 94 41 10 	call	0x2082	; 0x2082 <__floatunsisf>
     b86:	6b 01       	movw	r12, r22
     b88:	7c 01       	movw	r14, r24
     b8a:	6b 85       	ldd	r22, Y+11	; 0x0b
     b8c:	7c 85       	ldd	r23, Y+12	; 0x0c
     b8e:	8d 85       	ldd	r24, Y+13	; 0x0d
     b90:	9e 85       	ldd	r25, Y+14	; 0x0e
     b92:	0e 94 41 10 	call	0x2082	; 0x2082 <__floatunsisf>
     b96:	28 e2       	ldi	r18, 0x28	; 40
     b98:	3b e6       	ldi	r19, 0x6B	; 107
     b9a:	4e e6       	ldi	r20, 0x6E	; 110
     b9c:	5e e4       	ldi	r21, 0x4E	; 78
     b9e:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__divsf3>
     ba2:	9b 01       	movw	r18, r22
     ba4:	ac 01       	movw	r20, r24
     ba6:	c7 01       	movw	r24, r14
     ba8:	b6 01       	movw	r22, r12
     baa:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__addsf3>
     bae:	2f 85       	ldd	r18, Y+15	; 0x0f
     bb0:	21 11       	cpse	r18, r1
     bb2:	90 58       	subi	r25, 0x80	; 128
     bb4:	df 91       	pop	r29
     bb6:	cf 91       	pop	r28
     bb8:	ff 90       	pop	r15
     bba:	ef 90       	pop	r14
     bbc:	df 90       	pop	r13
     bbe:	cf 90       	pop	r12
     bc0:	08 95       	ret

00000bc2 <_ZN11TinyGPSDate6commitEv>:
     bc2:	cf 93       	push	r28
     bc4:	df 93       	push	r29
     bc6:	ec 01       	movw	r28, r24
     bc8:	8e 81       	ldd	r24, Y+6	; 0x06
     bca:	9f 81       	ldd	r25, Y+7	; 0x07
     bcc:	a8 85       	ldd	r26, Y+8	; 0x08
     bce:	b9 85       	ldd	r27, Y+9	; 0x09
     bd0:	8a 83       	std	Y+2, r24	; 0x02
     bd2:	9b 83       	std	Y+3, r25	; 0x03
     bd4:	ac 83       	std	Y+4, r26	; 0x04
     bd6:	bd 83       	std	Y+5, r27	; 0x05
     bd8:	0e 94 cd 01 	call	0x39a	; 0x39a <_Z10getrunTimev>
     bdc:	2a 87       	std	Y+10, r18	; 0x0a
     bde:	3b 87       	std	Y+11, r19	; 0x0b
     be0:	4c 87       	std	Y+12, r20	; 0x0c
     be2:	5d 87       	std	Y+13, r21	; 0x0d
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	89 83       	std	Y+1, r24	; 0x01
     be8:	88 83       	st	Y, r24
     bea:	df 91       	pop	r29
     bec:	cf 91       	pop	r28
     bee:	08 95       	ret

00000bf0 <_ZN11TinyGPSTime6commitEv>:
     bf0:	cf 93       	push	r28
     bf2:	df 93       	push	r29
     bf4:	ec 01       	movw	r28, r24
     bf6:	8e 81       	ldd	r24, Y+6	; 0x06
     bf8:	9f 81       	ldd	r25, Y+7	; 0x07
     bfa:	a8 85       	ldd	r26, Y+8	; 0x08
     bfc:	b9 85       	ldd	r27, Y+9	; 0x09
     bfe:	8a 83       	std	Y+2, r24	; 0x02
     c00:	9b 83       	std	Y+3, r25	; 0x03
     c02:	ac 83       	std	Y+4, r26	; 0x04
     c04:	bd 83       	std	Y+5, r27	; 0x05
     c06:	0e 94 cd 01 	call	0x39a	; 0x39a <_Z10getrunTimev>
     c0a:	2a 87       	std	Y+10, r18	; 0x0a
     c0c:	3b 87       	std	Y+11, r19	; 0x0b
     c0e:	4c 87       	std	Y+12, r20	; 0x0c
     c10:	5d 87       	std	Y+13, r21	; 0x0d
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	89 83       	std	Y+1, r24	; 0x01
     c16:	88 83       	st	Y, r24
     c18:	df 91       	pop	r29
     c1a:	cf 91       	pop	r28
     c1c:	08 95       	ret

00000c1e <_ZN11TinyGPSTime7setTimeEPKc>:
     c1e:	cf 93       	push	r28
     c20:	df 93       	push	r29
     c22:	ec 01       	movw	r28, r24
     c24:	cb 01       	movw	r24, r22
     c26:	0e 94 87 02 	call	0x50e	; 0x50e <_ZN11TinyGPSPlus12parseDecimalEPKc>
     c2a:	6e 83       	std	Y+6, r22	; 0x06
     c2c:	7f 83       	std	Y+7, r23	; 0x07
     c2e:	88 87       	std	Y+8, r24	; 0x08
     c30:	99 87       	std	Y+9, r25	; 0x09
     c32:	df 91       	pop	r29
     c34:	cf 91       	pop	r28
     c36:	08 95       	ret

00000c38 <_ZN11TinyGPSDate7setDateEPKc>:
     c38:	cf 93       	push	r28
     c3a:	df 93       	push	r29
     c3c:	ec 01       	movw	r28, r24
     c3e:	cb 01       	movw	r24, r22
     c40:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <atol>
     c44:	6e 83       	std	Y+6, r22	; 0x06
     c46:	7f 83       	std	Y+7, r23	; 0x07
     c48:	88 87       	std	Y+8, r24	; 0x08
     c4a:	99 87       	std	Y+9, r25	; 0x09
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	08 95       	ret

00000c52 <_ZN11TinyGPSDate4yearEv>:
     c52:	fc 01       	movw	r30, r24
     c54:	11 82       	std	Z+1, r1	; 0x01
     c56:	62 81       	ldd	r22, Z+2	; 0x02
     c58:	73 81       	ldd	r23, Z+3	; 0x03
     c5a:	84 81       	ldd	r24, Z+4	; 0x04
     c5c:	95 81       	ldd	r25, Z+5	; 0x05
     c5e:	24 e6       	ldi	r18, 0x64	; 100
     c60:	30 e0       	ldi	r19, 0x00	; 0
     c62:	40 e0       	ldi	r20, 0x00	; 0
     c64:	50 e0       	ldi	r21, 0x00	; 0
     c66:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     c6a:	cb 01       	movw	r24, r22
     c6c:	80 53       	subi	r24, 0x30	; 48
     c6e:	98 4f       	sbci	r25, 0xF8	; 248
     c70:	08 95       	ret

00000c72 <_ZN11TinyGPSDate5monthEv>:
     c72:	cf 92       	push	r12
     c74:	df 92       	push	r13
     c76:	ef 92       	push	r14
     c78:	ff 92       	push	r15
     c7a:	fc 01       	movw	r30, r24
     c7c:	11 82       	std	Z+1, r1	; 0x01
     c7e:	62 81       	ldd	r22, Z+2	; 0x02
     c80:	73 81       	ldd	r23, Z+3	; 0x03
     c82:	84 81       	ldd	r24, Z+4	; 0x04
     c84:	95 81       	ldd	r25, Z+5	; 0x05
     c86:	0f 2e       	mov	r0, r31
     c88:	f4 e6       	ldi	r31, 0x64	; 100
     c8a:	cf 2e       	mov	r12, r31
     c8c:	d1 2c       	mov	r13, r1
     c8e:	e1 2c       	mov	r14, r1
     c90:	f1 2c       	mov	r15, r1
     c92:	f0 2d       	mov	r31, r0
     c94:	a7 01       	movw	r20, r14
     c96:	96 01       	movw	r18, r12
     c98:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     c9c:	ca 01       	movw	r24, r20
     c9e:	b9 01       	movw	r22, r18
     ca0:	a7 01       	movw	r20, r14
     ca2:	96 01       	movw	r18, r12
     ca4:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     ca8:	86 2f       	mov	r24, r22
     caa:	ff 90       	pop	r15
     cac:	ef 90       	pop	r14
     cae:	df 90       	pop	r13
     cb0:	cf 90       	pop	r12
     cb2:	08 95       	ret

00000cb4 <_ZN11TinyGPSDate3dayEv>:
     cb4:	fc 01       	movw	r30, r24
     cb6:	11 82       	std	Z+1, r1	; 0x01
     cb8:	62 81       	ldd	r22, Z+2	; 0x02
     cba:	73 81       	ldd	r23, Z+3	; 0x03
     cbc:	84 81       	ldd	r24, Z+4	; 0x04
     cbe:	95 81       	ldd	r25, Z+5	; 0x05
     cc0:	20 e1       	ldi	r18, 0x10	; 16
     cc2:	37 e2       	ldi	r19, 0x27	; 39
     cc4:	40 e0       	ldi	r20, 0x00	; 0
     cc6:	50 e0       	ldi	r21, 0x00	; 0
     cc8:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     ccc:	82 2f       	mov	r24, r18
     cce:	08 95       	ret

00000cd0 <_ZN11TinyGPSTime4hourEv>:
     cd0:	fc 01       	movw	r30, r24
     cd2:	11 82       	std	Z+1, r1	; 0x01
     cd4:	62 81       	ldd	r22, Z+2	; 0x02
     cd6:	73 81       	ldd	r23, Z+3	; 0x03
     cd8:	84 81       	ldd	r24, Z+4	; 0x04
     cda:	95 81       	ldd	r25, Z+5	; 0x05
     cdc:	20 e4       	ldi	r18, 0x40	; 64
     cde:	32 e4       	ldi	r19, 0x42	; 66
     ce0:	4f e0       	ldi	r20, 0x0F	; 15
     ce2:	50 e0       	ldi	r21, 0x00	; 0
     ce4:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     ce8:	82 2f       	mov	r24, r18
     cea:	08 95       	ret

00000cec <_ZN11TinyGPSTime6minuteEv>:
     cec:	fc 01       	movw	r30, r24
     cee:	11 82       	std	Z+1, r1	; 0x01
     cf0:	62 81       	ldd	r22, Z+2	; 0x02
     cf2:	73 81       	ldd	r23, Z+3	; 0x03
     cf4:	84 81       	ldd	r24, Z+4	; 0x04
     cf6:	95 81       	ldd	r25, Z+5	; 0x05
     cf8:	20 e1       	ldi	r18, 0x10	; 16
     cfa:	37 e2       	ldi	r19, 0x27	; 39
     cfc:	40 e0       	ldi	r20, 0x00	; 0
     cfe:	50 e0       	ldi	r21, 0x00	; 0
     d00:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     d04:	ca 01       	movw	r24, r20
     d06:	b9 01       	movw	r22, r18
     d08:	24 e6       	ldi	r18, 0x64	; 100
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	40 e0       	ldi	r20, 0x00	; 0
     d0e:	50 e0       	ldi	r21, 0x00	; 0
     d10:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     d14:	86 2f       	mov	r24, r22
     d16:	08 95       	ret

00000d18 <_ZN11TinyGPSTime6secondEv>:
     d18:	cf 92       	push	r12
     d1a:	df 92       	push	r13
     d1c:	ef 92       	push	r14
     d1e:	ff 92       	push	r15
     d20:	fc 01       	movw	r30, r24
     d22:	11 82       	std	Z+1, r1	; 0x01
     d24:	62 81       	ldd	r22, Z+2	; 0x02
     d26:	73 81       	ldd	r23, Z+3	; 0x03
     d28:	84 81       	ldd	r24, Z+4	; 0x04
     d2a:	95 81       	ldd	r25, Z+5	; 0x05
     d2c:	0f 2e       	mov	r0, r31
     d2e:	f4 e6       	ldi	r31, 0x64	; 100
     d30:	cf 2e       	mov	r12, r31
     d32:	d1 2c       	mov	r13, r1
     d34:	e1 2c       	mov	r14, r1
     d36:	f1 2c       	mov	r15, r1
     d38:	f0 2d       	mov	r31, r0
     d3a:	a7 01       	movw	r20, r14
     d3c:	96 01       	movw	r18, r12
     d3e:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     d42:	ca 01       	movw	r24, r20
     d44:	b9 01       	movw	r22, r18
     d46:	a7 01       	movw	r20, r14
     d48:	96 01       	movw	r18, r12
     d4a:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <__udivmodsi4>
     d4e:	86 2f       	mov	r24, r22
     d50:	ff 90       	pop	r15
     d52:	ef 90       	pop	r14
     d54:	df 90       	pop	r13
     d56:	cf 90       	pop	r12
     d58:	08 95       	ret

00000d5a <_ZN14TinyGPSDecimal6commitEv>:

void TinyGPSDecimal::commit()
{
     d5a:	cf 93       	push	r28
     d5c:	df 93       	push	r29
     d5e:	ec 01       	movw	r28, r24
   val = newval;
     d60:	8a 85       	ldd	r24, Y+10	; 0x0a
     d62:	9b 85       	ldd	r25, Y+11	; 0x0b
     d64:	ac 85       	ldd	r26, Y+12	; 0x0c
     d66:	bd 85       	ldd	r27, Y+13	; 0x0d
     d68:	8e 83       	std	Y+6, r24	; 0x06
     d6a:	9f 83       	std	Y+7, r25	; 0x07
     d6c:	a8 87       	std	Y+8, r26	; 0x08
     d6e:	b9 87       	std	Y+9, r27	; 0x09
   lastCommitTime = getrunTime();
     d70:	0e 94 cd 01 	call	0x39a	; 0x39a <_Z10getrunTimev>
     d74:	2a 83       	std	Y+2, r18	; 0x02
     d76:	3b 83       	std	Y+3, r19	; 0x03
     d78:	4c 83       	std	Y+4, r20	; 0x04
     d7a:	5d 83       	std	Y+5, r21	; 0x05
   valid = updated = true;
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	89 83       	std	Y+1, r24	; 0x01
     d80:	88 83       	st	Y, r24
}
     d82:	df 91       	pop	r29
     d84:	cf 91       	pop	r28
     d86:	08 95       	ret

00000d88 <_ZN14TinyGPSDecimal3setEPKc>:

void TinyGPSDecimal::set(const char *term)
{
     d88:	cf 93       	push	r28
     d8a:	df 93       	push	r29
     d8c:	ec 01       	movw	r28, r24
     d8e:	cb 01       	movw	r24, r22
   newval = TinyGPSPlus::parseDecimal(term);
     d90:	0e 94 87 02 	call	0x50e	; 0x50e <_ZN11TinyGPSPlus12parseDecimalEPKc>
     d94:	6a 87       	std	Y+10, r22	; 0x0a
     d96:	7b 87       	std	Y+11, r23	; 0x0b
     d98:	8c 87       	std	Y+12, r24	; 0x0c
     d9a:	9d 87       	std	Y+13, r25	; 0x0d
}
     d9c:	df 91       	pop	r29
     d9e:	cf 91       	pop	r28
     da0:	08 95       	ret

00000da2 <_ZN14TinyGPSInteger6commitEv>:

void TinyGPSInteger::commit()
{
     da2:	cf 93       	push	r28
     da4:	df 93       	push	r29
     da6:	ec 01       	movw	r28, r24
   val = newval;
     da8:	8a 85       	ldd	r24, Y+10	; 0x0a
     daa:	9b 85       	ldd	r25, Y+11	; 0x0b
     dac:	ac 85       	ldd	r26, Y+12	; 0x0c
     dae:	bd 85       	ldd	r27, Y+13	; 0x0d
     db0:	8e 83       	std	Y+6, r24	; 0x06
     db2:	9f 83       	std	Y+7, r25	; 0x07
     db4:	a8 87       	std	Y+8, r26	; 0x08
     db6:	b9 87       	std	Y+9, r27	; 0x09
   lastCommitTime = getrunTime();
     db8:	0e 94 cd 01 	call	0x39a	; 0x39a <_Z10getrunTimev>
     dbc:	2a 83       	std	Y+2, r18	; 0x02
     dbe:	3b 83       	std	Y+3, r19	; 0x03
     dc0:	4c 83       	std	Y+4, r20	; 0x04
     dc2:	5d 83       	std	Y+5, r21	; 0x05
   valid = updated = true;
     dc4:	81 e0       	ldi	r24, 0x01	; 1
     dc6:	89 83       	std	Y+1, r24	; 0x01
     dc8:	88 83       	st	Y, r24
}
     dca:	df 91       	pop	r29
     dcc:	cf 91       	pop	r28
     dce:	08 95       	ret

00000dd0 <_ZN14TinyGPSInteger3setEPKc>:

void TinyGPSInteger::set(const char *term)
{
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	ec 01       	movw	r28, r24
     dd6:	cb 01       	movw	r24, r22
   newval = atol(term);
     dd8:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <atol>
     ddc:	6a 87       	std	Y+10, r22	; 0x0a
     dde:	7b 87       	std	Y+11, r23	; 0x0b
     de0:	8c 87       	std	Y+12, r24	; 0x0c
     de2:	9d 87       	std	Y+13, r25	; 0x0d
}
     de4:	df 91       	pop	r29
     de6:	cf 91       	pop	r28
     de8:	08 95       	ret

00000dea <_ZN13TinyGPSCustom6commitEv>:
   // Insert this item into the GPS tree
   gps.insertCustom(this, _sentenceName, _termNumber);
}

void TinyGPSCustom::commit()
{
     dea:	cf 93       	push	r28
     dec:	df 93       	push	r29
     dee:	ec 01       	movw	r28, r24
   strcpy(this->buffer, this->stagingBuffer);
     df0:	bc 01       	movw	r22, r24
     df2:	40 96       	adiw	r24, 0x10	; 16
     df4:	0e 94 10 19 	call	0x3220	; 0x3220 <strcpy>
   lastCommitTime = getrunTime();
     df8:	0e 94 cd 01 	call	0x39a	; 0x39a <_Z10getrunTimev>
     dfc:	28 a3       	std	Y+32, r18	; 0x20
     dfe:	39 a3       	std	Y+33, r19	; 0x21
     e00:	4a a3       	std	Y+34, r20	; 0x22
     e02:	5b a3       	std	Y+35, r21	; 0x23
   valid = updated = true;
     e04:	81 e0       	ldi	r24, 0x01	; 1
     e06:	8d a3       	std	Y+37, r24	; 0x25
     e08:	8c a3       	std	Y+36, r24	; 0x24
}
     e0a:	df 91       	pop	r29
     e0c:	cf 91       	pop	r28
     e0e:	08 95       	ret

00000e10 <_ZN13TinyGPSCustom3setEPKc>:

void TinyGPSCustom::set(const char *term)
{
   strncpy(this->stagingBuffer, term, sizeof(this->stagingBuffer));
     e10:	40 e1       	ldi	r20, 0x10	; 16
     e12:	50 e0       	ldi	r21, 0x00	; 0
     e14:	0e 94 17 19 	call	0x322e	; 0x322e <strncpy>
     e18:	08 95       	ret

00000e1a <_ZN11TinyGPSPlus16endOfTermHandlerEv>:
#define COMBINE(sentence_type, term_number) (((unsigned)(sentence_type) << 5) | term_number)

// Processes a just-completed term
// Returns true if new sentence has just passed checksum test and is validated
bool TinyGPSPlus::endOfTermHandler()
{
     e1a:	cf 92       	push	r12
     e1c:	df 92       	push	r13
     e1e:	ff 92       	push	r15
     e20:	0f 93       	push	r16
     e22:	1f 93       	push	r17
     e24:	cf 93       	push	r28
     e26:	df 93       	push	r29
     e28:	ec 01       	movw	r28, r24
  // If it's the checksum term, and the checksum checks out, commit
  if (isChecksumTerm)
     e2a:	fc 01       	movw	r30, r24
     e2c:	eb 57       	subi	r30, 0x7B	; 123
     e2e:	ff 4f       	sbci	r31, 0xFF	; 255
     e30:	f0 80       	ld	r15, Z
     e32:	ff 20       	and	r15, r15
     e34:	09 f4       	brne	.+2      	; 0xe38 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x1e>
     e36:	a0 c0       	rjmp	.+320    	; 0xf78 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x15e>
  {
    uint8_t checksum = 16 * fromHex(term[0]) + fromHex(term[1]);
     e38:	31 96       	adiw	r30, 0x01	; 1
     e3a:	60 81       	ld	r22, Z
     e3c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <_ZN11TinyGPSPlus7fromHexEc>
     e40:	18 2f       	mov	r17, r24
     e42:	fe 01       	movw	r30, r28
     e44:	e9 57       	subi	r30, 0x79	; 121
     e46:	ff 4f       	sbci	r31, 0xFF	; 255
     e48:	60 81       	ld	r22, Z
     e4a:	ce 01       	movw	r24, r28
     e4c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <_ZN11TinyGPSPlus7fromHexEc>
     e50:	20 e1       	ldi	r18, 0x10	; 16
     e52:	12 9f       	mul	r17, r18
     e54:	80 0d       	add	r24, r0
     e56:	11 24       	eor	r1, r1
    if (checksum == parity)
     e58:	fe 01       	movw	r30, r28
     e5a:	ec 57       	subi	r30, 0x7C	; 124
     e5c:	ff 4f       	sbci	r31, 0xFF	; 255
     e5e:	90 81       	ld	r25, Z
     e60:	89 13       	cpse	r24, r25
     e62:	7b c0       	rjmp	.+246    	; 0xf5a <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x140>
    {
      passedChecksumCount++;
     e64:	b5 96       	adiw	r30, 0x25	; 37
     e66:	80 81       	ld	r24, Z
     e68:	91 81       	ldd	r25, Z+1	; 0x01
     e6a:	a2 81       	ldd	r26, Z+2	; 0x02
     e6c:	b3 81       	ldd	r27, Z+3	; 0x03
     e6e:	01 96       	adiw	r24, 0x01	; 1
     e70:	a1 1d       	adc	r26, r1
     e72:	b1 1d       	adc	r27, r1
     e74:	80 83       	st	Z, r24
     e76:	91 83       	std	Z+1, r25	; 0x01
     e78:	a2 83       	std	Z+2, r26	; 0x02
     e7a:	b3 83       	std	Z+3, r27	; 0x03
      if (sentenceHasFix)
     e7c:	71 97       	sbiw	r30, 0x11	; 17
     e7e:	80 81       	ld	r24, Z
     e80:	88 23       	and	r24, r24
     e82:	61 f0       	breq	.+24     	; 0xe9c <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x82>
        ++sentencesWithFixCount;
     e84:	39 96       	adiw	r30, 0x09	; 9
     e86:	80 81       	ld	r24, Z
     e88:	91 81       	ldd	r25, Z+1	; 0x01
     e8a:	a2 81       	ldd	r26, Z+2	; 0x02
     e8c:	b3 81       	ldd	r27, Z+3	; 0x03
     e8e:	01 96       	adiw	r24, 0x01	; 1
     e90:	a1 1d       	adc	r26, r1
     e92:	b1 1d       	adc	r27, r1
     e94:	80 83       	st	Z, r24
     e96:	91 83       	std	Z+1, r25	; 0x01
     e98:	a2 83       	std	Z+2, r26	; 0x02
     e9a:	b3 83       	std	Z+3, r27	; 0x03

      switch(curSentenceType)
     e9c:	fe 01       	movw	r30, r28
     e9e:	eb 56       	subi	r30, 0x6B	; 107
     ea0:	ff 4f       	sbci	r31, 0xFF	; 255
     ea2:	80 81       	ld	r24, Z
     ea4:	88 23       	and	r24, r24
     ea6:	e9 f0       	breq	.+58     	; 0xee2 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0xc8>
     ea8:	81 30       	cpi	r24, 0x01	; 1
     eaa:	b9 f5       	brne	.+110    	; 0xf1a <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x100>
      {
      case GPS_SENTENCE_GPRMC:
        date.commit();
     eac:	ce 01       	movw	r24, r28
     eae:	82 96       	adiw	r24, 0x22	; 34
     eb0:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_ZN11TinyGPSDate6commitEv>
        time.commit();
     eb4:	ce 01       	movw	r24, r28
     eb6:	c0 96       	adiw	r24, 0x30	; 48
     eb8:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <_ZN11TinyGPSTime6commitEv>
        if (sentenceHasFix)
     ebc:	fe 01       	movw	r30, r28
     ebe:	e8 56       	subi	r30, 0x68	; 104
     ec0:	ff 4f       	sbci	r31, 0xFF	; 255
     ec2:	80 81       	ld	r24, Z
     ec4:	88 23       	and	r24, r24
     ec6:	49 f1       	breq	.+82     	; 0xf1a <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x100>
        {
           location.commit();
     ec8:	ce 01       	movw	r24, r28
     eca:	0e 94 58 05 	call	0xab0	; 0xab0 <_ZN15TinyGPSLocation6commitEv>
           speed.commit();
     ece:	ce 01       	movw	r24, r28
     ed0:	ce 96       	adiw	r24, 0x3e	; 62
     ed2:	0e 94 ad 06 	call	0xd5a	; 0xd5a <_ZN14TinyGPSDecimal6commitEv>
           course.commit();
     ed6:	ce 01       	movw	r24, r28
     ed8:	84 5b       	subi	r24, 0xB4	; 180
     eda:	9f 4f       	sbci	r25, 0xFF	; 255
     edc:	0e 94 ad 06 	call	0xd5a	; 0xd5a <_ZN14TinyGPSDecimal6commitEv>
     ee0:	1c c0       	rjmp	.+56     	; 0xf1a <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x100>
        }
        break;
      case GPS_SENTENCE_GPGGA:
        time.commit();
     ee2:	ce 01       	movw	r24, r28
     ee4:	c0 96       	adiw	r24, 0x30	; 48
     ee6:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <_ZN11TinyGPSTime6commitEv>
        if (sentenceHasFix)
     eea:	fe 01       	movw	r30, r28
     eec:	e8 56       	subi	r30, 0x68	; 104
     eee:	ff 4f       	sbci	r31, 0xFF	; 255
     ef0:	80 81       	ld	r24, Z
     ef2:	88 23       	and	r24, r24
     ef4:	41 f0       	breq	.+16     	; 0xf06 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0xec>
        {
          location.commit();
     ef6:	ce 01       	movw	r24, r28
     ef8:	0e 94 58 05 	call	0xab0	; 0xab0 <_ZN15TinyGPSLocation6commitEv>
          altitude.commit();
     efc:	ce 01       	movw	r24, r28
     efe:	86 5a       	subi	r24, 0xA6	; 166
     f00:	9f 4f       	sbci	r25, 0xFF	; 255
     f02:	0e 94 ad 06 	call	0xd5a	; 0xd5a <_ZN14TinyGPSDecimal6commitEv>
        }
        satellites.commit();
     f06:	ce 01       	movw	r24, r28
     f08:	88 59       	subi	r24, 0x98	; 152
     f0a:	9f 4f       	sbci	r25, 0xFF	; 255
     f0c:	0e 94 d1 06 	call	0xda2	; 0xda2 <_ZN14TinyGPSInteger6commitEv>
        hdop.commit();
     f10:	ce 01       	movw	r24, r28
     f12:	8a 58       	subi	r24, 0x8A	; 138
     f14:	9f 4f       	sbci	r25, 0xFF	; 255
     f16:	0e 94 ad 06 	call	0xd5a	; 0xd5a <_ZN14TinyGPSDecimal6commitEv>
        break;
      }

      // Commit all custom listeners of this sentence type
      for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0; p = p->next)
     f1a:	fe 01       	movw	r30, r28
     f1c:	e5 56       	subi	r30, 0x65	; 101
     f1e:	ff 4f       	sbci	r31, 0xFF	; 255
     f20:	00 81       	ld	r16, Z
     f22:	11 81       	ldd	r17, Z+1	; 0x01
     f24:	01 15       	cp	r16, r1
     f26:	11 05       	cpc	r17, r1
     f28:	09 f4       	brne	.+2      	; 0xf2c <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x112>
     f2a:	42 c1       	rjmp	.+644    	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>
     f2c:	fe 01       	movw	r30, r28
     f2e:	e5 56       	subi	r30, 0x65	; 101
     f30:	ff 4f       	sbci	r31, 0xFF	; 255
     f32:	01 90       	ld	r0, Z+
     f34:	f0 81       	ld	r31, Z
     f36:	e0 2d       	mov	r30, r0
     f38:	66 a1       	ldd	r22, Z+38	; 0x26
     f3a:	77 a1       	ldd	r23, Z+39	; 0x27
     f3c:	f8 01       	movw	r30, r16
     f3e:	86 a1       	ldd	r24, Z+38	; 0x26
     f40:	97 a1       	ldd	r25, Z+39	; 0x27
     f42:	0e 94 07 19 	call	0x320e	; 0x320e <strcmp>
     f46:	89 2b       	or	r24, r25
     f48:	09 f0       	breq	.+2      	; 0xf4c <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x132>
     f4a:	32 c1       	rjmp	.+612    	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>
         p->commit();
     f4c:	c8 01       	movw	r24, r16
     f4e:	0e 94 f5 06 	call	0xdea	; 0xdea <_ZN13TinyGPSCustom6commitEv>
        hdop.commit();
        break;
      }

      // Commit all custom listeners of this sentence type
      for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0; p = p->next)
     f52:	f8 01       	movw	r30, r16
     f54:	02 a5       	ldd	r16, Z+42	; 0x2a
     f56:	13 a5       	ldd	r17, Z+43	; 0x2b
     f58:	e5 cf       	rjmp	.-54     	; 0xf24 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x10a>
      return true;
    }

    else
    {
      ++failedChecksumCount;
     f5a:	cb 55       	subi	r28, 0x5B	; 91
     f5c:	df 4f       	sbci	r29, 0xFF	; 255
     f5e:	88 81       	ld	r24, Y
     f60:	99 81       	ldd	r25, Y+1	; 0x01
     f62:	aa 81       	ldd	r26, Y+2	; 0x02
     f64:	bb 81       	ldd	r27, Y+3	; 0x03
     f66:	01 96       	adiw	r24, 0x01	; 1
     f68:	a1 1d       	adc	r26, r1
     f6a:	b1 1d       	adc	r27, r1
     f6c:	88 83       	st	Y, r24
     f6e:	99 83       	std	Y+1, r25	; 0x01
     f70:	aa 83       	std	Y+2, r26	; 0x02
     f72:	bb 83       	std	Y+3, r27	; 0x03
    }

    return false;
     f74:	f1 2c       	mov	r15, r1
     f76:	1c c1       	rjmp	.+568    	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>
  }

  // the first term determines the sentence type
  if (curTermNumber == 0)
     f78:	fc 01       	movw	r30, r24
     f7a:	ea 56       	subi	r30, 0x6A	; 106
     f7c:	ff 4f       	sbci	r31, 0xFF	; 255
     f7e:	80 81       	ld	r24, Z
     f80:	81 11       	cpse	r24, r1
     f82:	64 c0       	rjmp	.+200    	; 0x104c <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x232>
  {
    if (!strcmp(term, _GPRMCterm) || !strcmp(term, _GNRMCterm))
     f84:	6e 01       	movw	r12, r28
     f86:	f6 e8       	ldi	r31, 0x86	; 134
     f88:	cf 0e       	add	r12, r31
     f8a:	d1 1c       	adc	r13, r1
     f8c:	62 e6       	ldi	r22, 0x62	; 98
     f8e:	70 e0       	ldi	r23, 0x00	; 0
     f90:	c6 01       	movw	r24, r12
     f92:	0e 94 07 19 	call	0x320e	; 0x320e <strcmp>
     f96:	89 2b       	or	r24, r25
     f98:	39 f0       	breq	.+14     	; 0xfa8 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x18e>
     f9a:	68 e6       	ldi	r22, 0x68	; 104
     f9c:	70 e0       	ldi	r23, 0x00	; 0
     f9e:	c6 01       	movw	r24, r12
     fa0:	0e 94 07 19 	call	0x320e	; 0x320e <strcmp>
     fa4:	89 2b       	or	r24, r25
     fa6:	31 f4       	brne	.+12     	; 0xfb4 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x19a>
      curSentenceType = GPS_SENTENCE_GPRMC;
     fa8:	81 e0       	ldi	r24, 0x01	; 1
     faa:	fe 01       	movw	r30, r28
     fac:	eb 56       	subi	r30, 0x6B	; 107
     fae:	ff 4f       	sbci	r31, 0xFF	; 255
     fb0:	80 83       	st	Z, r24
     fb2:	18 c0       	rjmp	.+48     	; 0xfe4 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x1ca>
    else if (!strcmp(term, _GPGGAterm) || !strcmp(term, _GNGGAterm))
     fb4:	6e e6       	ldi	r22, 0x6E	; 110
     fb6:	70 e0       	ldi	r23, 0x00	; 0
     fb8:	c6 01       	movw	r24, r12
     fba:	0e 94 07 19 	call	0x320e	; 0x320e <strcmp>
     fbe:	89 2b       	or	r24, r25
     fc0:	39 f0       	breq	.+14     	; 0xfd0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x1b6>
     fc2:	64 e7       	ldi	r22, 0x74	; 116
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	c6 01       	movw	r24, r12
     fc8:	0e 94 07 19 	call	0x320e	; 0x320e <strcmp>
     fcc:	89 2b       	or	r24, r25
     fce:	29 f4       	brne	.+10     	; 0xfda <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x1c0>
      curSentenceType = GPS_SENTENCE_GPGGA;
     fd0:	fe 01       	movw	r30, r28
     fd2:	eb 56       	subi	r30, 0x6B	; 107
     fd4:	ff 4f       	sbci	r31, 0xFF	; 255
     fd6:	10 82       	st	Z, r1
     fd8:	05 c0       	rjmp	.+10     	; 0xfe4 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x1ca>
    else
      curSentenceType = GPS_SENTENCE_OTHER;
     fda:	82 e0       	ldi	r24, 0x02	; 2
     fdc:	fe 01       	movw	r30, r28
     fde:	eb 56       	subi	r30, 0x6B	; 107
     fe0:	ff 4f       	sbci	r31, 0xFF	; 255
     fe2:	80 83       	st	Z, r24

    // Any custom candidates of this sentence type?
    for (customCandidates = customElts; customCandidates != NULL && strcmp(customCandidates->sentenceName, term) < 0; customCandidates = customCandidates->next);
     fe4:	fe 01       	movw	r30, r28
     fe6:	e7 56       	subi	r30, 0x67	; 103
     fe8:	ff 4f       	sbci	r31, 0xFF	; 255
     fea:	80 81       	ld	r24, Z
     fec:	91 81       	ldd	r25, Z+1	; 0x01
     fee:	32 96       	adiw	r30, 0x02	; 2
     ff0:	91 83       	std	Z+1, r25	; 0x01
     ff2:	80 83       	st	Z, r24
     ff4:	fe 01       	movw	r30, r28
     ff6:	e5 56       	subi	r30, 0x65	; 101
     ff8:	ff 4f       	sbci	r31, 0xFF	; 255
     ffa:	00 81       	ld	r16, Z
     ffc:	11 81       	ldd	r17, Z+1	; 0x01
     ffe:	01 15       	cp	r16, r1
    1000:	11 05       	cpc	r17, r1
    1002:	89 f0       	breq	.+34     	; 0x1026 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x20c>
    1004:	b6 01       	movw	r22, r12
    1006:	f8 01       	movw	r30, r16
    1008:	86 a1       	ldd	r24, Z+38	; 0x26
    100a:	97 a1       	ldd	r25, Z+39	; 0x27
    100c:	0e 94 07 19 	call	0x320e	; 0x320e <strcmp>
    1010:	99 23       	and	r25, r25
    1012:	4c f4       	brge	.+18     	; 0x1026 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x20c>
    1014:	f8 01       	movw	r30, r16
    1016:	82 a5       	ldd	r24, Z+42	; 0x2a
    1018:	93 a5       	ldd	r25, Z+43	; 0x2b
    101a:	fe 01       	movw	r30, r28
    101c:	e5 56       	subi	r30, 0x65	; 101
    101e:	ff 4f       	sbci	r31, 0xFF	; 255
    1020:	91 83       	std	Z+1, r25	; 0x01
    1022:	80 83       	st	Z, r24
    1024:	e7 cf       	rjmp	.-50     	; 0xff4 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x1da>
    if (customCandidates != NULL && strcmp(customCandidates->sentenceName, term) > 0)
    1026:	01 15       	cp	r16, r1
    1028:	11 05       	cpc	r17, r1
    102a:	09 f4       	brne	.+2      	; 0x102e <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x214>
    102c:	c1 c0       	rjmp	.+386    	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>
    102e:	b6 01       	movw	r22, r12
    1030:	f8 01       	movw	r30, r16
    1032:	86 a1       	ldd	r24, Z+38	; 0x26
    1034:	97 a1       	ldd	r25, Z+39	; 0x27
    1036:	0e 94 07 19 	call	0x320e	; 0x320e <strcmp>
    103a:	18 16       	cp	r1, r24
    103c:	19 06       	cpc	r1, r25
    103e:	0c f0       	brlt	.+2      	; 0x1042 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x228>
    1040:	b7 c0       	rjmp	.+366    	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>
       customCandidates = NULL;
    1042:	c5 56       	subi	r28, 0x65	; 101
    1044:	df 4f       	sbci	r29, 0xFF	; 255
    1046:	19 82       	std	Y+1, r1	; 0x01
    1048:	18 82       	st	Y, r1
    104a:	b2 c0       	rjmp	.+356    	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>

    return false;
  }

  if (curSentenceType != GPS_SENTENCE_OTHER && term[0])
    104c:	fe 01       	movw	r30, r28
    104e:	eb 56       	subi	r30, 0x6B	; 107
    1050:	ff 4f       	sbci	r31, 0xFF	; 255
    1052:	e0 81       	ld	r30, Z
    1054:	e2 30       	cpi	r30, 0x02	; 2
    1056:	09 f4       	brne	.+2      	; 0x105a <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x240>
    1058:	7c c0       	rjmp	.+248    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    105a:	de 01       	movw	r26, r28
    105c:	aa 57       	subi	r26, 0x7A	; 122
    105e:	bf 4f       	sbci	r27, 0xFF	; 255
    1060:	9c 91       	ld	r25, X
    1062:	99 23       	and	r25, r25
    1064:	09 f4       	brne	.+2      	; 0x1068 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x24e>
    1066:	75 c0       	rjmp	.+234    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    switch(COMBINE(curSentenceType, curTermNumber))
    1068:	20 e2       	ldi	r18, 0x20	; 32
    106a:	e2 9f       	mul	r30, r18
    106c:	f0 01       	movw	r30, r0
    106e:	11 24       	eor	r1, r1
    1070:	e8 2b       	or	r30, r24
    1072:	31 97       	sbiw	r30, 0x01	; 1
    1074:	e9 32       	cpi	r30, 0x29	; 41
    1076:	f1 05       	cpc	r31, r1
    1078:	08 f0       	brcs	.+2      	; 0x107c <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x262>
    107a:	6b c0       	rjmp	.+214    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    107c:	e6 5d       	subi	r30, 0xD6	; 214
    107e:	ff 4f       	sbci	r31, 0xFF	; 255
    1080:	0c 94 40 17 	jmp	0x2e80	; 0x2e80 <__tablejump2__>
  {
    case COMBINE(GPS_SENTENCE_GPRMC, 1): // Time in both sentences
    case COMBINE(GPS_SENTENCE_GPGGA, 1):
      time.setTime(term);
    1084:	be 01       	movw	r22, r28
    1086:	6a 57       	subi	r22, 0x7A	; 122
    1088:	7f 4f       	sbci	r23, 0xFF	; 255
    108a:	ce 01       	movw	r24, r28
    108c:	c0 96       	adiw	r24, 0x30	; 48
    108e:	0e 94 0f 06 	call	0xc1e	; 0xc1e <_ZN11TinyGPSTime7setTimeEPKc>
      break;
    1092:	5f c0       	rjmp	.+190    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPRMC, 2): // GPRMC validity
      sentenceHasFix = term[0] == 'A';
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	91 34       	cpi	r25, 0x41	; 65
    1098:	09 f0       	breq	.+2      	; 0x109c <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x282>
    109a:	80 e0       	ldi	r24, 0x00	; 0
    109c:	fe 01       	movw	r30, r28
    109e:	e8 56       	subi	r30, 0x68	; 104
    10a0:	ff 4f       	sbci	r31, 0xFF	; 255
    10a2:	80 83       	st	Z, r24
      break;
    10a4:	56 c0       	rjmp	.+172    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPRMC, 3): // Latitude
    case COMBINE(GPS_SENTENCE_GPGGA, 2):
      location.setLatitude(term);
    10a6:	be 01       	movw	r22, r28
    10a8:	6a 57       	subi	r22, 0x7A	; 122
    10aa:	7f 4f       	sbci	r23, 0xFF	; 255
    10ac:	ce 01       	movw	r24, r28
    10ae:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZN15TinyGPSLocation11setLatitudeEPKc>
      break;
    10b2:	4f c0       	rjmp	.+158    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPRMC, 4): // N/S
    case COMBINE(GPS_SENTENCE_GPGGA, 3):
      location.rawNewLatData.negative = term[0] == 'S';
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	93 35       	cpi	r25, 0x53	; 83
    10b8:	09 f0       	breq	.+2      	; 0x10bc <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x2a2>
    10ba:	80 e0       	ldi	r24, 0x00	; 0
    10bc:	8e 8b       	std	Y+22, r24	; 0x16
      break;
    10be:	49 c0       	rjmp	.+146    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPRMC, 5): // Longitude
    case COMBINE(GPS_SENTENCE_GPGGA, 4):
      location.setLongitude(term);
    10c0:	be 01       	movw	r22, r28
    10c2:	6a 57       	subi	r22, 0x7A	; 122
    10c4:	7f 4f       	sbci	r23, 0xFF	; 255
    10c6:	ce 01       	movw	r24, r28
    10c8:	0e 94 81 05 	call	0xb02	; 0xb02 <_ZN15TinyGPSLocation12setLongitudeEPKc>
      break;
    10cc:	42 c0       	rjmp	.+132    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPRMC, 6): // E/W
    case COMBINE(GPS_SENTENCE_GPGGA, 5):
      location.rawNewLngData.negative = term[0] == 'W';
    10ce:	81 e0       	ldi	r24, 0x01	; 1
    10d0:	97 35       	cpi	r25, 0x57	; 87
    10d2:	09 f0       	breq	.+2      	; 0x10d6 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x2bc>
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	8d 8f       	std	Y+29, r24	; 0x1d
      break;
    10d8:	3c c0       	rjmp	.+120    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPRMC, 7): // Speed (GPRMC)
      speed.set(term);
    10da:	be 01       	movw	r22, r28
    10dc:	6a 57       	subi	r22, 0x7A	; 122
    10de:	7f 4f       	sbci	r23, 0xFF	; 255
    10e0:	ce 01       	movw	r24, r28
    10e2:	ce 96       	adiw	r24, 0x3e	; 62
    10e4:	0e 94 c4 06 	call	0xd88	; 0xd88 <_ZN14TinyGPSDecimal3setEPKc>
      break;
    10e8:	34 c0       	rjmp	.+104    	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPRMC, 8): // Course (GPRMC)
      course.set(term);
    10ea:	be 01       	movw	r22, r28
    10ec:	6a 57       	subi	r22, 0x7A	; 122
    10ee:	7f 4f       	sbci	r23, 0xFF	; 255
    10f0:	ce 01       	movw	r24, r28
    10f2:	84 5b       	subi	r24, 0xB4	; 180
    10f4:	9f 4f       	sbci	r25, 0xFF	; 255
    10f6:	0e 94 c4 06 	call	0xd88	; 0xd88 <_ZN14TinyGPSDecimal3setEPKc>
      break;
    10fa:	2b c0       	rjmp	.+86     	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPRMC, 9): // Date (GPRMC)
      date.setDate(term);
    10fc:	be 01       	movw	r22, r28
    10fe:	6a 57       	subi	r22, 0x7A	; 122
    1100:	7f 4f       	sbci	r23, 0xFF	; 255
    1102:	ce 01       	movw	r24, r28
    1104:	82 96       	adiw	r24, 0x22	; 34
    1106:	0e 94 1c 06 	call	0xc38	; 0xc38 <_ZN11TinyGPSDate7setDateEPKc>
      break;
    110a:	23 c0       	rjmp	.+70     	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPGGA, 6): // Fix data (GPGGA)
      sentenceHasFix = term[0] > '0';
    110c:	81 e0       	ldi	r24, 0x01	; 1
    110e:	91 33       	cpi	r25, 0x31	; 49
    1110:	08 f4       	brcc	.+2      	; 0x1114 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x2fa>
    1112:	80 e0       	ldi	r24, 0x00	; 0
    1114:	fe 01       	movw	r30, r28
    1116:	e8 56       	subi	r30, 0x68	; 104
    1118:	ff 4f       	sbci	r31, 0xFF	; 255
    111a:	80 83       	st	Z, r24
      break;
    111c:	1a c0       	rjmp	.+52     	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPGGA, 7): // Satellites used (GPGGA)
      satellites.set(term);
    111e:	be 01       	movw	r22, r28
    1120:	6a 57       	subi	r22, 0x7A	; 122
    1122:	7f 4f       	sbci	r23, 0xFF	; 255
    1124:	ce 01       	movw	r24, r28
    1126:	88 59       	subi	r24, 0x98	; 152
    1128:	9f 4f       	sbci	r25, 0xFF	; 255
    112a:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <_ZN14TinyGPSInteger3setEPKc>
      break;
    112e:	11 c0       	rjmp	.+34     	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPGGA, 8): // HDOP
      hdop.set(term);
    1130:	be 01       	movw	r22, r28
    1132:	6a 57       	subi	r22, 0x7A	; 122
    1134:	7f 4f       	sbci	r23, 0xFF	; 255
    1136:	ce 01       	movw	r24, r28
    1138:	8a 58       	subi	r24, 0x8A	; 138
    113a:	9f 4f       	sbci	r25, 0xFF	; 255
    113c:	0e 94 c4 06 	call	0xd88	; 0xd88 <_ZN14TinyGPSDecimal3setEPKc>
      break;
    1140:	08 c0       	rjmp	.+16     	; 0x1152 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x338>
    case COMBINE(GPS_SENTENCE_GPGGA, 9): // Altitude (GPGGA)
      altitude.set(term);
    1142:	be 01       	movw	r22, r28
    1144:	6a 57       	subi	r22, 0x7A	; 122
    1146:	7f 4f       	sbci	r23, 0xFF	; 255
    1148:	ce 01       	movw	r24, r28
    114a:	86 5a       	subi	r24, 0xA6	; 166
    114c:	9f 4f       	sbci	r25, 0xFF	; 255
    114e:	0e 94 c4 06 	call	0xd88	; 0xd88 <_ZN14TinyGPSDecimal3setEPKc>
      break;
  }

  // Set custom values as needed
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    1152:	fe 01       	movw	r30, r28
    1154:	e5 56       	subi	r30, 0x65	; 101
    1156:	ff 4f       	sbci	r31, 0xFF	; 255
    1158:	00 81       	ld	r16, Z
    115a:	11 81       	ldd	r17, Z+1	; 0x01
    115c:	01 15       	cp	r16, r1
    115e:	11 05       	cpc	r17, r1
    1160:	39 f1       	breq	.+78     	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>
    1162:	fe 01       	movw	r30, r28
    1164:	e5 56       	subi	r30, 0x65	; 101
    1166:	ff 4f       	sbci	r31, 0xFF	; 255
    1168:	01 90       	ld	r0, Z+
    116a:	f0 81       	ld	r31, Z
    116c:	e0 2d       	mov	r30, r0
    116e:	66 a1       	ldd	r22, Z+38	; 0x26
    1170:	77 a1       	ldd	r23, Z+39	; 0x27
    1172:	f8 01       	movw	r30, r16
    1174:	86 a1       	ldd	r24, Z+38	; 0x26
    1176:	97 a1       	ldd	r25, Z+39	; 0x27
    1178:	0e 94 07 19 	call	0x320e	; 0x320e <strcmp>
    117c:	89 2b       	or	r24, r25
    117e:	c1 f4       	brne	.+48     	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>
    1180:	f8 01       	movw	r30, r16
    1182:	20 a5       	ldd	r18, Z+40	; 0x28
    1184:	31 a5       	ldd	r19, Z+41	; 0x29
    1186:	fe 01       	movw	r30, r28
    1188:	ea 56       	subi	r30, 0x6A	; 106
    118a:	ff 4f       	sbci	r31, 0xFF	; 255
    118c:	80 81       	ld	r24, Z
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	82 17       	cp	r24, r18
    1192:	93 07       	cpc	r25, r19
    1194:	6c f0       	brlt	.+26     	; 0x11b0 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x396>
    if (p->termNumber == curTermNumber)
    1196:	28 17       	cp	r18, r24
    1198:	39 07       	cpc	r19, r25
    119a:	31 f4       	brne	.+12     	; 0x11a8 <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x38e>
         p->set(term);
    119c:	be 01       	movw	r22, r28
    119e:	6a 57       	subi	r22, 0x7A	; 122
    11a0:	7f 4f       	sbci	r23, 0xFF	; 255
    11a2:	c8 01       	movw	r24, r16
    11a4:	0e 94 08 07 	call	0xe10	; 0xe10 <_ZN13TinyGPSCustom3setEPKc>
      altitude.set(term);
      break;
  }

  // Set custom values as needed
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    11a8:	f8 01       	movw	r30, r16
    11aa:	02 a5       	ldd	r16, Z+42	; 0x2a
    11ac:	13 a5       	ldd	r17, Z+43	; 0x2b
    11ae:	d6 cf       	rjmp	.-84     	; 0x115c <_ZN11TinyGPSPlus16endOfTermHandlerEv+0x342>
    if (p->termNumber == curTermNumber)
         p->set(term);

  return false;
}
    11b0:	8f 2d       	mov	r24, r15
    11b2:	df 91       	pop	r29
    11b4:	cf 91       	pop	r28
    11b6:	1f 91       	pop	r17
    11b8:	0f 91       	pop	r16
    11ba:	ff 90       	pop	r15
    11bc:	df 90       	pop	r13
    11be:	cf 90       	pop	r12
    11c0:	08 95       	ret

000011c2 <_ZN11TinyGPSPlus6encodeEc>:
//
// public methods
//

bool TinyGPSPlus::encode(char c)
{
    11c2:	0f 93       	push	r16
    11c4:	1f 93       	push	r17
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	fc 01       	movw	r30, r24
  ++encodedCharCount;
    11cc:	ec 01       	movw	r28, r24
    11ce:	c3 56       	subi	r28, 0x63	; 99
    11d0:	df 4f       	sbci	r29, 0xFF	; 255
    11d2:	88 81       	ld	r24, Y
    11d4:	99 81       	ldd	r25, Y+1	; 0x01
    11d6:	aa 81       	ldd	r26, Y+2	; 0x02
    11d8:	bb 81       	ldd	r27, Y+3	; 0x03
    11da:	01 96       	adiw	r24, 0x01	; 1
    11dc:	a1 1d       	adc	r26, r1
    11de:	b1 1d       	adc	r27, r1
    11e0:	88 83       	st	Y, r24
    11e2:	99 83       	std	Y+1, r25	; 0x01
    11e4:	aa 83       	std	Y+2, r26	; 0x02
    11e6:	bb 83       	std	Y+3, r27	; 0x03

  switch(c)
    11e8:	64 32       	cpi	r22, 0x24	; 36
    11ea:	a1 f1       	breq	.+104    	; 0x1254 <_ZN11TinyGPSPlus6encodeEc+0x92>
    11ec:	30 f4       	brcc	.+12     	; 0x11fa <_ZN11TinyGPSPlus6encodeEc+0x38>
    11ee:	6a 30       	cpi	r22, 0x0A	; 10
    11f0:	71 f0       	breq	.+28     	; 0x120e <_ZN11TinyGPSPlus6encodeEc+0x4c>
    11f2:	6d 30       	cpi	r22, 0x0D	; 13
    11f4:	09 f0       	breq	.+2      	; 0x11f8 <_ZN11TinyGPSPlus6encodeEc+0x36>
    11f6:	40 c0       	rjmp	.+128    	; 0x1278 <_ZN11TinyGPSPlus6encodeEc+0xb6>
    11f8:	0a c0       	rjmp	.+20     	; 0x120e <_ZN11TinyGPSPlus6encodeEc+0x4c>
    11fa:	6a 32       	cpi	r22, 0x2A	; 42
    11fc:	41 f0       	breq	.+16     	; 0x120e <_ZN11TinyGPSPlus6encodeEc+0x4c>
    11fe:	6c 32       	cpi	r22, 0x2C	; 44
    1200:	d9 f5       	brne	.+118    	; 0x1278 <_ZN11TinyGPSPlus6encodeEc+0xb6>
  {
  case ',': // term terminators
    parity ^= (uint8_t)c;
    1202:	df 01       	movw	r26, r30
    1204:	ac 57       	subi	r26, 0x7C	; 124
    1206:	bf 4f       	sbci	r27, 0xFF	; 255
    1208:	8c 91       	ld	r24, X
    120a:	86 27       	eor	r24, r22
    120c:	8c 93       	st	X, r24
    120e:	c6 2f       	mov	r28, r22
    1210:	8f 01       	movw	r16, r30
  case '\r':
  case '\n':
  case '*':
    {
      bool isValidSentence = false;
      if (curTermOffset < sizeof(term))
    1212:	e9 56       	subi	r30, 0x69	; 105
    1214:	ff 4f       	sbci	r31, 0xFF	; 255
    1216:	80 81       	ld	r24, Z
    1218:	8f 30       	cpi	r24, 0x0F	; 15
    121a:	50 f4       	brcc	.+20     	; 0x1230 <_ZN11TinyGPSPlus6encodeEc+0x6e>
      {
        term[curTermOffset] = 0;
    121c:	f8 01       	movw	r30, r16
    121e:	e8 0f       	add	r30, r24
    1220:	f1 1d       	adc	r31, r1
    1222:	ea 57       	subi	r30, 0x7A	; 122
    1224:	ff 4f       	sbci	r31, 0xFF	; 255
    1226:	10 82       	st	Z, r1
        isValidSentence = endOfTermHandler();
    1228:	c8 01       	movw	r24, r16
    122a:	0e 94 0d 07 	call	0xe1a	; 0xe1a <_ZN11TinyGPSPlus16endOfTermHandlerEv>
    122e:	01 c0       	rjmp	.+2      	; 0x1232 <_ZN11TinyGPSPlus6encodeEc+0x70>
    parity ^= (uint8_t)c;
  case '\r':
  case '\n':
  case '*':
    {
      bool isValidSentence = false;
    1230:	80 e0       	ldi	r24, 0x00	; 0
      if (curTermOffset < sizeof(term))
      {
        term[curTermOffset] = 0;
        isValidSentence = endOfTermHandler();
      }
      ++curTermNumber;
    1232:	f8 01       	movw	r30, r16
    1234:	ea 56       	subi	r30, 0x6A	; 106
    1236:	ff 4f       	sbci	r31, 0xFF	; 255
    1238:	90 81       	ld	r25, Z
    123a:	9f 5f       	subi	r25, 0xFF	; 255
    123c:	90 83       	st	Z, r25
      curTermOffset = 0;
    123e:	31 96       	adiw	r30, 0x01	; 1
    1240:	10 82       	st	Z, r1
      isChecksumTerm = c == '*';
    1242:	91 e0       	ldi	r25, 0x01	; 1
    1244:	ca 32       	cpi	r28, 0x2A	; 42
    1246:	09 f0       	breq	.+2      	; 0x124a <_ZN11TinyGPSPlus6encodeEc+0x88>
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	f8 01       	movw	r30, r16
    124c:	eb 57       	subi	r30, 0x7B	; 123
    124e:	ff 4f       	sbci	r31, 0xFF	; 255
    1250:	90 83       	st	Z, r25
      return isValidSentence;
    1252:	2e c0       	rjmp	.+92     	; 0x12b0 <_ZN11TinyGPSPlus6encodeEc+0xee>
    }
    break;

  case '$': // sentence begin
    curTermNumber = curTermOffset = 0;
    1254:	df 01       	movw	r26, r30
    1256:	a9 56       	subi	r26, 0x69	; 105
    1258:	bf 4f       	sbci	r27, 0xFF	; 255
    125a:	1c 92       	st	X, r1
    125c:	11 97       	sbiw	r26, 0x01	; 1
    125e:	1c 92       	st	X, r1
    parity = 0;
    1260:	52 97       	sbiw	r26, 0x12	; 18
    1262:	1c 92       	st	X, r1
    curSentenceType = GPS_SENTENCE_OTHER;
    1264:	51 96       	adiw	r26, 0x11	; 17
    1266:	82 e0       	ldi	r24, 0x02	; 2
    1268:	8c 93       	st	X, r24
    isChecksumTerm = false;
    126a:	50 97       	sbiw	r26, 0x10	; 16
    126c:	1c 92       	st	X, r1
    sentenceHasFix = false;
    126e:	e8 56       	subi	r30, 0x68	; 104
    1270:	ff 4f       	sbci	r31, 0xFF	; 255
    1272:	10 82       	st	Z, r1
    return false;
    1274:	80 e0       	ldi	r24, 0x00	; 0
    1276:	1c c0       	rjmp	.+56     	; 0x12b0 <_ZN11TinyGPSPlus6encodeEc+0xee>

  default: // ordinary characters
    if (curTermOffset < sizeof(term) - 1)
    1278:	df 01       	movw	r26, r30
    127a:	a9 56       	subi	r26, 0x69	; 105
    127c:	bf 4f       	sbci	r27, 0xFF	; 255
    127e:	8c 91       	ld	r24, X
    1280:	8e 30       	cpi	r24, 0x0E	; 14
    1282:	48 f4       	brcc	.+18     	; 0x1296 <_ZN11TinyGPSPlus6encodeEc+0xd4>
      term[curTermOffset++] = c;
    1284:	91 e0       	ldi	r25, 0x01	; 1
    1286:	98 0f       	add	r25, r24
    1288:	9c 93       	st	X, r25
    128a:	df 01       	movw	r26, r30
    128c:	a8 0f       	add	r26, r24
    128e:	b1 1d       	adc	r27, r1
    1290:	aa 57       	subi	r26, 0x7A	; 122
    1292:	bf 4f       	sbci	r27, 0xFF	; 255
    1294:	6c 93       	st	X, r22
    if (!isChecksumTerm)
    1296:	df 01       	movw	r26, r30
    1298:	ab 57       	subi	r26, 0x7B	; 123
    129a:	bf 4f       	sbci	r27, 0xFF	; 255
    129c:	8c 91       	ld	r24, X
    129e:	81 11       	cpse	r24, r1
    12a0:	06 c0       	rjmp	.+12     	; 0x12ae <_ZN11TinyGPSPlus6encodeEc+0xec>
      parity ^= c;
    12a2:	ec 57       	subi	r30, 0x7C	; 124
    12a4:	ff 4f       	sbci	r31, 0xFF	; 255
    12a6:	90 81       	ld	r25, Z
    12a8:	69 27       	eor	r22, r25
    12aa:	60 83       	st	Z, r22
    12ac:	01 c0       	rjmp	.+2      	; 0x12b0 <_ZN11TinyGPSPlus6encodeEc+0xee>
    return false;
    12ae:	80 e0       	ldi	r24, 0x00	; 0
  }

  return false;
}
    12b0:	df 91       	pop	r29
    12b2:	cf 91       	pop	r28
    12b4:	1f 91       	pop	r17
    12b6:	0f 91       	pop	r16
    12b8:	08 95       	ret

000012ba <_Z11pulseEnablev>:
void displayRight(uint8_t n) {
	for (uint8_t i=0;i<n;i++) {
		LCDCmd(0x18);
		_delay_us(45);
	}
}
    12ba:	82 b3       	in	r24, 0x12	; 18
    12bc:	80 64       	ori	r24, 0x40	; 64
    12be:	82 bb       	out	0x12, r24	; 18
    12c0:	82 b3       	in	r24, 0x12	; 18
    12c2:	8f 7b       	andi	r24, 0xBF	; 191
    12c4:	82 bb       	out	0x12, r24	; 18
    12c6:	08 95       	ret

000012c8 <_Z6LCDCmdh>:
    12c8:	cf 93       	push	r28
    12ca:	c8 2f       	mov	r28, r24
    12cc:	85 b3       	in	r24, 0x15	; 21
    12ce:	9c 2f       	mov	r25, r28
    12d0:	90 7f       	andi	r25, 0xF0	; 240
    12d2:	8f 70       	andi	r24, 0x0F	; 15
    12d4:	89 2b       	or	r24, r25
    12d6:	85 bb       	out	0x15, r24	; 21
    12d8:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_Z11pulseEnablev>
    12dc:	38 e7       	ldi	r19, 0x78	; 120
    12de:	3a 95       	dec	r19
    12e0:	f1 f7       	brne	.-4      	; 0x12de <_Z6LCDCmdh+0x16>
    12e2:	25 b3       	in	r18, 0x15	; 21
    12e4:	30 e1       	ldi	r19, 0x10	; 16
    12e6:	c3 9f       	mul	r28, r19
    12e8:	c0 01       	movw	r24, r0
    12ea:	11 24       	eor	r1, r1
    12ec:	92 2f       	mov	r25, r18
    12ee:	9f 70       	andi	r25, 0x0F	; 15
    12f0:	89 2b       	or	r24, r25
    12f2:	85 bb       	out	0x15, r24	; 21
    12f4:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_Z11pulseEnablev>
    12f8:	88 e7       	ldi	r24, 0x78	; 120
    12fa:	8a 95       	dec	r24
    12fc:	f1 f7       	brne	.-4      	; 0x12fa <_Z6LCDCmdh+0x32>
    12fe:	cf 91       	pop	r28
    1300:	08 95       	ret

00001302 <_Z6LCDChrh>:
    1302:	cf 93       	push	r28
    1304:	c8 2f       	mov	r28, r24
    1306:	8b b3       	in	r24, 0x1b	; 27
    1308:	84 60       	ori	r24, 0x04	; 4
    130a:	8b bb       	out	0x1b, r24	; 27
    130c:	85 b3       	in	r24, 0x15	; 21
    130e:	9c 2f       	mov	r25, r28
    1310:	90 7f       	andi	r25, 0xF0	; 240
    1312:	8f 70       	andi	r24, 0x0F	; 15
    1314:	89 2b       	or	r24, r25
    1316:	85 bb       	out	0x15, r24	; 21
    1318:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_Z11pulseEnablev>
    131c:	38 e7       	ldi	r19, 0x78	; 120
    131e:	3a 95       	dec	r19
    1320:	f1 f7       	brne	.-4      	; 0x131e <_Z6LCDChrh+0x1c>
    1322:	25 b3       	in	r18, 0x15	; 21
    1324:	30 e1       	ldi	r19, 0x10	; 16
    1326:	c3 9f       	mul	r28, r19
    1328:	c0 01       	movw	r24, r0
    132a:	11 24       	eor	r1, r1
    132c:	92 2f       	mov	r25, r18
    132e:	9f 70       	andi	r25, 0x0F	; 15
    1330:	89 2b       	or	r24, r25
    1332:	85 bb       	out	0x15, r24	; 21
    1334:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_Z11pulseEnablev>
    1338:	8b b3       	in	r24, 0x1b	; 27
    133a:	8b 7f       	andi	r24, 0xFB	; 251
    133c:	8b bb       	out	0x1b, r24	; 27
    133e:	88 e7       	ldi	r24, 0x78	; 120
    1340:	8a 95       	dec	r24
    1342:	f1 f7       	brne	.-4      	; 0x1340 <_Z6LCDChrh+0x3e>
    1344:	cf 91       	pop	r28
    1346:	08 95       	ret

00001348 <_Z10moveCursorhh>:
    1348:	62 30       	cpi	r22, 0x02	; 2
    134a:	31 f0       	breq	.+12     	; 0x1358 <_Z10moveCursorhh+0x10>
    134c:	63 30       	cpi	r22, 0x03	; 3
    134e:	31 f0       	breq	.+12     	; 0x135c <_Z10moveCursorhh+0x14>
    1350:	61 30       	cpi	r22, 0x01	; 1
    1352:	29 f4       	brne	.+10     	; 0x135e <_Z10moveCursorhh+0x16>
    1354:	80 5c       	subi	r24, 0xC0	; 192
    1356:	03 c0       	rjmp	.+6      	; 0x135e <_Z10moveCursorhh+0x16>
    1358:	8c 5e       	subi	r24, 0xEC	; 236
    135a:	01 c0       	rjmp	.+2      	; 0x135e <_Z10moveCursorhh+0x16>
    135c:	8a 5a       	subi	r24, 0xAA	; 170
    135e:	80 68       	ori	r24, 0x80	; 128
    1360:	0e 94 64 09 	call	0x12c8	; 0x12c8 <_Z6LCDCmdh>
    1364:	8a e6       	ldi	r24, 0x6A	; 106
    1366:	8a 95       	dec	r24
    1368:	f1 f7       	brne	.-4      	; 0x1366 <_Z10moveCursorhh+0x1e>
    136a:	00 c0       	rjmp	.+0      	; 0x136c <_Z10moveCursorhh+0x24>
    136c:	08 95       	ret

0000136e <_Z6LCDClrv>:
    136e:	81 e0       	ldi	r24, 0x01	; 1
    1370:	0e 94 64 09 	call	0x12c8	; 0x12c8 <_Z6LCDCmdh>
    1374:	8f e9       	ldi	r24, 0x9F	; 159
    1376:	9f e0       	ldi	r25, 0x0F	; 15
    1378:	01 97       	sbiw	r24, 0x01	; 1
    137a:	f1 f7       	brne	.-4      	; 0x1378 <_Z6LCDClrv+0xa>
    137c:	00 c0       	rjmp	.+0      	; 0x137e <_Z6LCDClrv+0x10>
    137e:	00 00       	nop
    1380:	60 e0       	ldi	r22, 0x00	; 0
    1382:	80 e0       	ldi	r24, 0x00	; 0
    1384:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
    1388:	08 95       	ret

0000138a <_Z9cursorOffv>:
    138a:	8c e0       	ldi	r24, 0x0C	; 12
    138c:	0e 94 64 09 	call	0x12c8	; 0x12c8 <_Z6LCDCmdh>
    1390:	88 e7       	ldi	r24, 0x78	; 120
    1392:	8a 95       	dec	r24
    1394:	f1 f7       	brne	.-4      	; 0x1392 <_Z9cursorOffv+0x8>
    1396:	08 95       	ret

00001398 <_Z7LCDInitv>:
    1398:	8b b3       	in	r24, 0x1b	; 27
    139a:	8b 7f       	andi	r24, 0xFB	; 251
    139c:	8b bb       	out	0x1b, r24	; 27
    139e:	85 b3       	in	r24, 0x15	; 21
    13a0:	8f 70       	andi	r24, 0x0F	; 15
    13a2:	85 bb       	out	0x15, r24	; 21
    13a4:	82 b3       	in	r24, 0x12	; 18
    13a6:	8f 7b       	andi	r24, 0xBF	; 191
    13a8:	82 bb       	out	0x12, r24	; 18
    13aa:	8a b3       	in	r24, 0x1a	; 26
    13ac:	84 60       	ori	r24, 0x04	; 4
    13ae:	8a bb       	out	0x1a, r24	; 26
    13b0:	84 b3       	in	r24, 0x14	; 20
    13b2:	80 6f       	ori	r24, 0xF0	; 240
    13b4:	84 bb       	out	0x14, r24	; 20
    13b6:	81 b3       	in	r24, 0x11	; 17
    13b8:	80 64       	ori	r24, 0x40	; 64
    13ba:	81 bb       	out	0x11, r24	; 17
    13bc:	8f e3       	ldi	r24, 0x3F	; 63
    13be:	9c e9       	ldi	r25, 0x9C	; 156
    13c0:	01 97       	sbiw	r24, 0x01	; 1
    13c2:	f1 f7       	brne	.-4      	; 0x13c0 <_Z7LCDInitv+0x28>
    13c4:	00 c0       	rjmp	.+0      	; 0x13c6 <_Z7LCDInitv+0x2e>
    13c6:	00 00       	nop
    13c8:	85 b3       	in	r24, 0x15	; 21
    13ca:	8f 70       	andi	r24, 0x0F	; 15
    13cc:	80 63       	ori	r24, 0x30	; 48
    13ce:	85 bb       	out	0x15, r24	; 21
    13d0:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_Z11pulseEnablev>
    13d4:	8f e0       	ldi	r24, 0x0F	; 15
    13d6:	97 e2       	ldi	r25, 0x27	; 39
    13d8:	01 97       	sbiw	r24, 0x01	; 1
    13da:	f1 f7       	brne	.-4      	; 0x13d8 <_Z7LCDInitv+0x40>
    13dc:	00 c0       	rjmp	.+0      	; 0x13de <_Z7LCDInitv+0x46>
    13de:	00 00       	nop
    13e0:	85 b3       	in	r24, 0x15	; 21
    13e2:	8f 70       	andi	r24, 0x0F	; 15
    13e4:	80 63       	ori	r24, 0x30	; 48
    13e6:	85 bb       	out	0x15, r24	; 21
    13e8:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_Z11pulseEnablev>
    13ec:	8b ed       	ldi	r24, 0xDB	; 219
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	01 97       	sbiw	r24, 0x01	; 1
    13f2:	f1 f7       	brne	.-4      	; 0x13f0 <_Z7LCDInitv+0x58>
    13f4:	00 c0       	rjmp	.+0      	; 0x13f6 <_Z7LCDInitv+0x5e>
    13f6:	00 00       	nop
    13f8:	85 b3       	in	r24, 0x15	; 21
    13fa:	8f 70       	andi	r24, 0x0F	; 15
    13fc:	80 63       	ori	r24, 0x30	; 48
    13fe:	85 bb       	out	0x15, r24	; 21
    1400:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_Z11pulseEnablev>
    1404:	8b ed       	ldi	r24, 0xDB	; 219
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	01 97       	sbiw	r24, 0x01	; 1
    140a:	f1 f7       	brne	.-4      	; 0x1408 <_Z7LCDInitv+0x70>
    140c:	00 c0       	rjmp	.+0      	; 0x140e <_Z7LCDInitv+0x76>
    140e:	00 00       	nop
    1410:	85 b3       	in	r24, 0x15	; 21
    1412:	8f 70       	andi	r24, 0x0F	; 15
    1414:	80 62       	ori	r24, 0x20	; 32
    1416:	85 bb       	out	0x15, r24	; 21
    1418:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_Z11pulseEnablev>
    141c:	8b ed       	ldi	r24, 0xDB	; 219
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	f1 f7       	brne	.-4      	; 0x1420 <_Z7LCDInitv+0x88>
    1424:	00 c0       	rjmp	.+0      	; 0x1426 <_Z7LCDInitv+0x8e>
    1426:	00 00       	nop
    1428:	88 e2       	ldi	r24, 0x28	; 40
    142a:	0e 94 64 09 	call	0x12c8	; 0x12c8 <_Z6LCDCmdh>
    142e:	86 e0       	ldi	r24, 0x06	; 6
    1430:	0e 94 64 09 	call	0x12c8	; 0x12c8 <_Z6LCDCmdh>
    1434:	8f e0       	ldi	r24, 0x0F	; 15
    1436:	0e 94 64 09 	call	0x12c8	; 0x12c8 <_Z6LCDCmdh>
    143a:	0e 94 c5 09 	call	0x138a	; 0x138a <_Z9cursorOffv>
    143e:	0e 94 b7 09 	call	0x136e	; 0x136e <_Z6LCDClrv>
    1442:	08 95       	ret

00001444 <_Z10string2LCDPKc>:

void string2LCD(const char *s) {
    1444:	cf 93       	push	r28
    1446:	df 93       	push	r29
    1448:	fc 01       	movw	r30, r24
	register char c;

	while ((c = *s++)) {
    144a:	ef 01       	movw	r28, r30
    144c:	21 96       	adiw	r28, 0x01	; 1
    144e:	80 81       	ld	r24, Z
    1450:	88 23       	and	r24, r24
    1452:	21 f0       	breq	.+8      	; 0x145c <_Z10string2LCDPKc+0x18>
		LCDChr(c);
    1454:	0e 94 81 09 	call	0x1302	; 0x1302 <_Z6LCDChrh>
}

void string2LCD(const char *s) {
	register char c;

	while ((c = *s++)) {
    1458:	fe 01       	movw	r30, r28
    145a:	f7 cf       	rjmp	.-18     	; 0x144a <_Z10string2LCDPKc+0x6>
		LCDChr(c);
	}
    145c:	df 91       	pop	r29
    145e:	cf 91       	pop	r28
    1460:	08 95       	ret

00001462 <_ZL7readGPSv>:
		while (PINB != 0);
	}
}

static void readGPS() {
	if ((PINA & 0b10000000) == 0b10000000) {
    1462:	cf 9b       	sbis	0x19, 7	; 25
    1464:	12 c0       	rjmp	.+36     	; 0x148a <_ZL7readGPSv+0x28>
		while (!(gps.encode(*gpsStream++))); //Use Pre-Recorded Data
    1466:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    146a:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    146e:	cf 01       	movw	r24, r30
    1470:	01 96       	adiw	r24, 0x01	; 1
    1472:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1476:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    147a:	60 81       	ld	r22, Z
    147c:	80 e3       	ldi	r24, 0x30	; 48
    147e:	92 e0       	ldi	r25, 0x02	; 2
    1480:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <_ZN11TinyGPSPlus6encodeEc>
    1484:	88 23       	and	r24, r24
    1486:	79 f3       	breq	.-34     	; 0x1466 <_ZL7readGPSv+0x4>
    1488:	08 95       	ret
	} else {
		while(!(gps.encode((USART_receive()))) & working); //Retrive Data from GPS until Sentence Complete
    148a:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <_Z13USART_receivev>
    148e:	68 2f       	mov	r22, r24
    1490:	80 e3       	ldi	r24, 0x30	; 48
    1492:	92 e0       	ldi	r25, 0x02	; 2
    1494:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <_ZN11TinyGPSPlus6encodeEc>
    1498:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <working>
    149c:	89 17       	cp	r24, r25
    149e:	a8 f3       	brcs	.-22     	; 0x148a <_ZL7readGPSv+0x28>
    14a0:	08 95       	ret

000014a2 <_Z41__static_initialization_and_destruction_0ii>:
ISR(INT2_vect) { // Interrupt Vector for Returning to Main Menu
	uint8_t sregstore = SREG;
	while (PINB == 4); // Wait for pin Release
	working = false;
	SREG = sregstore;
    14a2:	01 97       	sbiw	r24, 0x01	; 1
    14a4:	39 f4       	brne	.+14     	; 0x14b4 <_Z41__static_initialization_and_destruction_0ii+0x12>
    14a6:	6f 3f       	cpi	r22, 0xFF	; 255
    14a8:	7f 4f       	sbci	r23, 0xFF	; 255
    14aa:	21 f4       	brne	.+8      	; 0x14b4 <_Z41__static_initialization_and_destruction_0ii+0x12>
#include "EEPROM/EEPROM.h"		//AVR EEPROM Library by Christopher Andrews

char lcdBuf[16];		// Buffer to Hold one line of chars for the LCD
bool working = false;	// Bool for switching device between Main Menu and Functions

TinyGPSPlus gps; //GPS Parsing Object
    14ac:	80 e3       	ldi	r24, 0x30	; 48
    14ae:	92 e0       	ldi	r25, 0x02	; 2
    14b0:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_ZN11TinyGPSPlusC1Ev>
    14b4:	08 95       	ret

000014b6 <_Z10bootScreenv>:
	}
}


void bootScreen() { // Booting Screen
	moveCursor(0,0);
    14b6:	60 e0       	ldi	r22, 0x00	; 0
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("AVR Pathfinder"); // Device Name
    14be:	8c eb       	ldi	r24, 0xBC	; 188
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	moveCursor(0,1);
    14c6:	61 e0       	ldi	r22, 0x01	; 1
    14c8:	80 e0       	ldi	r24, 0x00	; 0
    14ca:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("Connecting...");
    14ce:	8b ec       	ldi	r24, 0xCB	; 203
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>

struct TinyGPSLocation
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
    14d6:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <gps>
	while (!(gps.location.isValid())) { // Await Valid Data From GPS
    14da:	81 11       	cpse	r24, r1
    14dc:	03 c0       	rjmp	.+6      	; 0x14e4 <_Z10bootScreenv+0x2e>
		readGPS();
    14de:	0e 94 31 0a 	call	0x1462	; 0x1462 <_ZL7readGPSv>
void bootScreen() { // Booting Screen
	moveCursor(0,0);
	string2LCD("AVR Pathfinder"); // Device Name
	moveCursor(0,1);
	string2LCD("Connecting...");
	while (!(gps.location.isValid())) { // Await Valid Data From GPS
    14e2:	f9 cf       	rjmp	.-14     	; 0x14d6 <_Z10bootScreenv+0x20>
		readGPS();
	}
	moveCursor(0,1);
    14e4:	61 e0       	ldi	r22, 0x01	; 1
    14e6:	80 e0       	ldi	r24, 0x00	; 0
    14e8:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("Connected    "); // Device Ready
    14ec:	89 ed       	ldi	r24, 0xD9	; 217
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    14f4:	2f ef       	ldi	r18, 0xFF	; 255
    14f6:	89 e6       	ldi	r24, 0x69	; 105
    14f8:	98 e1       	ldi	r25, 0x18	; 24
    14fa:	21 50       	subi	r18, 0x01	; 1
    14fc:	80 40       	sbci	r24, 0x00	; 0
    14fe:	90 40       	sbci	r25, 0x00	; 0
    1500:	e1 f7       	brne	.-8      	; 0x14fa <_Z10bootScreenv+0x44>
    1502:	00 c0       	rjmp	.+0      	; 0x1504 <_Z10bootScreenv+0x4e>
    1504:	00 00       	nop
    1506:	08 95       	ret

00001508 <_Z9tndScreenv>:
		diagScreen();
		break;
	}
}

void tndScreen () { // Time & Date Screen
    1508:	ff 92       	push	r15
    150a:	0f 93       	push	r16
    150c:	1f 93       	push	r17
    150e:	cf 93       	push	r28
    1510:	df 93       	push	r29
	// Print Static Layout
	string2LCD("Time:");
    1512:	87 ee       	ldi	r24, 0xE7	; 231
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	moveCursor(0,1);
    151a:	61 e0       	ldi	r22, 0x01	; 1
    151c:	80 e0       	ldi	r24, 0x00	; 0
    151e:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("Date:");
    1522:	8d ee       	ldi	r24, 0xED	; 237
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	
	while (working) {
    152a:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <working>
    152e:	88 23       	and	r24, r24
    1530:	09 f4       	brne	.+2      	; 0x1534 <_Z9tndScreenv+0x2c>
    1532:	59 c0       	rjmp	.+178    	; 0x15e6 <_Z9tndScreenv+0xde>

struct TinyGPSTime
{
   friend class TinyGPSPlus;
public:
   bool isValid() const       { return valid; }
    1534:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <gps+0x30>
		if (gps.time.isValid()) { // Print Data if valid
    1538:	88 23       	and	r24, r24
    153a:	09 f4       	brne	.+2      	; 0x153e <_Z9tndScreenv+0x36>
    153c:	51 c0       	rjmp	.+162    	; 0x15e0 <_Z9tndScreenv+0xd8>
			moveCursor(5,0);
    153e:	60 e0       	ldi	r22, 0x00	; 0
    1540:	85 e0       	ldi	r24, 0x05	; 5
    1542:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
			sprintf(lcdBuf, "%d:%d:%dUTC", gps.time.hour(), gps.time.minute(), gps.time.second());
    1546:	80 e6       	ldi	r24, 0x60	; 96
    1548:	92 e0       	ldi	r25, 0x02	; 2
    154a:	0e 94 8c 06 	call	0xd18	; 0xd18 <_ZN11TinyGPSTime6secondEv>
    154e:	d8 2f       	mov	r29, r24
    1550:	80 e6       	ldi	r24, 0x60	; 96
    1552:	92 e0       	ldi	r25, 0x02	; 2
    1554:	0e 94 76 06 	call	0xcec	; 0xcec <_ZN11TinyGPSTime6minuteEv>
    1558:	c8 2f       	mov	r28, r24
    155a:	80 e6       	ldi	r24, 0x60	; 96
    155c:	92 e0       	ldi	r25, 0x02	; 2
    155e:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN11TinyGPSTime4hourEv>
    1562:	1f 92       	push	r1
    1564:	df 93       	push	r29
    1566:	1f 92       	push	r1
    1568:	cf 93       	push	r28
    156a:	1f 92       	push	r1
    156c:	8f 93       	push	r24
    156e:	83 ef       	ldi	r24, 0xF3	; 243
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	9f 93       	push	r25
    1574:	8f 93       	push	r24
    1576:	ce ed       	ldi	r28, 0xDE	; 222
    1578:	d2 e0       	ldi	r29, 0x02	; 2
    157a:	df 93       	push	r29
    157c:	cf 93       	push	r28
    157e:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
			string2LCD(lcdBuf);
    1582:	ce 01       	movw	r24, r28
    1584:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
			moveCursor(5,1);
    1588:	61 e0       	ldi	r22, 0x01	; 1
    158a:	85 e0       	ldi	r24, 0x05	; 5
    158c:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
			sprintf(lcdBuf, "%d/%d/%d", gps.date.day(), gps.date.month(), gps.date.year());
    1590:	82 e5       	ldi	r24, 0x52	; 82
    1592:	92 e0       	ldi	r25, 0x02	; 2
    1594:	0e 94 29 06 	call	0xc52	; 0xc52 <_ZN11TinyGPSDate4yearEv>
    1598:	08 2f       	mov	r16, r24
    159a:	f9 2e       	mov	r15, r25
    159c:	82 e5       	ldi	r24, 0x52	; 82
    159e:	92 e0       	ldi	r25, 0x02	; 2
    15a0:	0e 94 39 06 	call	0xc72	; 0xc72 <_ZN11TinyGPSDate5monthEv>
    15a4:	18 2f       	mov	r17, r24
    15a6:	82 e5       	ldi	r24, 0x52	; 82
    15a8:	92 e0       	ldi	r25, 0x02	; 2
    15aa:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZN11TinyGPSDate3dayEv>
    15ae:	ff 92       	push	r15
    15b0:	0f 93       	push	r16
    15b2:	1f 92       	push	r1
    15b4:	1f 93       	push	r17
    15b6:	1f 92       	push	r1
    15b8:	8f 93       	push	r24
    15ba:	8f ef       	ldi	r24, 0xFF	; 255
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	9f 93       	push	r25
    15c0:	8f 93       	push	r24
    15c2:	df 93       	push	r29
    15c4:	cf 93       	push	r28
    15c6:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
			string2LCD(lcdBuf);
    15ca:	ce 01       	movw	r24, r28
    15cc:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
    15d0:	8d b7       	in	r24, 0x3d	; 61
    15d2:	9e b7       	in	r25, 0x3e	; 62
    15d4:	44 96       	adiw	r24, 0x14	; 20
    15d6:	0f b6       	in	r0, 0x3f	; 63
    15d8:	f8 94       	cli
    15da:	9e bf       	out	0x3e, r25	; 62
    15dc:	0f be       	out	0x3f, r0	; 63
    15de:	8d bf       	out	0x3d, r24	; 61
		}
		readGPS(); //Retrieve GPS Data
    15e0:	0e 94 31 0a 	call	0x1462	; 0x1462 <_ZL7readGPSv>
	// Print Static Layout
	string2LCD("Time:");
	moveCursor(0,1);
	string2LCD("Date:");
	
	while (working) {
    15e4:	a2 cf       	rjmp	.-188    	; 0x152a <_Z9tndScreenv+0x22>
			sprintf(lcdBuf, "%d/%d/%d", gps.date.day(), gps.date.month(), gps.date.year());
			string2LCD(lcdBuf);
		}
		readGPS(); //Retrieve GPS Data
	}
}
    15e6:	df 91       	pop	r29
    15e8:	cf 91       	pop	r28
    15ea:	1f 91       	pop	r17
    15ec:	0f 91       	pop	r16
    15ee:	ff 90       	pop	r15
    15f0:	08 95       	ret

000015f2 <_Z10diagScreenv>:
			working = false;
		}
	}
}

void diagScreen() { // Screen For Diagnostic Data
    15f2:	0f 93       	push	r16
    15f4:	1f 93       	push	r17
    15f6:	cf 93       	push	r28
    15f8:	df 93       	push	r29
	// Print Static Layout
	string2LCD("Sat:");
    15fa:	88 e0       	ldi	r24, 0x08	; 8
    15fc:	91 e0       	ldi	r25, 0x01	; 1
    15fe:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	moveCursor(7,0);
    1602:	60 e0       	ldi	r22, 0x00	; 0
    1604:	87 e0       	ldi	r24, 0x07	; 7
    1606:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("HDOP:");
    160a:	8d e0       	ldi	r24, 0x0D	; 13
    160c:	91 e0       	ldi	r25, 0x01	; 1
    160e:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	moveCursor(0,1);
    1612:	61 e0       	ldi	r22, 0x01	; 1
    1614:	80 e0       	ldi	r24, 0x00	; 0
    1616:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("ChksmFail:");
    161a:	83 e1       	ldi	r24, 0x13	; 19
    161c:	91 e0       	ldi	r25, 0x01	; 1
    161e:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	
	while (working) {
    1622:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <working>
    1626:	88 23       	and	r24, r24
    1628:	09 f4       	brne	.+2      	; 0x162c <_Z10diagScreenv+0x3a>
    162a:	5d c0       	rjmp	.+186    	; 0x16e6 <_Z10diagScreenv+0xf4>

struct TinyGPSInteger
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
    162c:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <gps+0x68>
		if (gps.satellites.isValid()) {
    1630:	88 23       	and	r24, r24
    1632:	09 f4       	brne	.+2      	; 0x1636 <_Z10diagScreenv+0x44>
    1634:	55 c0       	rjmp	.+170    	; 0x16e0 <_Z10diagScreenv+0xee>
			moveCursor(4,0);
    1636:	60 e0       	ldi	r22, 0x00	; 0
    1638:	84 e0       	ldi	r24, 0x04	; 4
    163a:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? getrunTime() - lastCommitTime : (uint32_t)ULONG_MAX; }
   uint32_t value()        { updated = false; return val; }
    163e:	10 92 99 02 	sts	0x0299, r1	; 0x800299 <gps+0x69>
    1642:	ee e9       	ldi	r30, 0x9E	; 158
    1644:	f2 e0       	ldi	r31, 0x02	; 2
    1646:	80 81       	ld	r24, Z
    1648:	91 81       	ldd	r25, Z+1	; 0x01
    164a:	22 81       	ldd	r18, Z+2	; 0x02
    164c:	33 81       	ldd	r19, Z+3	; 0x03
			sprintf(lcdBuf, "%lu", gps.satellites.value());
    164e:	3f 93       	push	r19
    1650:	2f 93       	push	r18
    1652:	9f 93       	push	r25
    1654:	8f 93       	push	r24
    1656:	0e e1       	ldi	r16, 0x1E	; 30
    1658:	11 e0       	ldi	r17, 0x01	; 1
    165a:	1f 93       	push	r17
    165c:	0f 93       	push	r16
    165e:	ce ed       	ldi	r28, 0xDE	; 222
    1660:	d2 e0       	ldi	r29, 0x02	; 2
    1662:	df 93       	push	r29
    1664:	cf 93       	push	r28
    1666:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
			string2LCD(lcdBuf);
    166a:	ce 01       	movw	r24, r28
    166c:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
			moveCursor(12,0);
    1670:	60 e0       	ldi	r22, 0x00	; 0
    1672:	8c e0       	ldi	r24, 0x0C	; 12
    1674:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? getrunTime() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    1678:	10 92 a7 02 	sts	0x02A7, r1	; 0x8002a7 <gps+0x77>
    167c:	ec ea       	ldi	r30, 0xAC	; 172
    167e:	f2 e0       	ldi	r31, 0x02	; 2
    1680:	80 81       	ld	r24, Z
    1682:	91 81       	ldd	r25, Z+1	; 0x01
    1684:	22 81       	ldd	r18, Z+2	; 0x02
    1686:	33 81       	ldd	r19, Z+3	; 0x03
			sprintf(lcdBuf, "%lu", gps.hdop.value());
    1688:	3f 93       	push	r19
    168a:	2f 93       	push	r18
    168c:	9f 93       	push	r25
    168e:	8f 93       	push	r24
    1690:	1f 93       	push	r17
    1692:	0f 93       	push	r16
    1694:	df 93       	push	r29
    1696:	cf 93       	push	r28
    1698:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
			string2LCD(lcdBuf);
    169c:	ce 01       	movw	r24, r28
    169e:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
			moveCursor(10,1);
    16a2:	61 e0       	ldi	r22, 0x01	; 1
    16a4:	8a e0       	ldi	r24, 0x0A	; 10
    16a6:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
  static int32_t parseDecimal(const char *term);
  static void parseDegrees(const char *term, RawDegrees &deg);

  uint32_t charsProcessed()   const { return encodedCharCount; }
  uint32_t sentencesWithFix() const { return sentencesWithFixCount; }
  uint32_t failedChecksum()   const { return failedChecksumCount; }
    16aa:	e5 ed       	ldi	r30, 0xD5	; 213
    16ac:	f2 e0       	ldi	r31, 0x02	; 2
    16ae:	80 81       	ld	r24, Z
    16b0:	91 81       	ldd	r25, Z+1	; 0x01
    16b2:	22 81       	ldd	r18, Z+2	; 0x02
    16b4:	33 81       	ldd	r19, Z+3	; 0x03
			sprintf(lcdBuf, "%lu", gps.failedChecksum());
    16b6:	3f 93       	push	r19
    16b8:	2f 93       	push	r18
    16ba:	9f 93       	push	r25
    16bc:	8f 93       	push	r24
    16be:	1f 93       	push	r17
    16c0:	0f 93       	push	r16
    16c2:	df 93       	push	r29
    16c4:	cf 93       	push	r28
    16c6:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
			string2LCD(lcdBuf);
    16ca:	ce 01       	movw	r24, r28
    16cc:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
    16d0:	8d b7       	in	r24, 0x3d	; 61
    16d2:	9e b7       	in	r25, 0x3e	; 62
    16d4:	48 96       	adiw	r24, 0x18	; 24
    16d6:	0f b6       	in	r0, 0x3f	; 63
    16d8:	f8 94       	cli
    16da:	9e bf       	out	0x3e, r25	; 62
    16dc:	0f be       	out	0x3f, r0	; 63
    16de:	8d bf       	out	0x3d, r24	; 61
		}
		readGPS();
    16e0:	0e 94 31 0a 	call	0x1462	; 0x1462 <_ZL7readGPSv>
	moveCursor(7,0);
	string2LCD("HDOP:");
	moveCursor(0,1);
	string2LCD("ChksmFail:");
	
	while (working) {
    16e4:	9e cf       	rjmp	.-196    	; 0x1622 <_Z10diagScreenv+0x30>
			sprintf(lcdBuf, "%lu", gps.failedChecksum());
			string2LCD(lcdBuf);
		}
		readGPS();
	}
}
    16e6:	df 91       	pop	r29
    16e8:	cf 91       	pop	r28
    16ea:	1f 91       	pop	r17
    16ec:	0f 91       	pop	r16
    16ee:	08 95       	ret

000016f0 <_Z10slotSelectv>:

uint8_t slotSelect() { // Selecting WP Slots in EEPROM - 20 Slots Available
    16f0:	9f 92       	push	r9
    16f2:	af 92       	push	r10
    16f4:	bf 92       	push	r11
    16f6:	cf 92       	push	r12
    16f8:	df 92       	push	r13
    16fa:	ef 92       	push	r14
    16fc:	ff 92       	push	r15
    16fe:	0f 93       	push	r16
    1700:	1f 93       	push	r17
    1702:	cf 93       	push	r28
    1704:	df 93       	push	r29
    1706:	cd b7       	in	r28, 0x3d	; 61
    1708:	de b7       	in	r29, 0x3e	; 62
    170a:	2e 97       	sbiw	r28, 0x0e	; 14
    170c:	0f b6       	in	r0, 0x3f	; 63
    170e:	f8 94       	cli
    1710:	de bf       	out	0x3e, r29	; 62
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	cd bf       	out	0x3d, r28	; 61
	uint8_t addr = 0;
    1716:	91 2c       	mov	r9, r1
	waypoint temp;
	
	while (1) {
		// Print 1st Slot in EEPROM
		LCDClr();
    1718:	0e 94 b7 09 	call	0x136e	; 0x136e <_Z6LCDClrv>
		EEPROM.get(addr*sizeof(waypoint), temp);
    171c:	89 2d       	mov	r24, r9
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	88 0f       	add	r24, r24
    1722:	99 1f       	adc	r25, r25
    1724:	8c 01       	movw	r16, r24
    1726:	00 0f       	add	r16, r16
    1728:	11 1f       	adc	r17, r17
    172a:	00 0f       	add	r16, r16
    172c:	11 1f       	adc	r17, r17
    172e:	00 0f       	add	r16, r16
    1730:	11 1f       	adc	r17, r17
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    1732:	08 1b       	sub	r16, r24
    1734:	19 0b       	sbc	r17, r25
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    1736:	0f 2e       	mov	r0, r31
    1738:	fe e0       	ldi	r31, 0x0E	; 14
    173a:	ef 2e       	mov	r14, r31
    173c:	f1 2c       	mov	r15, r1
    173e:	f0 2d       	mov	r31, r0
    uint16_t length()                    { return E2END + 1; }
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
    1740:	ce 01       	movw	r24, r28
    1742:	01 96       	adiw	r24, 0x01	; 1
    1744:	6c 01       	movw	r12, r24
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    1746:	e1 14       	cp	r14, r1
    1748:	f1 04       	cpc	r15, r1
    174a:	81 f0       	breq	.+32     	; 0x176c <_Z10slotSelectv+0x7c>
    174c:	56 01       	movw	r10, r12
    174e:	9f ef       	ldi	r25, 0xFF	; 255
    1750:	a9 1a       	sub	r10, r25
    1752:	b9 0a       	sbc	r11, r25

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    1754:	c8 01       	movw	r24, r16
    1756:	0e 94 02 1a 	call	0x3404	; 0x3404 <eeprom_read_byte>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    175a:	f6 01       	movw	r30, r12
    175c:	80 83       	st	Z, r24
    175e:	f1 e0       	ldi	r31, 0x01	; 1
    1760:	ef 1a       	sub	r14, r31
    1762:	f1 08       	sbc	r15, r1
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    1764:	0f 5f       	subi	r16, 0xFF	; 255
    1766:	1f 4f       	sbci	r17, 0xFF	; 255
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    1768:	65 01       	movw	r12, r10
    176a:	ed cf       	rjmp	.-38     	; 0x1746 <_Z10slotSelectv+0x56>
		sprintf(lcdBuf, "SLT-%d:%s", addr + 1, temp.name);
    176c:	89 2d       	mov	r24, r9
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	01 96       	adiw	r24, 0x01	; 1
    1772:	9e 01       	movw	r18, r28
    1774:	2f 5f       	subi	r18, 0xFF	; 255
    1776:	3f 4f       	sbci	r19, 0xFF	; 255
    1778:	3f 93       	push	r19
    177a:	2f 93       	push	r18
    177c:	9f 93       	push	r25
    177e:	8f 93       	push	r24
    1780:	82 e2       	ldi	r24, 0x22	; 34
    1782:	91 e0       	ldi	r25, 0x01	; 1
    1784:	9f 93       	push	r25
    1786:	8f 93       	push	r24
    1788:	0e ed       	ldi	r16, 0xDE	; 222
    178a:	12 e0       	ldi	r17, 0x02	; 2
    178c:	1f 93       	push	r17
    178e:	0f 93       	push	r16
    1790:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
		string2LCD(lcdBuf);
    1794:	c8 01       	movw	r24, r16
    1796:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
		sprintf(lcdBuf, "%.4f  %.4f", temp.lat, temp.lng);
    179a:	4b 85       	ldd	r20, Y+11	; 0x0b
    179c:	5c 85       	ldd	r21, Y+12	; 0x0c
    179e:	6d 85       	ldd	r22, Y+13	; 0x0d
    17a0:	7e 85       	ldd	r23, Y+14	; 0x0e
    17a2:	8f 81       	ldd	r24, Y+7	; 0x07
    17a4:	98 85       	ldd	r25, Y+8	; 0x08
    17a6:	29 85       	ldd	r18, Y+9	; 0x09
    17a8:	3a 85       	ldd	r19, Y+10	; 0x0a
    17aa:	7f 93       	push	r23
    17ac:	6f 93       	push	r22
    17ae:	5f 93       	push	r21
    17b0:	4f 93       	push	r20
    17b2:	3f 93       	push	r19
    17b4:	2f 93       	push	r18
    17b6:	9f 93       	push	r25
    17b8:	8f 93       	push	r24
    17ba:	8c e2       	ldi	r24, 0x2C	; 44
    17bc:	91 e0       	ldi	r25, 0x01	; 1
    17be:	9f 93       	push	r25
    17c0:	8f 93       	push	r24
    17c2:	1f 93       	push	r17
    17c4:	0f 93       	push	r16
    17c6:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
		moveCursor(0,1);
    17ca:	61 e0       	ldi	r22, 0x01	; 1
    17cc:	80 e0       	ldi	r24, 0x00	; 0
    17ce:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
		string2LCD(lcdBuf);
    17d2:	c8 01       	movw	r24, r16
    17d4:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
    17d8:	0f b6       	in	r0, 0x3f	; 63
    17da:	f8 94       	cli
    17dc:	de bf       	out	0x3e, r29	; 62
    17de:	0f be       	out	0x3f, r0	; 63
    17e0:	cd bf       	out	0x3d, r28	; 61
		
		// Navigation Buttons
		while (PINB == 0);
    17e2:	96 b3       	in	r25, 0x16	; 22
    17e4:	99 23       	and	r25, r25
    17e6:	e9 f3       	breq	.-6      	; 0x17e2 <_Z10slotSelectv+0xf2>
		switch (PINB) {
    17e8:	86 b3       	in	r24, 0x16	; 22
    17ea:	80 32       	cpi	r24, 0x20	; 32
    17ec:	a1 f0       	breq	.+40     	; 0x1816 <_Z10slotSelectv+0x126>
    17ee:	18 f4       	brcc	.+6      	; 0x17f6 <_Z10slotSelectv+0x106>
    17f0:	80 31       	cpi	r24, 0x10	; 16
    17f2:	c9 f0       	breq	.+50     	; 0x1826 <_Z10slotSelectv+0x136>
    17f4:	23 c0       	rjmp	.+70     	; 0x183c <_Z10slotSelectv+0x14c>
    17f6:	80 34       	cpi	r24, 0x40	; 64
    17f8:	39 f0       	breq	.+14     	; 0x1808 <_Z10slotSelectv+0x118>
    17fa:	80 38       	cpi	r24, 0x80	; 128
    17fc:	f9 f4       	brne	.+62     	; 0x183c <_Z10slotSelectv+0x14c>
			case _BV(7): //Go Back
			while (PINB != 0);
    17fe:	86 b3       	in	r24, 0x16	; 22
    1800:	81 11       	cpse	r24, r1
    1802:	fd cf       	rjmp	.-6      	; 0x17fe <_Z10slotSelectv+0x10e>
			return 20;
    1804:	84 e1       	ldi	r24, 0x14	; 20
    1806:	1e c0       	rjmp	.+60     	; 0x1844 <_Z10slotSelectv+0x154>
			
			case _BV(6): //Slot Up
			while (PINB != 0);
    1808:	86 b3       	in	r24, 0x16	; 22
    180a:	81 11       	cpse	r24, r1
    180c:	fd cf       	rjmp	.-6      	; 0x1808 <_Z10slotSelectv+0x118>
			addr = (addr == 0) ? 19 : addr - 1;
    180e:	99 20       	and	r9, r9
    1810:	79 f0       	breq	.+30     	; 0x1830 <_Z10slotSelectv+0x140>
    1812:	9a 94       	dec	r9
    1814:	13 c0       	rjmp	.+38     	; 0x183c <_Z10slotSelectv+0x14c>
			break;
			
			case _BV(5): //Slot Down
			while (PINB != 0);
    1816:	86 b3       	in	r24, 0x16	; 22
    1818:	81 11       	cpse	r24, r1
    181a:	fd cf       	rjmp	.-6      	; 0x1816 <_Z10slotSelectv+0x126>
			addr = (addr == 19) ? 0 : addr + 1;
    181c:	93 e1       	ldi	r25, 0x13	; 19
    181e:	99 16       	cp	r9, r25
    1820:	61 f0       	breq	.+24     	; 0x183a <_Z10slotSelectv+0x14a>
    1822:	93 94       	inc	r9
    1824:	0b c0       	rjmp	.+22     	; 0x183c <_Z10slotSelectv+0x14c>
			break;

			case _BV(4): //Select Slot
			while (PINB != 0);
    1826:	86 b3       	in	r24, 0x16	; 22
    1828:	81 11       	cpse	r24, r1
    182a:	fd cf       	rjmp	.-6      	; 0x1826 <_Z10slotSelectv+0x136>
			return addr;
    182c:	89 2d       	mov	r24, r9
    182e:	0a c0       	rjmp	.+20     	; 0x1844 <_Z10slotSelectv+0x154>
			while (PINB != 0);
			return 20;
			
			case _BV(6): //Slot Up
			while (PINB != 0);
			addr = (addr == 0) ? 19 : addr - 1;
    1830:	0f 2e       	mov	r0, r31
    1832:	f3 e1       	ldi	r31, 0x13	; 19
    1834:	9f 2e       	mov	r9, r31
    1836:	f0 2d       	mov	r31, r0
    1838:	01 c0       	rjmp	.+2      	; 0x183c <_Z10slotSelectv+0x14c>
			break;
			
			case _BV(5): //Slot Down
			while (PINB != 0);
			addr = (addr == 19) ? 0 : addr + 1;
    183a:	91 2c       	mov	r9, r1
			case _BV(4): //Select Slot
			while (PINB != 0);
			return addr;
			break;
		}
		while (PINB != 0);
    183c:	96 b3       	in	r25, 0x16	; 22
    183e:	91 11       	cpse	r25, r1
    1840:	fd cf       	rjmp	.-6      	; 0x183c <_Z10slotSelectv+0x14c>
    1842:	6a cf       	rjmp	.-300    	; 0x1718 <_Z10slotSelectv+0x28>
	}
}
    1844:	2e 96       	adiw	r28, 0x0e	; 14
    1846:	0f b6       	in	r0, 0x3f	; 63
    1848:	f8 94       	cli
    184a:	de bf       	out	0x3e, r29	; 62
    184c:	0f be       	out	0x3f, r0	; 63
    184e:	cd bf       	out	0x3d, r28	; 61
    1850:	df 91       	pop	r29
    1852:	cf 91       	pop	r28
    1854:	1f 91       	pop	r17
    1856:	0f 91       	pop	r16
    1858:	ff 90       	pop	r15
    185a:	ef 90       	pop	r14
    185c:	df 90       	pop	r13
    185e:	cf 90       	pop	r12
    1860:	bf 90       	pop	r11
    1862:	af 90       	pop	r10
    1864:	9f 90       	pop	r9
    1866:	08 95       	ret

00001868 <_Z12saveLocationdd>:
		
		readGPS(); //Retrieve GPS Data
	}
}

void saveLocation(double lat, double lng) {
    1868:	8f 92       	push	r8
    186a:	9f 92       	push	r9
    186c:	af 92       	push	r10
    186e:	bf 92       	push	r11
    1870:	df 92       	push	r13
    1872:	ef 92       	push	r14
    1874:	ff 92       	push	r15
    1876:	0f 93       	push	r16
    1878:	1f 93       	push	r17
    187a:	cf 93       	push	r28
    187c:	df 93       	push	r29
    187e:	cd b7       	in	r28, 0x3d	; 61
    1880:	de b7       	in	r29, 0x3e	; 62
    1882:	2e 97       	sbiw	r28, 0x0e	; 14
    1884:	0f b6       	in	r0, 0x3f	; 63
    1886:	f8 94       	cli
    1888:	de bf       	out	0x3e, r29	; 62
    188a:	0f be       	out	0x3f, r0	; 63
    188c:	cd bf       	out	0x3d, r28	; 61
	waypoint temp {
		"USWYP", // Name for User Saved Waypoints
		lat,
		lng
	};
    188e:	de 01       	movw	r26, r28
    1890:	11 96       	adiw	r26, 0x01	; 1
    1892:	1e e0       	ldi	r17, 0x0E	; 14
    1894:	fd 01       	movw	r30, r26
    1896:	11 92       	st	Z+, r1
    1898:	1a 95       	dec	r17
    189a:	e9 f7       	brne	.-6      	; 0x1896 <_Z12saveLocationdd+0x2e>
    189c:	16 e0       	ldi	r17, 0x06	; 6
    189e:	e0 e5       	ldi	r30, 0x50	; 80
    18a0:	f1 e0       	ldi	r31, 0x01	; 1
    18a2:	01 90       	ld	r0, Z+
    18a4:	0d 92       	st	X+, r0
    18a6:	1a 95       	dec	r17
    18a8:	e1 f7       	brne	.-8      	; 0x18a2 <_Z12saveLocationdd+0x3a>
    18aa:	6f 83       	std	Y+7, r22	; 0x07
    18ac:	78 87       	std	Y+8, r23	; 0x08
    18ae:	89 87       	std	Y+9, r24	; 0x09
    18b0:	9a 87       	std	Y+10, r25	; 0x0a
    18b2:	2b 87       	std	Y+11, r18	; 0x0b
    18b4:	3c 87       	std	Y+12, r19	; 0x0c
    18b6:	4d 87       	std	Y+13, r20	; 0x0d
    18b8:	5e 87       	std	Y+14, r21	; 0x0e
	
	uint8_t addr = slotSelect();					// Select Save Slot
    18ba:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <_Z10slotSelectv>
	if (!(addr == 20)) {							// 20 for Address Value Indicates Exit
    18be:	84 31       	cpi	r24, 0x14	; 20
    18c0:	e1 f1       	breq	.+120    	; 0x193a <_Z12saveLocationdd+0xd2>
		EEPROM.put(addr*sizeof(waypoint), temp);	// Write Waypoint to selected Slot
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	88 0f       	add	r24, r24
    18c6:	99 1f       	adc	r25, r25
    18c8:	8c 01       	movw	r16, r24
    18ca:	00 0f       	add	r16, r16
    18cc:	11 1f       	adc	r17, r17
    18ce:	00 0f       	add	r16, r16
    18d0:	11 1f       	adc	r17, r17
    18d2:	00 0f       	add	r16, r16
    18d4:	11 1f       	adc	r17, r17
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    18d6:	08 1b       	sub	r16, r24
    18d8:	19 0b       	sbc	r17, r25
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    18da:	0f 2e       	mov	r0, r31
    18dc:	fe e0       	ldi	r31, 0x0E	; 14
    18de:	ef 2e       	mov	r14, r31
    18e0:	f1 2c       	mov	r15, r1
    18e2:	f0 2d       	mov	r31, r0
        return t;
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
    18e4:	fe 01       	movw	r30, r28
    18e6:	31 96       	adiw	r30, 0x01	; 1
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    18e8:	e1 14       	cp	r14, r1
    18ea:	f1 04       	cpc	r15, r1
    18ec:	b9 f0       	breq	.+46     	; 0x191c <_Z12saveLocationdd+0xb4>
    18ee:	5f 01       	movw	r10, r30
    18f0:	2f ef       	ldi	r18, 0xFF	; 255
    18f2:	a2 1a       	sub	r10, r18
    18f4:	b2 0a       	sbc	r11, r18
    18f6:	d0 80       	ld	r13, Z
    operator int() const                { return index; }
    EEPtr &operator=( int in )          { return index = in, *this; }
    
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    18f8:	48 01       	movw	r8, r16

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    18fa:	c8 01       	movw	r24, r16
    18fc:	0e 94 02 1a 	call	0x3404	; 0x3404 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    1900:	d8 16       	cp	r13, r24
    1902:	21 f0       	breq	.+8      	; 0x190c <_Z12saveLocationdd+0xa4>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    1904:	6d 2d       	mov	r22, r13
    1906:	c8 01       	movw	r24, r16
    1908:	0e 94 0a 1a 	call	0x3414	; 0x3414 <eeprom_write_byte>
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    190c:	81 e0       	ldi	r24, 0x01	; 1
    190e:	e8 1a       	sub	r14, r24
    1910:	f1 08       	sbc	r15, r1
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    1912:	84 01       	movw	r16, r8
    1914:	0f 5f       	subi	r16, 0xFF	; 255
    1916:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    1918:	f5 01       	movw	r30, r10
    191a:	e6 cf       	rjmp	.-52     	; 0x18e8 <_Z12saveLocationdd+0x80>
		LCDClr();
    191c:	0e 94 b7 09 	call	0x136e	; 0x136e <_Z6LCDClrv>
		string2LCD("Position Saved");
    1920:	87 e3       	ldi	r24, 0x37	; 55
    1922:	91 e0       	ldi	r25, 0x01	; 1
    1924:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
    1928:	9f ef       	ldi	r25, 0xFF	; 255
    192a:	e9 e6       	ldi	r30, 0x69	; 105
    192c:	f8 e1       	ldi	r31, 0x18	; 24
    192e:	91 50       	subi	r25, 0x01	; 1
    1930:	e0 40       	sbci	r30, 0x00	; 0
    1932:	f0 40       	sbci	r31, 0x00	; 0
    1934:	e1 f7       	brne	.-8      	; 0x192e <_Z12saveLocationdd+0xc6>
    1936:	00 c0       	rjmp	.+0      	; 0x1938 <_Z12saveLocationdd+0xd0>
    1938:	00 00       	nop
		_delay_ms(1000);
	}
	
	// Re-Print Static Layout for Position Screen
	LCDClr();
    193a:	0e 94 b7 09 	call	0x136e	; 0x136e <_Z6LCDClrv>
	string2LCD("LAT:");
    193e:	86 e4       	ldi	r24, 0x46	; 70
    1940:	91 e0       	ldi	r25, 0x01	; 1
    1942:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	moveCursor(0,1);
    1946:	61 e0       	ldi	r22, 0x01	; 1
    1948:	80 e0       	ldi	r24, 0x00	; 0
    194a:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("LON:");
    194e:	8b e4       	ldi	r24, 0x4B	; 75
    1950:	91 e0       	ldi	r25, 0x01	; 1
    1952:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
}
    1956:	2e 96       	adiw	r28, 0x0e	; 14
    1958:	0f b6       	in	r0, 0x3f	; 63
    195a:	f8 94       	cli
    195c:	de bf       	out	0x3e, r29	; 62
    195e:	0f be       	out	0x3f, r0	; 63
    1960:	cd bf       	out	0x3d, r28	; 61
    1962:	df 91       	pop	r29
    1964:	cf 91       	pop	r28
    1966:	1f 91       	pop	r17
    1968:	0f 91       	pop	r16
    196a:	ff 90       	pop	r15
    196c:	ef 90       	pop	r14
    196e:	df 90       	pop	r13
    1970:	bf 90       	pop	r11
    1972:	af 90       	pop	r10
    1974:	9f 90       	pop	r9
    1976:	8f 90       	pop	r8
    1978:	08 95       	ret

0000197a <_Z9posScreenv>:
		}
		readGPS(); //Retrieve GPS Data
	}
}

void posScreen() { // Position Tracking Screen
    197a:	cf 92       	push	r12
    197c:	df 92       	push	r13
    197e:	ef 92       	push	r14
    1980:	ff 92       	push	r15
    1982:	0f 93       	push	r16
    1984:	1f 93       	push	r17
    1986:	cf 93       	push	r28
    1988:	df 93       	push	r29
	// Print Static Layout
	string2LCD("LAT:");
    198a:	86 e4       	ldi	r24, 0x46	; 70
    198c:	91 e0       	ldi	r25, 0x01	; 1
    198e:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	moveCursor(0,1);
    1992:	61 e0       	ldi	r22, 0x01	; 1
    1994:	80 e0       	ldi	r24, 0x00	; 0
    1996:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("LON:");
    199a:	8b e4       	ldi	r24, 0x4B	; 75
    199c:	91 e0       	ldi	r25, 0x01	; 1
    199e:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	
	while (working) {
    19a2:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <working>
    19a6:	88 23       	and	r24, r24
    19a8:	09 f4       	brne	.+2      	; 0x19ac <_Z9posScreenv+0x32>
    19aa:	4e c0       	rjmp	.+156    	; 0x1a48 <_Z9posScreenv+0xce>

struct TinyGPSLocation
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
    19ac:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <gps>
		if (gps.location.isValid()) { // Print Data if valid
    19b0:	88 23       	and	r24, r24
    19b2:	b1 f1       	breq	.+108    	; 0x1a20 <_Z9posScreenv+0xa6>
			moveCursor(4,0);
    19b4:	60 e0       	ldi	r22, 0x00	; 0
    19b6:	84 e0       	ldi	r24, 0x04	; 4
    19b8:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
			sprintf(lcdBuf, "%f", gps.location.lat());
    19bc:	80 e3       	ldi	r24, 0x30	; 48
    19be:	92 e0       	ldi	r25, 0x02	; 2
    19c0:	0e 94 89 05 	call	0xb12	; 0xb12 <_ZN15TinyGPSLocation3latEv>
    19c4:	9f 93       	push	r25
    19c6:	8f 93       	push	r24
    19c8:	7f 93       	push	r23
    19ca:	6f 93       	push	r22
    19cc:	06 e5       	ldi	r16, 0x56	; 86
    19ce:	11 e0       	ldi	r17, 0x01	; 1
    19d0:	1f 93       	push	r17
    19d2:	0f 93       	push	r16
    19d4:	ce ed       	ldi	r28, 0xDE	; 222
    19d6:	d2 e0       	ldi	r29, 0x02	; 2
    19d8:	df 93       	push	r29
    19da:	cf 93       	push	r28
    19dc:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
			string2LCD(lcdBuf);
    19e0:	ce 01       	movw	r24, r28
    19e2:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
			moveCursor(4,1);
    19e6:	61 e0       	ldi	r22, 0x01	; 1
    19e8:	84 e0       	ldi	r24, 0x04	; 4
    19ea:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
			sprintf(lcdBuf, "%f", gps.location.lng());
    19ee:	80 e3       	ldi	r24, 0x30	; 48
    19f0:	92 e0       	ldi	r25, 0x02	; 2
    19f2:	0e 94 b5 05 	call	0xb6a	; 0xb6a <_ZN15TinyGPSLocation3lngEv>
    19f6:	9f 93       	push	r25
    19f8:	8f 93       	push	r24
    19fa:	7f 93       	push	r23
    19fc:	6f 93       	push	r22
    19fe:	1f 93       	push	r17
    1a00:	0f 93       	push	r16
    1a02:	df 93       	push	r29
    1a04:	cf 93       	push	r28
    1a06:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
			string2LCD(lcdBuf);
    1a0a:	ce 01       	movw	r24, r28
    1a0c:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
    1a10:	8d b7       	in	r24, 0x3d	; 61
    1a12:	9e b7       	in	r25, 0x3e	; 62
    1a14:	40 96       	adiw	r24, 0x10	; 16
    1a16:	0f b6       	in	r0, 0x3f	; 63
    1a18:	f8 94       	cli
    1a1a:	9e bf       	out	0x3e, r25	; 62
    1a1c:	0f be       	out	0x3f, r0	; 63
    1a1e:	8d bf       	out	0x3d, r24	; 61
		}
		
		if (PINB == _BV(3)) { // Save Current Location to EEPROM
    1a20:	86 b3       	in	r24, 0x16	; 22
    1a22:	88 30       	cpi	r24, 0x08	; 8
    1a24:	71 f4       	brne	.+28     	; 0x1a42 <_Z9posScreenv+0xc8>
			saveLocation(gps.location.lat(), gps.location.lng());
    1a26:	80 e3       	ldi	r24, 0x30	; 48
    1a28:	92 e0       	ldi	r25, 0x02	; 2
    1a2a:	0e 94 b5 05 	call	0xb6a	; 0xb6a <_ZN15TinyGPSLocation3lngEv>
    1a2e:	6b 01       	movw	r12, r22
    1a30:	7c 01       	movw	r14, r24
    1a32:	80 e3       	ldi	r24, 0x30	; 48
    1a34:	92 e0       	ldi	r25, 0x02	; 2
    1a36:	0e 94 89 05 	call	0xb12	; 0xb12 <_ZN15TinyGPSLocation3latEv>
    1a3a:	a7 01       	movw	r20, r14
    1a3c:	96 01       	movw	r18, r12
    1a3e:	0e 94 34 0c 	call	0x1868	; 0x1868 <_Z12saveLocationdd>
		}
		
		readGPS(); //Retrieve GPS Data
    1a42:	0e 94 31 0a 	call	0x1462	; 0x1462 <_ZL7readGPSv>
	// Print Static Layout
	string2LCD("LAT:");
	moveCursor(0,1);
	string2LCD("LON:");
	
	while (working) {
    1a46:	ad cf       	rjmp	.-166    	; 0x19a2 <_Z9posScreenv+0x28>
			saveLocation(gps.location.lat(), gps.location.lng());
		}
		
		readGPS(); //Retrieve GPS Data
	}
}
    1a48:	df 91       	pop	r29
    1a4a:	cf 91       	pop	r28
    1a4c:	1f 91       	pop	r17
    1a4e:	0f 91       	pop	r16
    1a50:	ff 90       	pop	r15
    1a52:	ef 90       	pop	r14
    1a54:	df 90       	pop	r13
    1a56:	cf 90       	pop	r12
    1a58:	08 95       	ret

00001a5a <_Z9navScreenv>:
	string2LCD("LAT:");
	moveCursor(0,1);
	string2LCD("LON:");
}

void navScreen() { // Navigation Screen
    1a5a:	4f 92       	push	r4
    1a5c:	5f 92       	push	r5
    1a5e:	6f 92       	push	r6
    1a60:	7f 92       	push	r7
    1a62:	af 92       	push	r10
    1a64:	bf 92       	push	r11
    1a66:	cf 92       	push	r12
    1a68:	df 92       	push	r13
    1a6a:	ef 92       	push	r14
    1a6c:	ff 92       	push	r15
    1a6e:	0f 93       	push	r16
    1a70:	1f 93       	push	r17
    1a72:	cf 93       	push	r28
    1a74:	df 93       	push	r29
    1a76:	cd b7       	in	r28, 0x3d	; 61
    1a78:	de b7       	in	r29, 0x3e	; 62
    1a7a:	66 97       	sbiw	r28, 0x16	; 22
    1a7c:	0f b6       	in	r0, 0x3f	; 63
    1a7e:	f8 94       	cli
    1a80:	de bf       	out	0x3e, r29	; 62
    1a82:	0f be       	out	0x3f, r0	; 63
    1a84:	cd bf       	out	0x3d, r28	; 61
	waypoint temp;
	double dist = 0;
	int addr = slotSelect(); // Select Destination from EEPROM
    1a86:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <_Z10slotSelectv>
	if (addr == 20) return;
    1a8a:	84 31       	cpi	r24, 0x14	; 20
    1a8c:	09 f4       	brne	.+2      	; 0x1a90 <_Z9navScreenv+0x36>
    1a8e:	dc c0       	rjmp	.+440    	; 0x1c48 <_Z9navScreenv+0x1ee>
	EEPROM.get(addr*sizeof(waypoint), temp);
    1a90:	90 e0       	ldi	r25, 0x00	; 0
    1a92:	88 0f       	add	r24, r24
    1a94:	99 1f       	adc	r25, r25
    1a96:	6c 01       	movw	r12, r24
    1a98:	cc 0c       	add	r12, r12
    1a9a:	dd 1c       	adc	r13, r13
    1a9c:	cc 0c       	add	r12, r12
    1a9e:	dd 1c       	adc	r13, r13
    1aa0:	cc 0c       	add	r12, r12
    1aa2:	dd 1c       	adc	r13, r13
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    1aa4:	c8 1a       	sub	r12, r24
    1aa6:	d9 0a       	sbc	r13, r25
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    1aa8:	0e e0       	ldi	r16, 0x0E	; 14
    1aaa:	10 e0       	ldi	r17, 0x00	; 0
    uint16_t length()                    { return E2END + 1; }
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
    1aac:	ce 01       	movw	r24, r28
    1aae:	01 96       	adiw	r24, 0x01	; 1
    1ab0:	5c 01       	movw	r10, r24
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    1ab2:	01 15       	cp	r16, r1
    1ab4:	11 05       	cpc	r17, r1
    1ab6:	81 f0       	breq	.+32     	; 0x1ad8 <_Z9navScreenv+0x7e>
    1ab8:	35 01       	movw	r6, r10
    1aba:	9f ef       	ldi	r25, 0xFF	; 255
    1abc:	69 1a       	sub	r6, r25
    1abe:	79 0a       	sbc	r7, r25

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    1ac0:	c6 01       	movw	r24, r12
    1ac2:	0e 94 02 1a 	call	0x3404	; 0x3404 <eeprom_read_byte>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    1ac6:	f5 01       	movw	r30, r10
    1ac8:	80 83       	st	Z, r24
    1aca:	01 50       	subi	r16, 0x01	; 1
    1acc:	11 09       	sbc	r17, r1
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    1ace:	ff ef       	ldi	r31, 0xFF	; 255
    1ad0:	cf 1a       	sub	r12, r31
    1ad2:	df 0a       	sbc	r13, r31
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    1ad4:	53 01       	movw	r10, r6
    1ad6:	ed cf       	rjmp	.-38     	; 0x1ab2 <_Z9navScreenv+0x58>
	
	// Print Static Layout
	LCDClr();
    1ad8:	0e 94 b7 09 	call	0x136e	; 0x136e <_Z6LCDClrv>
	sprintf(lcdBuf, "Dest:%s", temp.name);
    1adc:	ce 01       	movw	r24, r28
    1ade:	01 96       	adiw	r24, 0x01	; 1
    1ae0:	9f 93       	push	r25
    1ae2:	8f 93       	push	r24
    1ae4:	89 e5       	ldi	r24, 0x59	; 89
    1ae6:	91 e0       	ldi	r25, 0x01	; 1
    1ae8:	9f 93       	push	r25
    1aea:	8f 93       	push	r24
    1aec:	8e ed       	ldi	r24, 0xDE	; 222
    1aee:	92 e0       	ldi	r25, 0x02	; 2
    1af0:	9f 93       	push	r25
    1af2:	8f 93       	push	r24
    1af4:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
	string2LCD(lcdBuf);
    1af8:	8e ed       	ldi	r24, 0xDE	; 222
    1afa:	92 e0       	ldi	r25, 0x02	; 2
    1afc:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
    1b00:	0f 90       	pop	r0
    1b02:	0f 90       	pop	r0
    1b04:	0f 90       	pop	r0
    1b06:	0f 90       	pop	r0
    1b08:	0f 90       	pop	r0
    1b0a:	0f 90       	pop	r0
	string2LCD("LON:");
}

void navScreen() { // Navigation Screen
	waypoint temp;
	double dist = 0;
    1b0c:	1f 86       	std	Y+15, r1	; 0x0f
    1b0e:	18 8a       	std	Y+16, r1	; 0x10
    1b10:	19 8a       	std	Y+17, r1	; 0x11
    1b12:	1a 8a       	std	Y+18, r1	; 0x12
	// Print Static Layout
	LCDClr();
	sprintf(lcdBuf, "Dest:%s", temp.name);
	string2LCD(lcdBuf);
	
	while (working) {
    1b14:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <working>
    1b18:	88 23       	and	r24, r24
    1b1a:	09 f4       	brne	.+2      	; 0x1b1e <_Z9navScreenv+0xc4>
    1b1c:	95 c0       	rjmp	.+298    	; 0x1c48 <_Z9navScreenv+0x1ee>
    1b1e:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <gps>
		if (gps.location.isValid()) {
    1b22:	88 23       	and	r24, r24
    1b24:	09 f4       	brne	.+2      	; 0x1b28 <_Z9navScreenv+0xce>
    1b26:	67 c0       	rjmp	.+206    	; 0x1bf6 <_Z9navScreenv+0x19c>
			dist = gps.distanceBetween (
			gps.location.lat(),
			gps.location.lng(),
			temp.lat,
			temp.lng
    1b28:	ab 84       	ldd	r10, Y+11	; 0x0b
    1b2a:	bc 84       	ldd	r11, Y+12	; 0x0c
    1b2c:	cd 84       	ldd	r12, Y+13	; 0x0d
    1b2e:	de 84       	ldd	r13, Y+14	; 0x0e
	while (working) {
		if (gps.location.isValid()) {
			dist = gps.distanceBetween (
			gps.location.lat(),
			gps.location.lng(),
			temp.lat,
    1b30:	4f 80       	ldd	r4, Y+7	; 0x07
    1b32:	58 84       	ldd	r5, Y+8	; 0x08
    1b34:	69 84       	ldd	r6, Y+9	; 0x09
    1b36:	7a 84       	ldd	r7, Y+10	; 0x0a
	sprintf(lcdBuf, "Dest:%s", temp.name);
	string2LCD(lcdBuf);
	
	while (working) {
		if (gps.location.isValid()) {
			dist = gps.distanceBetween (
    1b38:	80 e3       	ldi	r24, 0x30	; 48
    1b3a:	92 e0       	ldi	r25, 0x02	; 2
    1b3c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <_ZN15TinyGPSLocation3lngEv>
    1b40:	6f 87       	std	Y+15, r22	; 0x0f
    1b42:	78 8b       	std	Y+16, r23	; 0x10
    1b44:	89 8b       	std	Y+17, r24	; 0x11
    1b46:	9a 8b       	std	Y+18, r25	; 0x12
    1b48:	80 e3       	ldi	r24, 0x30	; 48
    1b4a:	92 e0       	ldi	r25, 0x02	; 2
    1b4c:	0e 94 89 05 	call	0xb12	; 0xb12 <_ZN15TinyGPSLocation3latEv>
			gps.location.lat(),
			gps.location.lng(),
			temp.lat,
			temp.lng
			);
    1b50:	83 01       	movw	r16, r6
    1b52:	72 01       	movw	r14, r4
    1b54:	2f 85       	ldd	r18, Y+15	; 0x0f
    1b56:	38 89       	ldd	r19, Y+16	; 0x10
    1b58:	49 89       	ldd	r20, Y+17	; 0x11
    1b5a:	5a 89       	ldd	r21, Y+18	; 0x12
    1b5c:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZN11TinyGPSPlus15distanceBetweenEdddd>
    1b60:	6f 87       	std	Y+15, r22	; 0x0f
    1b62:	78 8b       	std	Y+16, r23	; 0x10
    1b64:	89 8b       	std	Y+17, r24	; 0x11
    1b66:	9a 8b       	std	Y+18, r25	; 0x12
			
			moveCursor(0,1);
    1b68:	61 e0       	ldi	r22, 0x01	; 1
    1b6a:	80 e0       	ldi	r24, 0x00	; 0
    1b6c:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
			dist/ 1000,
			gps.cardinal(gps.courseTo (
			gps.location.lat(),
			gps.location.lng(),
			temp.lat,
			temp.lng
    1b70:	ab 84       	ldd	r10, Y+11	; 0x0b
    1b72:	bc 84       	ldd	r11, Y+12	; 0x0c
    1b74:	cd 84       	ldd	r12, Y+13	; 0x0d
    1b76:	de 84       	ldd	r13, Y+14	; 0x0e
			sprintf(lcdBuf, "%.3fKm %s",
			dist/ 1000,
			gps.cardinal(gps.courseTo (
			gps.location.lat(),
			gps.location.lng(),
			temp.lat,
    1b78:	4f 80       	ldd	r4, Y+7	; 0x07
    1b7a:	58 84       	ldd	r5, Y+8	; 0x08
    1b7c:	69 84       	ldd	r6, Y+9	; 0x09
    1b7e:	7a 84       	ldd	r7, Y+10	; 0x0a
			temp.lat,
			temp.lng
			);
			
			moveCursor(0,1);
			sprintf(lcdBuf, "%.3fKm %s",
    1b80:	80 e3       	ldi	r24, 0x30	; 48
    1b82:	92 e0       	ldi	r25, 0x02	; 2
    1b84:	0e 94 b5 05 	call	0xb6a	; 0xb6a <_ZN15TinyGPSLocation3lngEv>
    1b88:	6b 8b       	std	Y+19, r22	; 0x13
    1b8a:	7c 8b       	std	Y+20, r23	; 0x14
    1b8c:	8d 8b       	std	Y+21, r24	; 0x15
    1b8e:	9e 8b       	std	Y+22, r25	; 0x16
    1b90:	80 e3       	ldi	r24, 0x30	; 48
    1b92:	92 e0       	ldi	r25, 0x02	; 2
    1b94:	0e 94 89 05 	call	0xb12	; 0xb12 <_ZN15TinyGPSLocation3latEv>
    1b98:	83 01       	movw	r16, r6
    1b9a:	72 01       	movw	r14, r4
    1b9c:	2b 89       	ldd	r18, Y+19	; 0x13
    1b9e:	3c 89       	ldd	r19, Y+20	; 0x14
    1ba0:	4d 89       	ldd	r20, Y+21	; 0x15
    1ba2:	5e 89       	ldd	r21, Y+22	; 0x16
    1ba4:	0e 94 6e 04 	call	0x8dc	; 0x8dc <_ZN11TinyGPSPlus8courseToEdddd>
    1ba8:	0e 94 38 05 	call	0xa70	; 0xa70 <_ZN11TinyGPSPlus8cardinalEd>
    1bac:	18 2f       	mov	r17, r24
    1bae:	09 2f       	mov	r16, r25
    1bb0:	20 e0       	ldi	r18, 0x00	; 0
    1bb2:	30 e0       	ldi	r19, 0x00	; 0
    1bb4:	4a e7       	ldi	r20, 0x7A	; 122
    1bb6:	54 e4       	ldi	r21, 0x44	; 68
    1bb8:	6f 85       	ldd	r22, Y+15	; 0x0f
    1bba:	78 89       	ldd	r23, Y+16	; 0x10
    1bbc:	89 89       	ldd	r24, Y+17	; 0x11
    1bbe:	9a 89       	ldd	r25, Y+18	; 0x12
    1bc0:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__divsf3>
			gps.cardinal(gps.courseTo (
			gps.location.lat(),
			gps.location.lng(),
			temp.lat,
			temp.lng
			)));
    1bc4:	0f 93       	push	r16
    1bc6:	1f 93       	push	r17
    1bc8:	9f 93       	push	r25
    1bca:	8f 93       	push	r24
    1bcc:	7f 93       	push	r23
    1bce:	6f 93       	push	r22
    1bd0:	81 e6       	ldi	r24, 0x61	; 97
    1bd2:	91 e0       	ldi	r25, 0x01	; 1
    1bd4:	9f 93       	push	r25
    1bd6:	8f 93       	push	r24
    1bd8:	8e ed       	ldi	r24, 0xDE	; 222
    1bda:	92 e0       	ldi	r25, 0x02	; 2
    1bdc:	9f 93       	push	r25
    1bde:	8f 93       	push	r24
    1be0:	0e 94 82 19 	call	0x3304	; 0x3304 <sprintf>
			string2LCD(lcdBuf);
    1be4:	8e ed       	ldi	r24, 0xDE	; 222
    1be6:	92 e0       	ldi	r25, 0x02	; 2
    1be8:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
    1bec:	0f b6       	in	r0, 0x3f	; 63
    1bee:	f8 94       	cli
    1bf0:	de bf       	out	0x3e, r29	; 62
    1bf2:	0f be       	out	0x3f, r0	; 63
    1bf4:	cd bf       	out	0x3d, r28	; 61
		}
		readGPS();
    1bf6:	0e 94 31 0a 	call	0x1462	; 0x1462 <_ZL7readGPSv>
		
		if (dist < 10) { // Destination Readched When within 10m of destination
    1bfa:	20 e0       	ldi	r18, 0x00	; 0
    1bfc:	30 e0       	ldi	r19, 0x00	; 0
    1bfe:	40 e2       	ldi	r20, 0x20	; 32
    1c00:	51 e4       	ldi	r21, 0x41	; 65
    1c02:	6f 85       	ldd	r22, Y+15	; 0x0f
    1c04:	78 89       	ldd	r23, Y+16	; 0x10
    1c06:	89 89       	ldd	r24, Y+17	; 0x11
    1c08:	9a 89       	ldd	r25, Y+18	; 0x12
    1c0a:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <__cmpsf2>
    1c0e:	88 23       	and	r24, r24
    1c10:	0c f0       	brlt	.+2      	; 0x1c14 <_Z9navScreenv+0x1ba>
    1c12:	80 cf       	rjmp	.-256    	; 0x1b14 <_Z9navScreenv+0xba>
			LCDClr();
    1c14:	0e 94 b7 09 	call	0x136e	; 0x136e <_Z6LCDClrv>
			string2LCD("Destination");
    1c18:	8b e6       	ldi	r24, 0x6B	; 107
    1c1a:	91 e0       	ldi	r25, 0x01	; 1
    1c1c:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
			moveCursor(0,1);
    1c20:	61 e0       	ldi	r22, 0x01	; 1
    1c22:	80 e0       	ldi	r24, 0x00	; 0
    1c24:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
			string2LCD("Reached");
    1c28:	87 e7       	ldi	r24, 0x77	; 119
    1c2a:	91 e0       	ldi	r25, 0x01	; 1
    1c2c:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
    1c30:	9f ef       	ldi	r25, 0xFF	; 255
    1c32:	e9 e6       	ldi	r30, 0x69	; 105
    1c34:	f8 e1       	ldi	r31, 0x18	; 24
    1c36:	91 50       	subi	r25, 0x01	; 1
    1c38:	e0 40       	sbci	r30, 0x00	; 0
    1c3a:	f0 40       	sbci	r31, 0x00	; 0
    1c3c:	e1 f7       	brne	.-8      	; 0x1c36 <_Z9navScreenv+0x1dc>
    1c3e:	00 c0       	rjmp	.+0      	; 0x1c40 <_Z9navScreenv+0x1e6>
    1c40:	00 00       	nop
			_delay_ms(1000);
			working = false;
    1c42:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <working>
    1c46:	66 cf       	rjmp	.-308    	; 0x1b14 <_Z9navScreenv+0xba>
		}
	}
}
    1c48:	66 96       	adiw	r28, 0x16	; 22
    1c4a:	0f b6       	in	r0, 0x3f	; 63
    1c4c:	f8 94       	cli
    1c4e:	de bf       	out	0x3e, r29	; 62
    1c50:	0f be       	out	0x3f, r0	; 63
    1c52:	cd bf       	out	0x3d, r28	; 61
    1c54:	df 91       	pop	r29
    1c56:	cf 91       	pop	r28
    1c58:	1f 91       	pop	r17
    1c5a:	0f 91       	pop	r16
    1c5c:	ff 90       	pop	r15
    1c5e:	ef 90       	pop	r14
    1c60:	df 90       	pop	r13
    1c62:	cf 90       	pop	r12
    1c64:	bf 90       	pop	r11
    1c66:	af 90       	pop	r10
    1c68:	7f 90       	pop	r7
    1c6a:	6f 90       	pop	r6
    1c6c:	5f 90       	pop	r5
    1c6e:	4f 90       	pop	r4
    1c70:	08 95       	ret

00001c72 <_Z10mainScreenv>:
	_delay_ms(1000);
}

void mainScreen() { // Main Screen of the Device
	// Menu Layout to LCD
	LCDClr();
    1c72:	0e 94 b7 09 	call	0x136e	; 0x136e <_Z6LCDClrv>
	moveCursor(0,0);
    1c76:	60 e0       	ldi	r22, 0x00	; 0
    1c78:	80 e0       	ldi	r24, 0x00	; 0
    1c7a:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("PB7:T&D  PB6:POS");
    1c7e:	8f e7       	ldi	r24, 0x7F	; 127
    1c80:	91 e0       	ldi	r25, 0x01	; 1
    1c82:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	moveCursor(0,1);
    1c86:	61 e0       	ldi	r22, 0x01	; 1
    1c88:	80 e0       	ldi	r24, 0x00	; 0
    1c8a:	0e 94 a4 09 	call	0x1348	; 0x1348 <_Z10moveCursorhh>
	string2LCD("PB5:NAV  PB4:Dx");
    1c8e:	80 e9       	ldi	r24, 0x90	; 144
    1c90:	91 e0       	ldi	r25, 0x01	; 1
    1c92:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z10string2LCDPKc>
	
	// Awaits Button Press
	while (PINB == 0);
    1c96:	86 b3       	in	r24, 0x16	; 22
    1c98:	88 23       	and	r24, r24
    1c9a:	e9 f3       	breq	.-6      	; 0x1c96 <_Z10mainScreenv+0x24>
	LCDClr();
    1c9c:	0e 94 b7 09 	call	0x136e	; 0x136e <_Z6LCDClrv>
	working = true;			// Device Switches to functions
    1ca0:	81 e0       	ldi	r24, 0x01	; 1
    1ca2:	80 93 dd 02 	sts	0x02DD, r24	; 0x8002dd <working>
	switch (PINB) {			//Determine Pressed Pin
    1ca6:	86 b3       	in	r24, 0x16	; 22
    1ca8:	80 32       	cpi	r24, 0x20	; 32
    1caa:	a1 f0       	breq	.+40     	; 0x1cd4 <_Z10mainScreenv+0x62>
    1cac:	18 f4       	brcc	.+6      	; 0x1cb4 <_Z10mainScreenv+0x42>
    1cae:	80 31       	cpi	r24, 0x10	; 16
    1cb0:	b9 f0       	breq	.+46     	; 0x1ce0 <_Z10mainScreenv+0x6e>
    1cb2:	08 95       	ret
    1cb4:	80 34       	cpi	r24, 0x40	; 64
    1cb6:	41 f0       	breq	.+16     	; 0x1cc8 <_Z10mainScreenv+0x56>
    1cb8:	80 38       	cpi	r24, 0x80	; 128
    1cba:	b9 f4       	brne	.+46     	; 0x1cea <_Z10mainScreenv+0x78>
		case _BV(7):		//Time & Date Screen
		while (PINB != 0);	//Awaits Button Release
    1cbc:	86 b3       	in	r24, 0x16	; 22
    1cbe:	81 11       	cpse	r24, r1
    1cc0:	fd cf       	rjmp	.-6      	; 0x1cbc <_Z10mainScreenv+0x4a>
		tndScreen();
    1cc2:	0e 94 84 0a 	call	0x1508	; 0x1508 <_Z9tndScreenv>
		break;
    1cc6:	08 95       	ret
		
		case _BV(6): //Position Tracker Screen
		while (PINB != 0);
    1cc8:	86 b3       	in	r24, 0x16	; 22
    1cca:	81 11       	cpse	r24, r1
    1ccc:	fd cf       	rjmp	.-6      	; 0x1cc8 <_Z10mainScreenv+0x56>
		posScreen();
    1cce:	0e 94 bd 0c 	call	0x197a	; 0x197a <_Z9posScreenv>
		break;
    1cd2:	08 95       	ret
		
		case _BV(5): //Navigation Screen
		while (PINB != 0);
    1cd4:	86 b3       	in	r24, 0x16	; 22
    1cd6:	81 11       	cpse	r24, r1
    1cd8:	fd cf       	rjmp	.-6      	; 0x1cd4 <_Z10mainScreenv+0x62>
		navScreen();
    1cda:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <_Z9navScreenv>
		break;
    1cde:	08 95       	ret

		case _BV(4): //Diagnostic Screen
		while (PINB != 0);
    1ce0:	86 b3       	in	r24, 0x16	; 22
    1ce2:	81 11       	cpse	r24, r1
    1ce4:	fd cf       	rjmp	.-6      	; 0x1ce0 <_Z10mainScreenv+0x6e>
		diagScreen();
    1ce6:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <_Z10diagScreenv>
    1cea:	08 95       	ret

00001cec <main>:
void diagScreen();
uint8_t slotSelect();
static void readGPS();

int main(void) {
	GICR = (1 << INT2);		// INT2 Setup
    1cec:	80 e2       	ldi	r24, 0x20	; 32
    1cee:	8b bf       	out	0x3b, r24	; 59
	MCUCSR = (1 << ISC2);
    1cf0:	80 e4       	ldi	r24, 0x40	; 64
    1cf2:	84 bf       	out	0x34, r24	; 52
	sei();
    1cf4:	78 94       	sei
	
	runTimeInit();	// Start Runtime Tracker For GPS Parser
    1cf6:	0e 94 66 01 	call	0x2cc	; 0x2cc <_Z11runTimeInitv>
	LCDInit();		// Initialize LCD
    1cfa:	0e 94 cc 09 	call	0x1398	; 0x1398 <_Z7LCDInitv>
	USART_start();	// Start USART
    1cfe:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <_Z11USART_startv>
	bootScreen();	// Boot Sequence
    1d02:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <_Z10bootScreenv>
	
	while(1) {
		mainScreen(); // Main Menu Always Active
    1d06:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <_Z10mainScreenv>
    1d0a:	fd cf       	rjmp	.-6      	; 0x1d06 <main+0x1a>

00001d0c <__vector_3>:
	} else {
		while(!(gps.encode((USART_receive()))) & working); //Retrive Data from GPS until Sentence Complete
	}
}

ISR(INT2_vect) { // Interrupt Vector for Returning to Main Menu
    1d0c:	1f 92       	push	r1
    1d0e:	0f 92       	push	r0
    1d10:	0f b6       	in	r0, 0x3f	; 63
    1d12:	0f 92       	push	r0
    1d14:	11 24       	eor	r1, r1
    1d16:	8f 93       	push	r24
    1d18:	9f 93       	push	r25
	uint8_t sregstore = SREG;
    1d1a:	9f b7       	in	r25, 0x3f	; 63
	while (PINB == 4); // Wait for pin Release
    1d1c:	86 b3       	in	r24, 0x16	; 22
    1d1e:	84 30       	cpi	r24, 0x04	; 4
    1d20:	e9 f3       	breq	.-6      	; 0x1d1c <__vector_3+0x10>
	working = false;
    1d22:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <working>
	SREG = sregstore;
    1d26:	9f bf       	out	0x3f, r25	; 63
    1d28:	9f 91       	pop	r25
    1d2a:	8f 91       	pop	r24
    1d2c:	0f 90       	pop	r0
    1d2e:	0f be       	out	0x3f, r0	; 63
    1d30:	0f 90       	pop	r0
    1d32:	1f 90       	pop	r1
    1d34:	18 95       	reti

00001d36 <_GLOBAL__sub_I_lcdBuf>:
    1d36:	6f ef       	ldi	r22, 0xFF	; 255
    1d38:	7f ef       	ldi	r23, 0xFF	; 255
    1d3a:	81 e0       	ldi	r24, 0x01	; 1
    1d3c:	90 e0       	ldi	r25, 0x00	; 0
    1d3e:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <_Z41__static_initialization_and_destruction_0ii>
    1d42:	08 95       	ret

00001d44 <_Z11USART_startv>:
***************************************************************************/

#include "USARTHandler.h"

void USART_start() {									// USART initialize function
	UBRRL = (unsigned char) BAUD_PRESCALE;				// Set Baud Rate
    1d44:	83 e3       	ldi	r24, 0x33	; 51
    1d46:	89 b9       	out	0x09, r24	; 9
	UBRRH = (unsigned char) (BAUD_PRESCALE >> 8);		// Set Baud Rate
    1d48:	10 bc       	out	0x20, r1	; 32
	UCSRB |= (1 << RXEN) | (1 << TXEN) | (0 << RXCIE);	// Enable USART transmitter and receiver
    1d4a:	8a b1       	in	r24, 0x0a	; 10
    1d4c:	88 61       	ori	r24, 0x18	; 24
    1d4e:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1 << URSEL)| (1 << UCSZ0) | (1 << UCSZ1);	// Write USCRC for 8 bit data and 1 stop bit (Modify For Device Needs)
    1d50:	80 b5       	in	r24, 0x20	; 32
    1d52:	86 68       	ori	r24, 0x86	; 134
    1d54:	80 bd       	out	0x20, r24	; 32
    1d56:	08 95       	ret

00001d58 <_Z13USART_receivev>:
}

char USART_receive() {				// Retrieves Char from USART-RX
	while (!(UCSRA & (1 << RXC)));	// Waits Until Receive Register Valid
    1d58:	5f 9b       	sbis	0x0b, 7	; 11
    1d5a:	fe cf       	rjmp	.-4      	; 0x1d58 <_Z13USART_receivev>
	return(UDR);					// Returns Receive Register
    1d5c:	8c b1       	in	r24, 0x0c	; 12
}
    1d5e:	08 95       	ret

00001d60 <__subsf3>:
    1d60:	50 58       	subi	r21, 0x80	; 128

00001d62 <__addsf3>:
    1d62:	bb 27       	eor	r27, r27
    1d64:	aa 27       	eor	r26, r26
    1d66:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__addsf3x>
    1d6a:	0c 94 0b 11 	jmp	0x2216	; 0x2216 <__fp_round>
    1d6e:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__fp_pscA>
    1d72:	38 f0       	brcs	.+14     	; 0x1d82 <__addsf3+0x20>
    1d74:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <__fp_pscB>
    1d78:	20 f0       	brcs	.+8      	; 0x1d82 <__addsf3+0x20>
    1d7a:	39 f4       	brne	.+14     	; 0x1d8a <__addsf3+0x28>
    1d7c:	9f 3f       	cpi	r25, 0xFF	; 255
    1d7e:	19 f4       	brne	.+6      	; 0x1d86 <__addsf3+0x24>
    1d80:	26 f4       	brtc	.+8      	; 0x1d8a <__addsf3+0x28>
    1d82:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>
    1d86:	0e f4       	brtc	.+2      	; 0x1d8a <__addsf3+0x28>
    1d88:	e0 95       	com	r30
    1d8a:	e7 fb       	bst	r30, 7
    1d8c:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__fp_inf>

00001d90 <__addsf3x>:
    1d90:	e9 2f       	mov	r30, r25
    1d92:	0e 94 30 11 	call	0x2260	; 0x2260 <__fp_split3>
    1d96:	58 f3       	brcs	.-42     	; 0x1d6e <__addsf3+0xc>
    1d98:	ba 17       	cp	r27, r26
    1d9a:	62 07       	cpc	r22, r18
    1d9c:	73 07       	cpc	r23, r19
    1d9e:	84 07       	cpc	r24, r20
    1da0:	95 07       	cpc	r25, r21
    1da2:	20 f0       	brcs	.+8      	; 0x1dac <__addsf3x+0x1c>
    1da4:	79 f4       	brne	.+30     	; 0x1dc4 <__addsf3x+0x34>
    1da6:	a6 f5       	brtc	.+104    	; 0x1e10 <__addsf3x+0x80>
    1da8:	0c 94 52 11 	jmp	0x22a4	; 0x22a4 <__fp_zero>
    1dac:	0e f4       	brtc	.+2      	; 0x1db0 <__addsf3x+0x20>
    1dae:	e0 95       	com	r30
    1db0:	0b 2e       	mov	r0, r27
    1db2:	ba 2f       	mov	r27, r26
    1db4:	a0 2d       	mov	r26, r0
    1db6:	0b 01       	movw	r0, r22
    1db8:	b9 01       	movw	r22, r18
    1dba:	90 01       	movw	r18, r0
    1dbc:	0c 01       	movw	r0, r24
    1dbe:	ca 01       	movw	r24, r20
    1dc0:	a0 01       	movw	r20, r0
    1dc2:	11 24       	eor	r1, r1
    1dc4:	ff 27       	eor	r31, r31
    1dc6:	59 1b       	sub	r21, r25
    1dc8:	99 f0       	breq	.+38     	; 0x1df0 <__addsf3x+0x60>
    1dca:	59 3f       	cpi	r21, 0xF9	; 249
    1dcc:	50 f4       	brcc	.+20     	; 0x1de2 <__addsf3x+0x52>
    1dce:	50 3e       	cpi	r21, 0xE0	; 224
    1dd0:	68 f1       	brcs	.+90     	; 0x1e2c <__addsf3x+0x9c>
    1dd2:	1a 16       	cp	r1, r26
    1dd4:	f0 40       	sbci	r31, 0x00	; 0
    1dd6:	a2 2f       	mov	r26, r18
    1dd8:	23 2f       	mov	r18, r19
    1dda:	34 2f       	mov	r19, r20
    1ddc:	44 27       	eor	r20, r20
    1dde:	58 5f       	subi	r21, 0xF8	; 248
    1de0:	f3 cf       	rjmp	.-26     	; 0x1dc8 <__addsf3x+0x38>
    1de2:	46 95       	lsr	r20
    1de4:	37 95       	ror	r19
    1de6:	27 95       	ror	r18
    1de8:	a7 95       	ror	r26
    1dea:	f0 40       	sbci	r31, 0x00	; 0
    1dec:	53 95       	inc	r21
    1dee:	c9 f7       	brne	.-14     	; 0x1de2 <__addsf3x+0x52>
    1df0:	7e f4       	brtc	.+30     	; 0x1e10 <__addsf3x+0x80>
    1df2:	1f 16       	cp	r1, r31
    1df4:	ba 0b       	sbc	r27, r26
    1df6:	62 0b       	sbc	r22, r18
    1df8:	73 0b       	sbc	r23, r19
    1dfa:	84 0b       	sbc	r24, r20
    1dfc:	ba f0       	brmi	.+46     	; 0x1e2c <__addsf3x+0x9c>
    1dfe:	91 50       	subi	r25, 0x01	; 1
    1e00:	a1 f0       	breq	.+40     	; 0x1e2a <__addsf3x+0x9a>
    1e02:	ff 0f       	add	r31, r31
    1e04:	bb 1f       	adc	r27, r27
    1e06:	66 1f       	adc	r22, r22
    1e08:	77 1f       	adc	r23, r23
    1e0a:	88 1f       	adc	r24, r24
    1e0c:	c2 f7       	brpl	.-16     	; 0x1dfe <__addsf3x+0x6e>
    1e0e:	0e c0       	rjmp	.+28     	; 0x1e2c <__addsf3x+0x9c>
    1e10:	ba 0f       	add	r27, r26
    1e12:	62 1f       	adc	r22, r18
    1e14:	73 1f       	adc	r23, r19
    1e16:	84 1f       	adc	r24, r20
    1e18:	48 f4       	brcc	.+18     	; 0x1e2c <__addsf3x+0x9c>
    1e1a:	87 95       	ror	r24
    1e1c:	77 95       	ror	r23
    1e1e:	67 95       	ror	r22
    1e20:	b7 95       	ror	r27
    1e22:	f7 95       	ror	r31
    1e24:	9e 3f       	cpi	r25, 0xFE	; 254
    1e26:	08 f0       	brcs	.+2      	; 0x1e2a <__addsf3x+0x9a>
    1e28:	b0 cf       	rjmp	.-160    	; 0x1d8a <__addsf3+0x28>
    1e2a:	93 95       	inc	r25
    1e2c:	88 0f       	add	r24, r24
    1e2e:	08 f0       	brcs	.+2      	; 0x1e32 <__addsf3x+0xa2>
    1e30:	99 27       	eor	r25, r25
    1e32:	ee 0f       	add	r30, r30
    1e34:	97 95       	ror	r25
    1e36:	87 95       	ror	r24
    1e38:	08 95       	ret
    1e3a:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__fp_pscA>
    1e3e:	60 f0       	brcs	.+24     	; 0x1e58 <__addsf3x+0xc8>
    1e40:	80 e8       	ldi	r24, 0x80	; 128
    1e42:	91 e0       	ldi	r25, 0x01	; 1
    1e44:	09 f4       	brne	.+2      	; 0x1e48 <__addsf3x+0xb8>
    1e46:	9e ef       	ldi	r25, 0xFE	; 254
    1e48:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <__fp_pscB>
    1e4c:	28 f0       	brcs	.+10     	; 0x1e58 <__addsf3x+0xc8>
    1e4e:	40 e8       	ldi	r20, 0x80	; 128
    1e50:	51 e0       	ldi	r21, 0x01	; 1
    1e52:	71 f4       	brne	.+28     	; 0x1e70 <atan2+0x10>
    1e54:	5e ef       	ldi	r21, 0xFE	; 254
    1e56:	0c c0       	rjmp	.+24     	; 0x1e70 <atan2+0x10>
    1e58:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>
    1e5c:	0c 94 52 11 	jmp	0x22a4	; 0x22a4 <__fp_zero>

00001e60 <atan2>:
    1e60:	e9 2f       	mov	r30, r25
    1e62:	e0 78       	andi	r30, 0x80	; 128
    1e64:	0e 94 30 11 	call	0x2260	; 0x2260 <__fp_split3>
    1e68:	40 f3       	brcs	.-48     	; 0x1e3a <__addsf3x+0xaa>
    1e6a:	09 2e       	mov	r0, r25
    1e6c:	05 2a       	or	r0, r21
    1e6e:	b1 f3       	breq	.-20     	; 0x1e5c <__addsf3x+0xcc>
    1e70:	26 17       	cp	r18, r22
    1e72:	37 07       	cpc	r19, r23
    1e74:	48 07       	cpc	r20, r24
    1e76:	59 07       	cpc	r21, r25
    1e78:	38 f0       	brcs	.+14     	; 0x1e88 <atan2+0x28>
    1e7a:	0e 2e       	mov	r0, r30
    1e7c:	07 f8       	bld	r0, 7
    1e7e:	e0 25       	eor	r30, r0
    1e80:	69 f0       	breq	.+26     	; 0x1e9c <atan2+0x3c>
    1e82:	e0 25       	eor	r30, r0
    1e84:	e0 64       	ori	r30, 0x40	; 64
    1e86:	0a c0       	rjmp	.+20     	; 0x1e9c <atan2+0x3c>
    1e88:	ef 63       	ori	r30, 0x3F	; 63
    1e8a:	07 f8       	bld	r0, 7
    1e8c:	00 94       	com	r0
    1e8e:	07 fa       	bst	r0, 7
    1e90:	db 01       	movw	r26, r22
    1e92:	b9 01       	movw	r22, r18
    1e94:	9d 01       	movw	r18, r26
    1e96:	dc 01       	movw	r26, r24
    1e98:	ca 01       	movw	r24, r20
    1e9a:	ad 01       	movw	r20, r26
    1e9c:	ef 93       	push	r30
    1e9e:	0e 94 b0 0f 	call	0x1f60	; 0x1f60 <__divsf3_pse>
    1ea2:	0e 94 0b 11 	call	0x2216	; 0x2216 <__fp_round>
    1ea6:	0e 94 60 0f 	call	0x1ec0	; 0x1ec0 <atan>
    1eaa:	5f 91       	pop	r21
    1eac:	55 23       	and	r21, r21
    1eae:	39 f0       	breq	.+14     	; 0x1ebe <atan2+0x5e>
    1eb0:	2b ed       	ldi	r18, 0xDB	; 219
    1eb2:	3f e0       	ldi	r19, 0x0F	; 15
    1eb4:	49 e4       	ldi	r20, 0x49	; 73
    1eb6:	50 fd       	sbrc	r21, 0
    1eb8:	49 ec       	ldi	r20, 0xC9	; 201
    1eba:	0c 94 b1 0e 	jmp	0x1d62	; 0x1d62 <__addsf3>
    1ebe:	08 95       	ret

00001ec0 <atan>:
    1ec0:	df 93       	push	r29
    1ec2:	dd 27       	eor	r29, r29
    1ec4:	b9 2f       	mov	r27, r25
    1ec6:	bf 77       	andi	r27, 0x7F	; 127
    1ec8:	40 e8       	ldi	r20, 0x80	; 128
    1eca:	5f e3       	ldi	r21, 0x3F	; 63
    1ecc:	16 16       	cp	r1, r22
    1ece:	17 06       	cpc	r1, r23
    1ed0:	48 07       	cpc	r20, r24
    1ed2:	5b 07       	cpc	r21, r27
    1ed4:	18 f4       	brcc	.+6      	; 0x1edc <atan+0x1c>
    1ed6:	d9 2f       	mov	r29, r25
    1ed8:	0e 94 59 11 	call	0x22b2	; 0x22b2 <inverse>
    1edc:	9f 93       	push	r25
    1ede:	8f 93       	push	r24
    1ee0:	7f 93       	push	r23
    1ee2:	6f 93       	push	r22
    1ee4:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <square>
    1ee8:	e6 ea       	ldi	r30, 0xA6	; 166
    1eea:	f0 e0       	ldi	r31, 0x00	; 0
    1eec:	0e 94 ab 10 	call	0x2156	; 0x2156 <__fp_powser>
    1ef0:	0e 94 0b 11 	call	0x2216	; 0x2216 <__fp_round>
    1ef4:	2f 91       	pop	r18
    1ef6:	3f 91       	pop	r19
    1ef8:	4f 91       	pop	r20
    1efa:	5f 91       	pop	r21
    1efc:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__mulsf3x>
    1f00:	dd 23       	and	r29, r29
    1f02:	51 f0       	breq	.+20     	; 0x1f18 <atan+0x58>
    1f04:	90 58       	subi	r25, 0x80	; 128
    1f06:	a2 ea       	ldi	r26, 0xA2	; 162
    1f08:	2a ed       	ldi	r18, 0xDA	; 218
    1f0a:	3f e0       	ldi	r19, 0x0F	; 15
    1f0c:	49 ec       	ldi	r20, 0xC9	; 201
    1f0e:	5f e3       	ldi	r21, 0x3F	; 63
    1f10:	d0 78       	andi	r29, 0x80	; 128
    1f12:	5d 27       	eor	r21, r29
    1f14:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__addsf3x>
    1f18:	df 91       	pop	r29
    1f1a:	0c 94 0b 11 	jmp	0x2216	; 0x2216 <__fp_round>

00001f1e <__cmpsf2>:
    1f1e:	0e 94 7e 10 	call	0x20fc	; 0x20fc <__fp_cmp>
    1f22:	08 f4       	brcc	.+2      	; 0x1f26 <__cmpsf2+0x8>
    1f24:	81 e0       	ldi	r24, 0x01	; 1
    1f26:	08 95       	ret

00001f28 <cos>:
    1f28:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__fp_rempio2>
    1f2c:	e3 95       	inc	r30
    1f2e:	0c 94 1c 11 	jmp	0x2238	; 0x2238 <__fp_sinus>

00001f32 <__divsf3>:
    1f32:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <__divsf3x>
    1f36:	0c 94 0b 11 	jmp	0x2216	; 0x2216 <__fp_round>
    1f3a:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <__fp_pscB>
    1f3e:	58 f0       	brcs	.+22     	; 0x1f56 <__divsf3+0x24>
    1f40:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__fp_pscA>
    1f44:	40 f0       	brcs	.+16     	; 0x1f56 <__divsf3+0x24>
    1f46:	29 f4       	brne	.+10     	; 0x1f52 <__divsf3+0x20>
    1f48:	5f 3f       	cpi	r21, 0xFF	; 255
    1f4a:	29 f0       	breq	.+10     	; 0x1f56 <__divsf3+0x24>
    1f4c:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__fp_inf>
    1f50:	51 11       	cpse	r21, r1
    1f52:	0c 94 53 11 	jmp	0x22a6	; 0x22a6 <__fp_szero>
    1f56:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>

00001f5a <__divsf3x>:
    1f5a:	0e 94 30 11 	call	0x2260	; 0x2260 <__fp_split3>
    1f5e:	68 f3       	brcs	.-38     	; 0x1f3a <__divsf3+0x8>

00001f60 <__divsf3_pse>:
    1f60:	99 23       	and	r25, r25
    1f62:	b1 f3       	breq	.-20     	; 0x1f50 <__divsf3+0x1e>
    1f64:	55 23       	and	r21, r21
    1f66:	91 f3       	breq	.-28     	; 0x1f4c <__divsf3+0x1a>
    1f68:	95 1b       	sub	r25, r21
    1f6a:	55 0b       	sbc	r21, r21
    1f6c:	bb 27       	eor	r27, r27
    1f6e:	aa 27       	eor	r26, r26
    1f70:	62 17       	cp	r22, r18
    1f72:	73 07       	cpc	r23, r19
    1f74:	84 07       	cpc	r24, r20
    1f76:	38 f0       	brcs	.+14     	; 0x1f86 <__divsf3_pse+0x26>
    1f78:	9f 5f       	subi	r25, 0xFF	; 255
    1f7a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f7c:	22 0f       	add	r18, r18
    1f7e:	33 1f       	adc	r19, r19
    1f80:	44 1f       	adc	r20, r20
    1f82:	aa 1f       	adc	r26, r26
    1f84:	a9 f3       	breq	.-22     	; 0x1f70 <__divsf3_pse+0x10>
    1f86:	35 d0       	rcall	.+106    	; 0x1ff2 <__divsf3_pse+0x92>
    1f88:	0e 2e       	mov	r0, r30
    1f8a:	3a f0       	brmi	.+14     	; 0x1f9a <__divsf3_pse+0x3a>
    1f8c:	e0 e8       	ldi	r30, 0x80	; 128
    1f8e:	32 d0       	rcall	.+100    	; 0x1ff4 <__divsf3_pse+0x94>
    1f90:	91 50       	subi	r25, 0x01	; 1
    1f92:	50 40       	sbci	r21, 0x00	; 0
    1f94:	e6 95       	lsr	r30
    1f96:	00 1c       	adc	r0, r0
    1f98:	ca f7       	brpl	.-14     	; 0x1f8c <__divsf3_pse+0x2c>
    1f9a:	2b d0       	rcall	.+86     	; 0x1ff2 <__divsf3_pse+0x92>
    1f9c:	fe 2f       	mov	r31, r30
    1f9e:	29 d0       	rcall	.+82     	; 0x1ff2 <__divsf3_pse+0x92>
    1fa0:	66 0f       	add	r22, r22
    1fa2:	77 1f       	adc	r23, r23
    1fa4:	88 1f       	adc	r24, r24
    1fa6:	bb 1f       	adc	r27, r27
    1fa8:	26 17       	cp	r18, r22
    1faa:	37 07       	cpc	r19, r23
    1fac:	48 07       	cpc	r20, r24
    1fae:	ab 07       	cpc	r26, r27
    1fb0:	b0 e8       	ldi	r27, 0x80	; 128
    1fb2:	09 f0       	breq	.+2      	; 0x1fb6 <__divsf3_pse+0x56>
    1fb4:	bb 0b       	sbc	r27, r27
    1fb6:	80 2d       	mov	r24, r0
    1fb8:	bf 01       	movw	r22, r30
    1fba:	ff 27       	eor	r31, r31
    1fbc:	93 58       	subi	r25, 0x83	; 131
    1fbe:	5f 4f       	sbci	r21, 0xFF	; 255
    1fc0:	3a f0       	brmi	.+14     	; 0x1fd0 <__divsf3_pse+0x70>
    1fc2:	9e 3f       	cpi	r25, 0xFE	; 254
    1fc4:	51 05       	cpc	r21, r1
    1fc6:	78 f0       	brcs	.+30     	; 0x1fe6 <__divsf3_pse+0x86>
    1fc8:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__fp_inf>
    1fcc:	0c 94 53 11 	jmp	0x22a6	; 0x22a6 <__fp_szero>
    1fd0:	5f 3f       	cpi	r21, 0xFF	; 255
    1fd2:	e4 f3       	brlt	.-8      	; 0x1fcc <__divsf3_pse+0x6c>
    1fd4:	98 3e       	cpi	r25, 0xE8	; 232
    1fd6:	d4 f3       	brlt	.-12     	; 0x1fcc <__divsf3_pse+0x6c>
    1fd8:	86 95       	lsr	r24
    1fda:	77 95       	ror	r23
    1fdc:	67 95       	ror	r22
    1fde:	b7 95       	ror	r27
    1fe0:	f7 95       	ror	r31
    1fe2:	9f 5f       	subi	r25, 0xFF	; 255
    1fe4:	c9 f7       	brne	.-14     	; 0x1fd8 <__divsf3_pse+0x78>
    1fe6:	88 0f       	add	r24, r24
    1fe8:	91 1d       	adc	r25, r1
    1fea:	96 95       	lsr	r25
    1fec:	87 95       	ror	r24
    1fee:	97 f9       	bld	r25, 7
    1ff0:	08 95       	ret
    1ff2:	e1 e0       	ldi	r30, 0x01	; 1
    1ff4:	66 0f       	add	r22, r22
    1ff6:	77 1f       	adc	r23, r23
    1ff8:	88 1f       	adc	r24, r24
    1ffa:	bb 1f       	adc	r27, r27
    1ffc:	62 17       	cp	r22, r18
    1ffe:	73 07       	cpc	r23, r19
    2000:	84 07       	cpc	r24, r20
    2002:	ba 07       	cpc	r27, r26
    2004:	20 f0       	brcs	.+8      	; 0x200e <__divsf3_pse+0xae>
    2006:	62 1b       	sub	r22, r18
    2008:	73 0b       	sbc	r23, r19
    200a:	84 0b       	sbc	r24, r20
    200c:	ba 0b       	sbc	r27, r26
    200e:	ee 1f       	adc	r30, r30
    2010:	88 f7       	brcc	.-30     	; 0x1ff4 <__divsf3_pse+0x94>
    2012:	e0 95       	com	r30
    2014:	08 95       	ret

00002016 <__fixsfsi>:
    2016:	0e 94 12 10 	call	0x2024	; 0x2024 <__fixunssfsi>
    201a:	68 94       	set
    201c:	b1 11       	cpse	r27, r1
    201e:	0c 94 53 11 	jmp	0x22a6	; 0x22a6 <__fp_szero>
    2022:	08 95       	ret

00002024 <__fixunssfsi>:
    2024:	0e 94 38 11 	call	0x2270	; 0x2270 <__fp_splitA>
    2028:	88 f0       	brcs	.+34     	; 0x204c <__fixunssfsi+0x28>
    202a:	9f 57       	subi	r25, 0x7F	; 127
    202c:	98 f0       	brcs	.+38     	; 0x2054 <__fixunssfsi+0x30>
    202e:	b9 2f       	mov	r27, r25
    2030:	99 27       	eor	r25, r25
    2032:	b7 51       	subi	r27, 0x17	; 23
    2034:	b0 f0       	brcs	.+44     	; 0x2062 <__fixunssfsi+0x3e>
    2036:	e1 f0       	breq	.+56     	; 0x2070 <__fixunssfsi+0x4c>
    2038:	66 0f       	add	r22, r22
    203a:	77 1f       	adc	r23, r23
    203c:	88 1f       	adc	r24, r24
    203e:	99 1f       	adc	r25, r25
    2040:	1a f0       	brmi	.+6      	; 0x2048 <__fixunssfsi+0x24>
    2042:	ba 95       	dec	r27
    2044:	c9 f7       	brne	.-14     	; 0x2038 <__fixunssfsi+0x14>
    2046:	14 c0       	rjmp	.+40     	; 0x2070 <__fixunssfsi+0x4c>
    2048:	b1 30       	cpi	r27, 0x01	; 1
    204a:	91 f0       	breq	.+36     	; 0x2070 <__fixunssfsi+0x4c>
    204c:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__fp_zero>
    2050:	b1 e0       	ldi	r27, 0x01	; 1
    2052:	08 95       	ret
    2054:	0c 94 52 11 	jmp	0x22a4	; 0x22a4 <__fp_zero>
    2058:	67 2f       	mov	r22, r23
    205a:	78 2f       	mov	r23, r24
    205c:	88 27       	eor	r24, r24
    205e:	b8 5f       	subi	r27, 0xF8	; 248
    2060:	39 f0       	breq	.+14     	; 0x2070 <__fixunssfsi+0x4c>
    2062:	b9 3f       	cpi	r27, 0xF9	; 249
    2064:	cc f3       	brlt	.-14     	; 0x2058 <__fixunssfsi+0x34>
    2066:	86 95       	lsr	r24
    2068:	77 95       	ror	r23
    206a:	67 95       	ror	r22
    206c:	b3 95       	inc	r27
    206e:	d9 f7       	brne	.-10     	; 0x2066 <__fixunssfsi+0x42>
    2070:	3e f4       	brtc	.+14     	; 0x2080 <__fixunssfsi+0x5c>
    2072:	90 95       	com	r25
    2074:	80 95       	com	r24
    2076:	70 95       	com	r23
    2078:	61 95       	neg	r22
    207a:	7f 4f       	sbci	r23, 0xFF	; 255
    207c:	8f 4f       	sbci	r24, 0xFF	; 255
    207e:	9f 4f       	sbci	r25, 0xFF	; 255
    2080:	08 95       	ret

00002082 <__floatunsisf>:
    2082:	e8 94       	clt
    2084:	09 c0       	rjmp	.+18     	; 0x2098 <__floatsisf+0x12>

00002086 <__floatsisf>:
    2086:	97 fb       	bst	r25, 7
    2088:	3e f4       	brtc	.+14     	; 0x2098 <__floatsisf+0x12>
    208a:	90 95       	com	r25
    208c:	80 95       	com	r24
    208e:	70 95       	com	r23
    2090:	61 95       	neg	r22
    2092:	7f 4f       	sbci	r23, 0xFF	; 255
    2094:	8f 4f       	sbci	r24, 0xFF	; 255
    2096:	9f 4f       	sbci	r25, 0xFF	; 255
    2098:	99 23       	and	r25, r25
    209a:	a9 f0       	breq	.+42     	; 0x20c6 <__floatsisf+0x40>
    209c:	f9 2f       	mov	r31, r25
    209e:	96 e9       	ldi	r25, 0x96	; 150
    20a0:	bb 27       	eor	r27, r27
    20a2:	93 95       	inc	r25
    20a4:	f6 95       	lsr	r31
    20a6:	87 95       	ror	r24
    20a8:	77 95       	ror	r23
    20aa:	67 95       	ror	r22
    20ac:	b7 95       	ror	r27
    20ae:	f1 11       	cpse	r31, r1
    20b0:	f8 cf       	rjmp	.-16     	; 0x20a2 <__floatsisf+0x1c>
    20b2:	fa f4       	brpl	.+62     	; 0x20f2 <__floatsisf+0x6c>
    20b4:	bb 0f       	add	r27, r27
    20b6:	11 f4       	brne	.+4      	; 0x20bc <__floatsisf+0x36>
    20b8:	60 ff       	sbrs	r22, 0
    20ba:	1b c0       	rjmp	.+54     	; 0x20f2 <__floatsisf+0x6c>
    20bc:	6f 5f       	subi	r22, 0xFF	; 255
    20be:	7f 4f       	sbci	r23, 0xFF	; 255
    20c0:	8f 4f       	sbci	r24, 0xFF	; 255
    20c2:	9f 4f       	sbci	r25, 0xFF	; 255
    20c4:	16 c0       	rjmp	.+44     	; 0x20f2 <__floatsisf+0x6c>
    20c6:	88 23       	and	r24, r24
    20c8:	11 f0       	breq	.+4      	; 0x20ce <__floatsisf+0x48>
    20ca:	96 e9       	ldi	r25, 0x96	; 150
    20cc:	11 c0       	rjmp	.+34     	; 0x20f0 <__floatsisf+0x6a>
    20ce:	77 23       	and	r23, r23
    20d0:	21 f0       	breq	.+8      	; 0x20da <__floatsisf+0x54>
    20d2:	9e e8       	ldi	r25, 0x8E	; 142
    20d4:	87 2f       	mov	r24, r23
    20d6:	76 2f       	mov	r23, r22
    20d8:	05 c0       	rjmp	.+10     	; 0x20e4 <__floatsisf+0x5e>
    20da:	66 23       	and	r22, r22
    20dc:	71 f0       	breq	.+28     	; 0x20fa <__floatsisf+0x74>
    20de:	96 e8       	ldi	r25, 0x86	; 134
    20e0:	86 2f       	mov	r24, r22
    20e2:	70 e0       	ldi	r23, 0x00	; 0
    20e4:	60 e0       	ldi	r22, 0x00	; 0
    20e6:	2a f0       	brmi	.+10     	; 0x20f2 <__floatsisf+0x6c>
    20e8:	9a 95       	dec	r25
    20ea:	66 0f       	add	r22, r22
    20ec:	77 1f       	adc	r23, r23
    20ee:	88 1f       	adc	r24, r24
    20f0:	da f7       	brpl	.-10     	; 0x20e8 <__floatsisf+0x62>
    20f2:	88 0f       	add	r24, r24
    20f4:	96 95       	lsr	r25
    20f6:	87 95       	ror	r24
    20f8:	97 f9       	bld	r25, 7
    20fa:	08 95       	ret

000020fc <__fp_cmp>:
    20fc:	99 0f       	add	r25, r25
    20fe:	00 08       	sbc	r0, r0
    2100:	55 0f       	add	r21, r21
    2102:	aa 0b       	sbc	r26, r26
    2104:	e0 e8       	ldi	r30, 0x80	; 128
    2106:	fe ef       	ldi	r31, 0xFE	; 254
    2108:	16 16       	cp	r1, r22
    210a:	17 06       	cpc	r1, r23
    210c:	e8 07       	cpc	r30, r24
    210e:	f9 07       	cpc	r31, r25
    2110:	c0 f0       	brcs	.+48     	; 0x2142 <__fp_cmp+0x46>
    2112:	12 16       	cp	r1, r18
    2114:	13 06       	cpc	r1, r19
    2116:	e4 07       	cpc	r30, r20
    2118:	f5 07       	cpc	r31, r21
    211a:	98 f0       	brcs	.+38     	; 0x2142 <__fp_cmp+0x46>
    211c:	62 1b       	sub	r22, r18
    211e:	73 0b       	sbc	r23, r19
    2120:	84 0b       	sbc	r24, r20
    2122:	95 0b       	sbc	r25, r21
    2124:	39 f4       	brne	.+14     	; 0x2134 <__fp_cmp+0x38>
    2126:	0a 26       	eor	r0, r26
    2128:	61 f0       	breq	.+24     	; 0x2142 <__fp_cmp+0x46>
    212a:	23 2b       	or	r18, r19
    212c:	24 2b       	or	r18, r20
    212e:	25 2b       	or	r18, r21
    2130:	21 f4       	brne	.+8      	; 0x213a <__fp_cmp+0x3e>
    2132:	08 95       	ret
    2134:	0a 26       	eor	r0, r26
    2136:	09 f4       	brne	.+2      	; 0x213a <__fp_cmp+0x3e>
    2138:	a1 40       	sbci	r26, 0x01	; 1
    213a:	a6 95       	lsr	r26
    213c:	8f ef       	ldi	r24, 0xFF	; 255
    213e:	81 1d       	adc	r24, r1
    2140:	81 1d       	adc	r24, r1
    2142:	08 95       	ret

00002144 <__fp_inf>:
    2144:	97 f9       	bld	r25, 7
    2146:	9f 67       	ori	r25, 0x7F	; 127
    2148:	80 e8       	ldi	r24, 0x80	; 128
    214a:	70 e0       	ldi	r23, 0x00	; 0
    214c:	60 e0       	ldi	r22, 0x00	; 0
    214e:	08 95       	ret

00002150 <__fp_nan>:
    2150:	9f ef       	ldi	r25, 0xFF	; 255
    2152:	80 ec       	ldi	r24, 0xC0	; 192
    2154:	08 95       	ret

00002156 <__fp_powser>:
    2156:	df 93       	push	r29
    2158:	cf 93       	push	r28
    215a:	1f 93       	push	r17
    215c:	0f 93       	push	r16
    215e:	ff 92       	push	r15
    2160:	ef 92       	push	r14
    2162:	df 92       	push	r13
    2164:	7b 01       	movw	r14, r22
    2166:	8c 01       	movw	r16, r24
    2168:	68 94       	set
    216a:	06 c0       	rjmp	.+12     	; 0x2178 <__fp_powser+0x22>
    216c:	da 2e       	mov	r13, r26
    216e:	ef 01       	movw	r28, r30
    2170:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__mulsf3x>
    2174:	fe 01       	movw	r30, r28
    2176:	e8 94       	clt
    2178:	a5 91       	lpm	r26, Z+
    217a:	25 91       	lpm	r18, Z+
    217c:	35 91       	lpm	r19, Z+
    217e:	45 91       	lpm	r20, Z+
    2180:	55 91       	lpm	r21, Z+
    2182:	a6 f3       	brts	.-24     	; 0x216c <__fp_powser+0x16>
    2184:	ef 01       	movw	r28, r30
    2186:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__addsf3x>
    218a:	fe 01       	movw	r30, r28
    218c:	97 01       	movw	r18, r14
    218e:	a8 01       	movw	r20, r16
    2190:	da 94       	dec	r13
    2192:	69 f7       	brne	.-38     	; 0x216e <__fp_powser+0x18>
    2194:	df 90       	pop	r13
    2196:	ef 90       	pop	r14
    2198:	ff 90       	pop	r15
    219a:	0f 91       	pop	r16
    219c:	1f 91       	pop	r17
    219e:	cf 91       	pop	r28
    21a0:	df 91       	pop	r29
    21a2:	08 95       	ret

000021a4 <__fp_pscA>:
    21a4:	00 24       	eor	r0, r0
    21a6:	0a 94       	dec	r0
    21a8:	16 16       	cp	r1, r22
    21aa:	17 06       	cpc	r1, r23
    21ac:	18 06       	cpc	r1, r24
    21ae:	09 06       	cpc	r0, r25
    21b0:	08 95       	ret

000021b2 <__fp_pscB>:
    21b2:	00 24       	eor	r0, r0
    21b4:	0a 94       	dec	r0
    21b6:	12 16       	cp	r1, r18
    21b8:	13 06       	cpc	r1, r19
    21ba:	14 06       	cpc	r1, r20
    21bc:	05 06       	cpc	r0, r21
    21be:	08 95       	ret
    21c0:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>

000021c4 <__fp_rempio2>:
    21c4:	0e 94 38 11 	call	0x2270	; 0x2270 <__fp_splitA>
    21c8:	d8 f3       	brcs	.-10     	; 0x21c0 <__fp_pscB+0xe>
    21ca:	e8 94       	clt
    21cc:	e0 e0       	ldi	r30, 0x00	; 0
    21ce:	bb 27       	eor	r27, r27
    21d0:	9f 57       	subi	r25, 0x7F	; 127
    21d2:	f0 f0       	brcs	.+60     	; 0x2210 <__fp_rempio2+0x4c>
    21d4:	2a ed       	ldi	r18, 0xDA	; 218
    21d6:	3f e0       	ldi	r19, 0x0F	; 15
    21d8:	49 ec       	ldi	r20, 0xC9	; 201
    21da:	06 c0       	rjmp	.+12     	; 0x21e8 <__fp_rempio2+0x24>
    21dc:	ee 0f       	add	r30, r30
    21de:	bb 0f       	add	r27, r27
    21e0:	66 1f       	adc	r22, r22
    21e2:	77 1f       	adc	r23, r23
    21e4:	88 1f       	adc	r24, r24
    21e6:	28 f0       	brcs	.+10     	; 0x21f2 <__fp_rempio2+0x2e>
    21e8:	b2 3a       	cpi	r27, 0xA2	; 162
    21ea:	62 07       	cpc	r22, r18
    21ec:	73 07       	cpc	r23, r19
    21ee:	84 07       	cpc	r24, r20
    21f0:	28 f0       	brcs	.+10     	; 0x21fc <__fp_rempio2+0x38>
    21f2:	b2 5a       	subi	r27, 0xA2	; 162
    21f4:	62 0b       	sbc	r22, r18
    21f6:	73 0b       	sbc	r23, r19
    21f8:	84 0b       	sbc	r24, r20
    21fa:	e3 95       	inc	r30
    21fc:	9a 95       	dec	r25
    21fe:	72 f7       	brpl	.-36     	; 0x21dc <__fp_rempio2+0x18>
    2200:	80 38       	cpi	r24, 0x80	; 128
    2202:	30 f4       	brcc	.+12     	; 0x2210 <__fp_rempio2+0x4c>
    2204:	9a 95       	dec	r25
    2206:	bb 0f       	add	r27, r27
    2208:	66 1f       	adc	r22, r22
    220a:	77 1f       	adc	r23, r23
    220c:	88 1f       	adc	r24, r24
    220e:	d2 f7       	brpl	.-12     	; 0x2204 <__fp_rempio2+0x40>
    2210:	90 48       	sbci	r25, 0x80	; 128
    2212:	0c 94 ac 12 	jmp	0x2558	; 0x2558 <__fp_mpack_finite>

00002216 <__fp_round>:
    2216:	09 2e       	mov	r0, r25
    2218:	03 94       	inc	r0
    221a:	00 0c       	add	r0, r0
    221c:	11 f4       	brne	.+4      	; 0x2222 <__fp_round+0xc>
    221e:	88 23       	and	r24, r24
    2220:	52 f0       	brmi	.+20     	; 0x2236 <__fp_round+0x20>
    2222:	bb 0f       	add	r27, r27
    2224:	40 f4       	brcc	.+16     	; 0x2236 <__fp_round+0x20>
    2226:	bf 2b       	or	r27, r31
    2228:	11 f4       	brne	.+4      	; 0x222e <__fp_round+0x18>
    222a:	60 ff       	sbrs	r22, 0
    222c:	04 c0       	rjmp	.+8      	; 0x2236 <__fp_round+0x20>
    222e:	6f 5f       	subi	r22, 0xFF	; 255
    2230:	7f 4f       	sbci	r23, 0xFF	; 255
    2232:	8f 4f       	sbci	r24, 0xFF	; 255
    2234:	9f 4f       	sbci	r25, 0xFF	; 255
    2236:	08 95       	ret

00002238 <__fp_sinus>:
    2238:	ef 93       	push	r30
    223a:	e0 ff       	sbrs	r30, 0
    223c:	07 c0       	rjmp	.+14     	; 0x224c <__fp_sinus+0x14>
    223e:	a2 ea       	ldi	r26, 0xA2	; 162
    2240:	2a ed       	ldi	r18, 0xDA	; 218
    2242:	3f e0       	ldi	r19, 0x0F	; 15
    2244:	49 ec       	ldi	r20, 0xC9	; 201
    2246:	5f eb       	ldi	r21, 0xBF	; 191
    2248:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__addsf3x>
    224c:	0e 94 0b 11 	call	0x2216	; 0x2216 <__fp_round>
    2250:	0f 90       	pop	r0
    2252:	03 94       	inc	r0
    2254:	01 fc       	sbrc	r0, 1
    2256:	90 58       	subi	r25, 0x80	; 128
    2258:	e3 ed       	ldi	r30, 0xD3	; 211
    225a:	f0 e0       	ldi	r31, 0x00	; 0
    225c:	0c 94 bf 12 	jmp	0x257e	; 0x257e <__fp_powsodd>

00002260 <__fp_split3>:
    2260:	57 fd       	sbrc	r21, 7
    2262:	90 58       	subi	r25, 0x80	; 128
    2264:	44 0f       	add	r20, r20
    2266:	55 1f       	adc	r21, r21
    2268:	59 f0       	breq	.+22     	; 0x2280 <__fp_splitA+0x10>
    226a:	5f 3f       	cpi	r21, 0xFF	; 255
    226c:	71 f0       	breq	.+28     	; 0x228a <__fp_splitA+0x1a>
    226e:	47 95       	ror	r20

00002270 <__fp_splitA>:
    2270:	88 0f       	add	r24, r24
    2272:	97 fb       	bst	r25, 7
    2274:	99 1f       	adc	r25, r25
    2276:	61 f0       	breq	.+24     	; 0x2290 <__fp_splitA+0x20>
    2278:	9f 3f       	cpi	r25, 0xFF	; 255
    227a:	79 f0       	breq	.+30     	; 0x229a <__fp_splitA+0x2a>
    227c:	87 95       	ror	r24
    227e:	08 95       	ret
    2280:	12 16       	cp	r1, r18
    2282:	13 06       	cpc	r1, r19
    2284:	14 06       	cpc	r1, r20
    2286:	55 1f       	adc	r21, r21
    2288:	f2 cf       	rjmp	.-28     	; 0x226e <__fp_split3+0xe>
    228a:	46 95       	lsr	r20
    228c:	f1 df       	rcall	.-30     	; 0x2270 <__fp_splitA>
    228e:	08 c0       	rjmp	.+16     	; 0x22a0 <__fp_splitA+0x30>
    2290:	16 16       	cp	r1, r22
    2292:	17 06       	cpc	r1, r23
    2294:	18 06       	cpc	r1, r24
    2296:	99 1f       	adc	r25, r25
    2298:	f1 cf       	rjmp	.-30     	; 0x227c <__fp_splitA+0xc>
    229a:	86 95       	lsr	r24
    229c:	71 05       	cpc	r23, r1
    229e:	61 05       	cpc	r22, r1
    22a0:	08 94       	sec
    22a2:	08 95       	ret

000022a4 <__fp_zero>:
    22a4:	e8 94       	clt

000022a6 <__fp_szero>:
    22a6:	bb 27       	eor	r27, r27
    22a8:	66 27       	eor	r22, r22
    22aa:	77 27       	eor	r23, r23
    22ac:	cb 01       	movw	r24, r22
    22ae:	97 f9       	bld	r25, 7
    22b0:	08 95       	ret

000022b2 <inverse>:
    22b2:	9b 01       	movw	r18, r22
    22b4:	ac 01       	movw	r20, r24
    22b6:	60 e0       	ldi	r22, 0x00	; 0
    22b8:	70 e0       	ldi	r23, 0x00	; 0
    22ba:	80 e8       	ldi	r24, 0x80	; 128
    22bc:	9f e3       	ldi	r25, 0x3F	; 63
    22be:	0c 94 99 0f 	jmp	0x1f32	; 0x1f32 <__divsf3>

000022c2 <__mulsf3>:
    22c2:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__mulsf3x>
    22c6:	0c 94 0b 11 	jmp	0x2216	; 0x2216 <__fp_round>
    22ca:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__fp_pscA>
    22ce:	38 f0       	brcs	.+14     	; 0x22de <__mulsf3+0x1c>
    22d0:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <__fp_pscB>
    22d4:	20 f0       	brcs	.+8      	; 0x22de <__mulsf3+0x1c>
    22d6:	95 23       	and	r25, r21
    22d8:	11 f0       	breq	.+4      	; 0x22de <__mulsf3+0x1c>
    22da:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__fp_inf>
    22de:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>
    22e2:	11 24       	eor	r1, r1
    22e4:	0c 94 53 11 	jmp	0x22a6	; 0x22a6 <__fp_szero>

000022e8 <__mulsf3x>:
    22e8:	0e 94 30 11 	call	0x2260	; 0x2260 <__fp_split3>
    22ec:	70 f3       	brcs	.-36     	; 0x22ca <__mulsf3+0x8>

000022ee <__mulsf3_pse>:
    22ee:	95 9f       	mul	r25, r21
    22f0:	c1 f3       	breq	.-16     	; 0x22e2 <__mulsf3+0x20>
    22f2:	95 0f       	add	r25, r21
    22f4:	50 e0       	ldi	r21, 0x00	; 0
    22f6:	55 1f       	adc	r21, r21
    22f8:	62 9f       	mul	r22, r18
    22fa:	f0 01       	movw	r30, r0
    22fc:	72 9f       	mul	r23, r18
    22fe:	bb 27       	eor	r27, r27
    2300:	f0 0d       	add	r31, r0
    2302:	b1 1d       	adc	r27, r1
    2304:	63 9f       	mul	r22, r19
    2306:	aa 27       	eor	r26, r26
    2308:	f0 0d       	add	r31, r0
    230a:	b1 1d       	adc	r27, r1
    230c:	aa 1f       	adc	r26, r26
    230e:	64 9f       	mul	r22, r20
    2310:	66 27       	eor	r22, r22
    2312:	b0 0d       	add	r27, r0
    2314:	a1 1d       	adc	r26, r1
    2316:	66 1f       	adc	r22, r22
    2318:	82 9f       	mul	r24, r18
    231a:	22 27       	eor	r18, r18
    231c:	b0 0d       	add	r27, r0
    231e:	a1 1d       	adc	r26, r1
    2320:	62 1f       	adc	r22, r18
    2322:	73 9f       	mul	r23, r19
    2324:	b0 0d       	add	r27, r0
    2326:	a1 1d       	adc	r26, r1
    2328:	62 1f       	adc	r22, r18
    232a:	83 9f       	mul	r24, r19
    232c:	a0 0d       	add	r26, r0
    232e:	61 1d       	adc	r22, r1
    2330:	22 1f       	adc	r18, r18
    2332:	74 9f       	mul	r23, r20
    2334:	33 27       	eor	r19, r19
    2336:	a0 0d       	add	r26, r0
    2338:	61 1d       	adc	r22, r1
    233a:	23 1f       	adc	r18, r19
    233c:	84 9f       	mul	r24, r20
    233e:	60 0d       	add	r22, r0
    2340:	21 1d       	adc	r18, r1
    2342:	82 2f       	mov	r24, r18
    2344:	76 2f       	mov	r23, r22
    2346:	6a 2f       	mov	r22, r26
    2348:	11 24       	eor	r1, r1
    234a:	9f 57       	subi	r25, 0x7F	; 127
    234c:	50 40       	sbci	r21, 0x00	; 0
    234e:	9a f0       	brmi	.+38     	; 0x2376 <__mulsf3_pse+0x88>
    2350:	f1 f0       	breq	.+60     	; 0x238e <__mulsf3_pse+0xa0>
    2352:	88 23       	and	r24, r24
    2354:	4a f0       	brmi	.+18     	; 0x2368 <__mulsf3_pse+0x7a>
    2356:	ee 0f       	add	r30, r30
    2358:	ff 1f       	adc	r31, r31
    235a:	bb 1f       	adc	r27, r27
    235c:	66 1f       	adc	r22, r22
    235e:	77 1f       	adc	r23, r23
    2360:	88 1f       	adc	r24, r24
    2362:	91 50       	subi	r25, 0x01	; 1
    2364:	50 40       	sbci	r21, 0x00	; 0
    2366:	a9 f7       	brne	.-22     	; 0x2352 <__mulsf3_pse+0x64>
    2368:	9e 3f       	cpi	r25, 0xFE	; 254
    236a:	51 05       	cpc	r21, r1
    236c:	80 f0       	brcs	.+32     	; 0x238e <__mulsf3_pse+0xa0>
    236e:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__fp_inf>
    2372:	0c 94 53 11 	jmp	0x22a6	; 0x22a6 <__fp_szero>
    2376:	5f 3f       	cpi	r21, 0xFF	; 255
    2378:	e4 f3       	brlt	.-8      	; 0x2372 <__mulsf3_pse+0x84>
    237a:	98 3e       	cpi	r25, 0xE8	; 232
    237c:	d4 f3       	brlt	.-12     	; 0x2372 <__mulsf3_pse+0x84>
    237e:	86 95       	lsr	r24
    2380:	77 95       	ror	r23
    2382:	67 95       	ror	r22
    2384:	b7 95       	ror	r27
    2386:	f7 95       	ror	r31
    2388:	e7 95       	ror	r30
    238a:	9f 5f       	subi	r25, 0xFF	; 255
    238c:	c1 f7       	brne	.-16     	; 0x237e <__mulsf3_pse+0x90>
    238e:	fe 2b       	or	r31, r30
    2390:	88 0f       	add	r24, r24
    2392:	91 1d       	adc	r25, r1
    2394:	96 95       	lsr	r25
    2396:	87 95       	ror	r24
    2398:	97 f9       	bld	r25, 7
    239a:	08 95       	ret

0000239c <pow>:
    239c:	fa 01       	movw	r30, r20
    239e:	ee 0f       	add	r30, r30
    23a0:	ff 1f       	adc	r31, r31
    23a2:	30 96       	adiw	r30, 0x00	; 0
    23a4:	21 05       	cpc	r18, r1
    23a6:	31 05       	cpc	r19, r1
    23a8:	a1 f1       	breq	.+104    	; 0x2412 <pow+0x76>
    23aa:	61 15       	cp	r22, r1
    23ac:	71 05       	cpc	r23, r1
    23ae:	61 f4       	brne	.+24     	; 0x23c8 <pow+0x2c>
    23b0:	80 38       	cpi	r24, 0x80	; 128
    23b2:	bf e3       	ldi	r27, 0x3F	; 63
    23b4:	9b 07       	cpc	r25, r27
    23b6:	49 f1       	breq	.+82     	; 0x240a <pow+0x6e>
    23b8:	68 94       	set
    23ba:	90 38       	cpi	r25, 0x80	; 128
    23bc:	81 05       	cpc	r24, r1
    23be:	61 f0       	breq	.+24     	; 0x23d8 <pow+0x3c>
    23c0:	80 38       	cpi	r24, 0x80	; 128
    23c2:	bf ef       	ldi	r27, 0xFF	; 255
    23c4:	9b 07       	cpc	r25, r27
    23c6:	41 f0       	breq	.+16     	; 0x23d8 <pow+0x3c>
    23c8:	99 23       	and	r25, r25
    23ca:	4a f5       	brpl	.+82     	; 0x241e <pow+0x82>
    23cc:	ff 3f       	cpi	r31, 0xFF	; 255
    23ce:	e1 05       	cpc	r30, r1
    23d0:	31 05       	cpc	r19, r1
    23d2:	21 05       	cpc	r18, r1
    23d4:	19 f1       	breq	.+70     	; 0x241c <pow+0x80>
    23d6:	e8 94       	clt
    23d8:	08 94       	sec
    23da:	e7 95       	ror	r30
    23dc:	d9 01       	movw	r26, r18
    23de:	aa 23       	and	r26, r26
    23e0:	29 f4       	brne	.+10     	; 0x23ec <pow+0x50>
    23e2:	ab 2f       	mov	r26, r27
    23e4:	be 2f       	mov	r27, r30
    23e6:	f8 5f       	subi	r31, 0xF8	; 248
    23e8:	d0 f3       	brcs	.-12     	; 0x23de <pow+0x42>
    23ea:	10 c0       	rjmp	.+32     	; 0x240c <pow+0x70>
    23ec:	ff 5f       	subi	r31, 0xFF	; 255
    23ee:	70 f4       	brcc	.+28     	; 0x240c <pow+0x70>
    23f0:	a6 95       	lsr	r26
    23f2:	e0 f7       	brcc	.-8      	; 0x23ec <pow+0x50>
    23f4:	f7 39       	cpi	r31, 0x97	; 151
    23f6:	50 f0       	brcs	.+20     	; 0x240c <pow+0x70>
    23f8:	19 f0       	breq	.+6      	; 0x2400 <pow+0x64>
    23fa:	ff 3a       	cpi	r31, 0xAF	; 175
    23fc:	38 f4       	brcc	.+14     	; 0x240c <pow+0x70>
    23fe:	9f 77       	andi	r25, 0x7F	; 127
    2400:	9f 93       	push	r25
    2402:	0d d0       	rcall	.+26     	; 0x241e <pow+0x82>
    2404:	0f 90       	pop	r0
    2406:	07 fc       	sbrc	r0, 7
    2408:	90 58       	subi	r25, 0x80	; 128
    240a:	08 95       	ret
    240c:	46 f0       	brts	.+16     	; 0x241e <pow+0x82>
    240e:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>
    2412:	60 e0       	ldi	r22, 0x00	; 0
    2414:	70 e0       	ldi	r23, 0x00	; 0
    2416:	80 e8       	ldi	r24, 0x80	; 128
    2418:	9f e3       	ldi	r25, 0x3F	; 63
    241a:	08 95       	ret
    241c:	4f e7       	ldi	r20, 0x7F	; 127
    241e:	9f 77       	andi	r25, 0x7F	; 127
    2420:	5f 93       	push	r21
    2422:	4f 93       	push	r20
    2424:	3f 93       	push	r19
    2426:	2f 93       	push	r18
    2428:	0e 94 15 13 	call	0x262a	; 0x262a <log>
    242c:	2f 91       	pop	r18
    242e:	3f 91       	pop	r19
    2430:	4f 91       	pop	r20
    2432:	5f 91       	pop	r21
    2434:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
    2438:	0c 94 78 12 	jmp	0x24f0	; 0x24f0 <exp>

0000243c <sin>:
    243c:	9f 93       	push	r25
    243e:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__fp_rempio2>
    2442:	0f 90       	pop	r0
    2444:	07 fc       	sbrc	r0, 7
    2446:	ee 5f       	subi	r30, 0xFE	; 254
    2448:	0c 94 1c 11 	jmp	0x2238	; 0x2238 <__fp_sinus>
    244c:	19 f4       	brne	.+6      	; 0x2454 <sin+0x18>
    244e:	16 f4       	brtc	.+4      	; 0x2454 <sin+0x18>
    2450:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>
    2454:	0c 94 aa 12 	jmp	0x2554	; 0x2554 <__fp_mpack>

00002458 <sqrt>:
    2458:	0e 94 38 11 	call	0x2270	; 0x2270 <__fp_splitA>
    245c:	b8 f3       	brcs	.-18     	; 0x244c <sin+0x10>
    245e:	99 23       	and	r25, r25
    2460:	c9 f3       	breq	.-14     	; 0x2454 <sin+0x18>
    2462:	b6 f3       	brts	.-20     	; 0x2450 <sin+0x14>
    2464:	9f 57       	subi	r25, 0x7F	; 127
    2466:	55 0b       	sbc	r21, r21
    2468:	87 ff       	sbrs	r24, 7
    246a:	0e 94 b8 12 	call	0x2570	; 0x2570 <__fp_norm2>
    246e:	00 24       	eor	r0, r0
    2470:	a0 e6       	ldi	r26, 0x60	; 96
    2472:	40 ea       	ldi	r20, 0xA0	; 160
    2474:	90 01       	movw	r18, r0
    2476:	80 58       	subi	r24, 0x80	; 128
    2478:	56 95       	lsr	r21
    247a:	97 95       	ror	r25
    247c:	28 f4       	brcc	.+10     	; 0x2488 <sqrt+0x30>
    247e:	80 5c       	subi	r24, 0xC0	; 192
    2480:	66 0f       	add	r22, r22
    2482:	77 1f       	adc	r23, r23
    2484:	88 1f       	adc	r24, r24
    2486:	20 f0       	brcs	.+8      	; 0x2490 <sqrt+0x38>
    2488:	26 17       	cp	r18, r22
    248a:	37 07       	cpc	r19, r23
    248c:	48 07       	cpc	r20, r24
    248e:	30 f4       	brcc	.+12     	; 0x249c <sqrt+0x44>
    2490:	62 1b       	sub	r22, r18
    2492:	73 0b       	sbc	r23, r19
    2494:	84 0b       	sbc	r24, r20
    2496:	20 29       	or	r18, r0
    2498:	31 29       	or	r19, r1
    249a:	4a 2b       	or	r20, r26
    249c:	a6 95       	lsr	r26
    249e:	17 94       	ror	r1
    24a0:	07 94       	ror	r0
    24a2:	20 25       	eor	r18, r0
    24a4:	31 25       	eor	r19, r1
    24a6:	4a 27       	eor	r20, r26
    24a8:	58 f7       	brcc	.-42     	; 0x2480 <sqrt+0x28>
    24aa:	66 0f       	add	r22, r22
    24ac:	77 1f       	adc	r23, r23
    24ae:	88 1f       	adc	r24, r24
    24b0:	20 f0       	brcs	.+8      	; 0x24ba <sqrt+0x62>
    24b2:	26 17       	cp	r18, r22
    24b4:	37 07       	cpc	r19, r23
    24b6:	48 07       	cpc	r20, r24
    24b8:	30 f4       	brcc	.+12     	; 0x24c6 <sqrt+0x6e>
    24ba:	62 0b       	sbc	r22, r18
    24bc:	73 0b       	sbc	r23, r19
    24be:	84 0b       	sbc	r24, r20
    24c0:	20 0d       	add	r18, r0
    24c2:	31 1d       	adc	r19, r1
    24c4:	41 1d       	adc	r20, r1
    24c6:	a0 95       	com	r26
    24c8:	81 f7       	brne	.-32     	; 0x24aa <sqrt+0x52>
    24ca:	b9 01       	movw	r22, r18
    24cc:	84 2f       	mov	r24, r20
    24ce:	91 58       	subi	r25, 0x81	; 129
    24d0:	88 0f       	add	r24, r24
    24d2:	96 95       	lsr	r25
    24d4:	87 95       	ror	r24
    24d6:	08 95       	ret

000024d8 <square>:
    24d8:	9b 01       	movw	r18, r22
    24da:	ac 01       	movw	r20, r24
    24dc:	0c 94 61 11 	jmp	0x22c2	; 0x22c2 <__mulsf3>
    24e0:	29 f4       	brne	.+10     	; 0x24ec <square+0x14>
    24e2:	16 f0       	brts	.+4      	; 0x24e8 <square+0x10>
    24e4:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__fp_inf>
    24e8:	0c 94 52 11 	jmp	0x22a4	; 0x22a4 <__fp_zero>
    24ec:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>

000024f0 <exp>:
    24f0:	0e 94 38 11 	call	0x2270	; 0x2270 <__fp_splitA>
    24f4:	a8 f3       	brcs	.-22     	; 0x24e0 <square+0x8>
    24f6:	96 38       	cpi	r25, 0x86	; 134
    24f8:	a0 f7       	brcc	.-24     	; 0x24e2 <square+0xa>
    24fa:	07 f8       	bld	r0, 7
    24fc:	0f 92       	push	r0
    24fe:	e8 94       	clt
    2500:	2b e3       	ldi	r18, 0x3B	; 59
    2502:	3a ea       	ldi	r19, 0xAA	; 170
    2504:	48 eb       	ldi	r20, 0xB8	; 184
    2506:	5f e7       	ldi	r21, 0x7F	; 127
    2508:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3_pse>
    250c:	0f 92       	push	r0
    250e:	0f 92       	push	r0
    2510:	0f 92       	push	r0
    2512:	4d b7       	in	r20, 0x3d	; 61
    2514:	5e b7       	in	r21, 0x3e	; 62
    2516:	0f 92       	push	r0
    2518:	0e 94 5d 13 	call	0x26ba	; 0x26ba <modf>
    251c:	e1 ef       	ldi	r30, 0xF1	; 241
    251e:	f0 e0       	ldi	r31, 0x00	; 0
    2520:	0e 94 ab 10 	call	0x2156	; 0x2156 <__fp_powser>
    2524:	4f 91       	pop	r20
    2526:	5f 91       	pop	r21
    2528:	ef 91       	pop	r30
    252a:	ff 91       	pop	r31
    252c:	e5 95       	asr	r30
    252e:	ee 1f       	adc	r30, r30
    2530:	ff 1f       	adc	r31, r31
    2532:	49 f0       	breq	.+18     	; 0x2546 <exp+0x56>
    2534:	fe 57       	subi	r31, 0x7E	; 126
    2536:	e0 68       	ori	r30, 0x80	; 128
    2538:	44 27       	eor	r20, r20
    253a:	ee 0f       	add	r30, r30
    253c:	44 1f       	adc	r20, r20
    253e:	fa 95       	dec	r31
    2540:	e1 f7       	brne	.-8      	; 0x253a <exp+0x4a>
    2542:	41 95       	neg	r20
    2544:	55 0b       	sbc	r21, r21
    2546:	0e 94 d7 12 	call	0x25ae	; 0x25ae <ldexp>
    254a:	0f 90       	pop	r0
    254c:	07 fe       	sbrs	r0, 7
    254e:	0c 94 59 11 	jmp	0x22b2	; 0x22b2 <inverse>
    2552:	08 95       	ret

00002554 <__fp_mpack>:
    2554:	9f 3f       	cpi	r25, 0xFF	; 255
    2556:	31 f0       	breq	.+12     	; 0x2564 <__fp_mpack_finite+0xc>

00002558 <__fp_mpack_finite>:
    2558:	91 50       	subi	r25, 0x01	; 1
    255a:	20 f4       	brcc	.+8      	; 0x2564 <__fp_mpack_finite+0xc>
    255c:	87 95       	ror	r24
    255e:	77 95       	ror	r23
    2560:	67 95       	ror	r22
    2562:	b7 95       	ror	r27
    2564:	88 0f       	add	r24, r24
    2566:	91 1d       	adc	r25, r1
    2568:	96 95       	lsr	r25
    256a:	87 95       	ror	r24
    256c:	97 f9       	bld	r25, 7
    256e:	08 95       	ret

00002570 <__fp_norm2>:
    2570:	91 50       	subi	r25, 0x01	; 1
    2572:	50 40       	sbci	r21, 0x00	; 0
    2574:	66 0f       	add	r22, r22
    2576:	77 1f       	adc	r23, r23
    2578:	88 1f       	adc	r24, r24
    257a:	d2 f7       	brpl	.-12     	; 0x2570 <__fp_norm2>
    257c:	08 95       	ret

0000257e <__fp_powsodd>:
    257e:	9f 93       	push	r25
    2580:	8f 93       	push	r24
    2582:	7f 93       	push	r23
    2584:	6f 93       	push	r22
    2586:	ff 93       	push	r31
    2588:	ef 93       	push	r30
    258a:	9b 01       	movw	r18, r22
    258c:	ac 01       	movw	r20, r24
    258e:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__mulsf3>
    2592:	ef 91       	pop	r30
    2594:	ff 91       	pop	r31
    2596:	0e 94 ab 10 	call	0x2156	; 0x2156 <__fp_powser>
    259a:	2f 91       	pop	r18
    259c:	3f 91       	pop	r19
    259e:	4f 91       	pop	r20
    25a0:	5f 91       	pop	r21
    25a2:	0c 94 61 11 	jmp	0x22c2	; 0x22c2 <__mulsf3>
    25a6:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__fp_inf>
    25aa:	0c 94 aa 12 	jmp	0x2554	; 0x2554 <__fp_mpack>

000025ae <ldexp>:
    25ae:	0e 94 38 11 	call	0x2270	; 0x2270 <__fp_splitA>
    25b2:	d8 f3       	brcs	.-10     	; 0x25aa <__fp_powsodd+0x2c>
    25b4:	99 23       	and	r25, r25
    25b6:	c9 f3       	breq	.-14     	; 0x25aa <__fp_powsodd+0x2c>
    25b8:	94 0f       	add	r25, r20
    25ba:	51 1d       	adc	r21, r1
    25bc:	a3 f3       	brvs	.-24     	; 0x25a6 <__fp_powsodd+0x28>
    25be:	91 50       	subi	r25, 0x01	; 1
    25c0:	50 40       	sbci	r21, 0x00	; 0
    25c2:	94 f0       	brlt	.+36     	; 0x25e8 <ldexp+0x3a>
    25c4:	59 f0       	breq	.+22     	; 0x25dc <ldexp+0x2e>
    25c6:	88 23       	and	r24, r24
    25c8:	32 f0       	brmi	.+12     	; 0x25d6 <ldexp+0x28>
    25ca:	66 0f       	add	r22, r22
    25cc:	77 1f       	adc	r23, r23
    25ce:	88 1f       	adc	r24, r24
    25d0:	91 50       	subi	r25, 0x01	; 1
    25d2:	50 40       	sbci	r21, 0x00	; 0
    25d4:	c1 f7       	brne	.-16     	; 0x25c6 <ldexp+0x18>
    25d6:	9e 3f       	cpi	r25, 0xFE	; 254
    25d8:	51 05       	cpc	r21, r1
    25da:	2c f7       	brge	.-54     	; 0x25a6 <__fp_powsodd+0x28>
    25dc:	88 0f       	add	r24, r24
    25de:	91 1d       	adc	r25, r1
    25e0:	96 95       	lsr	r25
    25e2:	87 95       	ror	r24
    25e4:	97 f9       	bld	r25, 7
    25e6:	08 95       	ret
    25e8:	5f 3f       	cpi	r21, 0xFF	; 255
    25ea:	ac f0       	brlt	.+42     	; 0x2616 <ldexp+0x68>
    25ec:	98 3e       	cpi	r25, 0xE8	; 232
    25ee:	9c f0       	brlt	.+38     	; 0x2616 <ldexp+0x68>
    25f0:	bb 27       	eor	r27, r27
    25f2:	86 95       	lsr	r24
    25f4:	77 95       	ror	r23
    25f6:	67 95       	ror	r22
    25f8:	b7 95       	ror	r27
    25fa:	08 f4       	brcc	.+2      	; 0x25fe <ldexp+0x50>
    25fc:	b1 60       	ori	r27, 0x01	; 1
    25fe:	93 95       	inc	r25
    2600:	c1 f7       	brne	.-16     	; 0x25f2 <ldexp+0x44>
    2602:	bb 0f       	add	r27, r27
    2604:	58 f7       	brcc	.-42     	; 0x25dc <ldexp+0x2e>
    2606:	11 f4       	brne	.+4      	; 0x260c <ldexp+0x5e>
    2608:	60 ff       	sbrs	r22, 0
    260a:	e8 cf       	rjmp	.-48     	; 0x25dc <ldexp+0x2e>
    260c:	6f 5f       	subi	r22, 0xFF	; 255
    260e:	7f 4f       	sbci	r23, 0xFF	; 255
    2610:	8f 4f       	sbci	r24, 0xFF	; 255
    2612:	9f 4f       	sbci	r25, 0xFF	; 255
    2614:	e3 cf       	rjmp	.-58     	; 0x25dc <ldexp+0x2e>
    2616:	0c 94 53 11 	jmp	0x22a6	; 0x22a6 <__fp_szero>
    261a:	16 f0       	brts	.+4      	; 0x2620 <ldexp+0x72>
    261c:	0c 94 aa 12 	jmp	0x2554	; 0x2554 <__fp_mpack>
    2620:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__fp_nan>
    2624:	68 94       	set
    2626:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <__fp_inf>

0000262a <log>:
    262a:	0e 94 38 11 	call	0x2270	; 0x2270 <__fp_splitA>
    262e:	a8 f3       	brcs	.-22     	; 0x261a <ldexp+0x6c>
    2630:	99 23       	and	r25, r25
    2632:	c1 f3       	breq	.-16     	; 0x2624 <ldexp+0x76>
    2634:	ae f3       	brts	.-22     	; 0x2620 <ldexp+0x72>
    2636:	df 93       	push	r29
    2638:	cf 93       	push	r28
    263a:	1f 93       	push	r17
    263c:	0f 93       	push	r16
    263e:	ff 92       	push	r15
    2640:	c9 2f       	mov	r28, r25
    2642:	dd 27       	eor	r29, r29
    2644:	88 23       	and	r24, r24
    2646:	2a f0       	brmi	.+10     	; 0x2652 <log+0x28>
    2648:	21 97       	sbiw	r28, 0x01	; 1
    264a:	66 0f       	add	r22, r22
    264c:	77 1f       	adc	r23, r23
    264e:	88 1f       	adc	r24, r24
    2650:	da f7       	brpl	.-10     	; 0x2648 <log+0x1e>
    2652:	20 e0       	ldi	r18, 0x00	; 0
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	40 e8       	ldi	r20, 0x80	; 128
    2658:	5f eb       	ldi	r21, 0xBF	; 191
    265a:	9f e3       	ldi	r25, 0x3F	; 63
    265c:	88 39       	cpi	r24, 0x98	; 152
    265e:	20 f0       	brcs	.+8      	; 0x2668 <log+0x3e>
    2660:	80 3e       	cpi	r24, 0xE0	; 224
    2662:	38 f0       	brcs	.+14     	; 0x2672 <log+0x48>
    2664:	21 96       	adiw	r28, 0x01	; 1
    2666:	8f 77       	andi	r24, 0x7F	; 127
    2668:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__addsf3>
    266c:	e9 e1       	ldi	r30, 0x19	; 25
    266e:	f1 e0       	ldi	r31, 0x01	; 1
    2670:	04 c0       	rjmp	.+8      	; 0x267a <log+0x50>
    2672:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__addsf3>
    2676:	e6 e4       	ldi	r30, 0x46	; 70
    2678:	f1 e0       	ldi	r31, 0x01	; 1
    267a:	0e 94 ab 10 	call	0x2156	; 0x2156 <__fp_powser>
    267e:	8b 01       	movw	r16, r22
    2680:	be 01       	movw	r22, r28
    2682:	ec 01       	movw	r28, r24
    2684:	fb 2e       	mov	r15, r27
    2686:	6f 57       	subi	r22, 0x7F	; 127
    2688:	71 09       	sbc	r23, r1
    268a:	75 95       	asr	r23
    268c:	77 1f       	adc	r23, r23
    268e:	88 0b       	sbc	r24, r24
    2690:	99 0b       	sbc	r25, r25
    2692:	0e 94 43 10 	call	0x2086	; 0x2086 <__floatsisf>
    2696:	28 e1       	ldi	r18, 0x18	; 24
    2698:	32 e7       	ldi	r19, 0x72	; 114
    269a:	41 e3       	ldi	r20, 0x31	; 49
    269c:	5f e3       	ldi	r21, 0x3F	; 63
    269e:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__mulsf3x>
    26a2:	af 2d       	mov	r26, r15
    26a4:	98 01       	movw	r18, r16
    26a6:	ae 01       	movw	r20, r28
    26a8:	ff 90       	pop	r15
    26aa:	0f 91       	pop	r16
    26ac:	1f 91       	pop	r17
    26ae:	cf 91       	pop	r28
    26b0:	df 91       	pop	r29
    26b2:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__addsf3x>
    26b6:	0c 94 0b 11 	jmp	0x2216	; 0x2216 <__fp_round>

000026ba <modf>:
    26ba:	fa 01       	movw	r30, r20
    26bc:	dc 01       	movw	r26, r24
    26be:	aa 0f       	add	r26, r26
    26c0:	bb 1f       	adc	r27, r27
    26c2:	9b 01       	movw	r18, r22
    26c4:	ac 01       	movw	r20, r24
    26c6:	bf 57       	subi	r27, 0x7F	; 127
    26c8:	28 f4       	brcc	.+10     	; 0x26d4 <modf+0x1a>
    26ca:	22 27       	eor	r18, r18
    26cc:	33 27       	eor	r19, r19
    26ce:	44 27       	eor	r20, r20
    26d0:	50 78       	andi	r21, 0x80	; 128
    26d2:	20 c0       	rjmp	.+64     	; 0x2714 <modf+0x5a>
    26d4:	b7 51       	subi	r27, 0x17	; 23
    26d6:	90 f4       	brcc	.+36     	; 0x26fc <modf+0x42>
    26d8:	ab 2f       	mov	r26, r27
    26da:	00 24       	eor	r0, r0
    26dc:	46 95       	lsr	r20
    26de:	37 95       	ror	r19
    26e0:	27 95       	ror	r18
    26e2:	01 1c       	adc	r0, r1
    26e4:	a3 95       	inc	r26
    26e6:	d2 f3       	brmi	.-12     	; 0x26dc <modf+0x22>
    26e8:	00 20       	and	r0, r0
    26ea:	71 f0       	breq	.+28     	; 0x2708 <modf+0x4e>
    26ec:	22 0f       	add	r18, r18
    26ee:	33 1f       	adc	r19, r19
    26f0:	44 1f       	adc	r20, r20
    26f2:	b3 95       	inc	r27
    26f4:	da f3       	brmi	.-10     	; 0x26ec <modf+0x32>
    26f6:	0e d0       	rcall	.+28     	; 0x2714 <modf+0x5a>
    26f8:	0c 94 b0 0e 	jmp	0x1d60	; 0x1d60 <__subsf3>
    26fc:	61 30       	cpi	r22, 0x01	; 1
    26fe:	71 05       	cpc	r23, r1
    2700:	a0 e8       	ldi	r26, 0x80	; 128
    2702:	8a 07       	cpc	r24, r26
    2704:	b9 46       	sbci	r27, 0x69	; 105
    2706:	30 f4       	brcc	.+12     	; 0x2714 <modf+0x5a>
    2708:	9b 01       	movw	r18, r22
    270a:	ac 01       	movw	r20, r24
    270c:	66 27       	eor	r22, r22
    270e:	77 27       	eor	r23, r23
    2710:	88 27       	eor	r24, r24
    2712:	90 78       	andi	r25, 0x80	; 128
    2714:	30 96       	adiw	r30, 0x00	; 0
    2716:	21 f0       	breq	.+8      	; 0x2720 <modf+0x66>
    2718:	20 83       	st	Z, r18
    271a:	31 83       	std	Z+1, r19	; 0x01
    271c:	42 83       	std	Z+2, r20	; 0x02
    271e:	53 83       	std	Z+3, r21	; 0x03
    2720:	08 95       	ret

00002722 <vfprintf>:
    2722:	a0 e1       	ldi	r26, 0x10	; 16
    2724:	b0 e0       	ldi	r27, 0x00	; 0
    2726:	e7 e9       	ldi	r30, 0x97	; 151
    2728:	f3 e1       	ldi	r31, 0x13	; 19
    272a:	0c 94 84 17 	jmp	0x2f08	; 0x2f08 <__prologue_saves__>
    272e:	7c 01       	movw	r14, r24
    2730:	1b 01       	movw	r2, r22
    2732:	6a 01       	movw	r12, r20
    2734:	fc 01       	movw	r30, r24
    2736:	17 82       	std	Z+7, r1	; 0x07
    2738:	16 82       	std	Z+6, r1	; 0x06
    273a:	83 81       	ldd	r24, Z+3	; 0x03
    273c:	81 ff       	sbrs	r24, 1
    273e:	44 c3       	rjmp	.+1672   	; 0x2dc8 <vfprintf+0x6a6>
    2740:	9e 01       	movw	r18, r28
    2742:	2f 5f       	subi	r18, 0xFF	; 255
    2744:	3f 4f       	sbci	r19, 0xFF	; 255
    2746:	39 01       	movw	r6, r18
    2748:	f7 01       	movw	r30, r14
    274a:	93 81       	ldd	r25, Z+3	; 0x03
    274c:	f1 01       	movw	r30, r2
    274e:	93 fd       	sbrc	r25, 3
    2750:	85 91       	lpm	r24, Z+
    2752:	93 ff       	sbrs	r25, 3
    2754:	81 91       	ld	r24, Z+
    2756:	1f 01       	movw	r2, r30
    2758:	88 23       	and	r24, r24
    275a:	09 f4       	brne	.+2      	; 0x275e <vfprintf+0x3c>
    275c:	31 c3       	rjmp	.+1634   	; 0x2dc0 <vfprintf+0x69e>
    275e:	85 32       	cpi	r24, 0x25	; 37
    2760:	39 f4       	brne	.+14     	; 0x2770 <vfprintf+0x4e>
    2762:	93 fd       	sbrc	r25, 3
    2764:	85 91       	lpm	r24, Z+
    2766:	93 ff       	sbrs	r25, 3
    2768:	81 91       	ld	r24, Z+
    276a:	1f 01       	movw	r2, r30
    276c:	85 32       	cpi	r24, 0x25	; 37
    276e:	39 f4       	brne	.+14     	; 0x277e <vfprintf+0x5c>
    2770:	b7 01       	movw	r22, r14
    2772:	90 e0       	ldi	r25, 0x00	; 0
    2774:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2778:	56 01       	movw	r10, r12
    277a:	65 01       	movw	r12, r10
    277c:	e5 cf       	rjmp	.-54     	; 0x2748 <vfprintf+0x26>
    277e:	10 e0       	ldi	r17, 0x00	; 0
    2780:	51 2c       	mov	r5, r1
    2782:	91 2c       	mov	r9, r1
    2784:	ff e1       	ldi	r31, 0x1F	; 31
    2786:	f9 15       	cp	r31, r9
    2788:	d8 f0       	brcs	.+54     	; 0x27c0 <vfprintf+0x9e>
    278a:	8b 32       	cpi	r24, 0x2B	; 43
    278c:	79 f0       	breq	.+30     	; 0x27ac <vfprintf+0x8a>
    278e:	38 f4       	brcc	.+14     	; 0x279e <vfprintf+0x7c>
    2790:	80 32       	cpi	r24, 0x20	; 32
    2792:	79 f0       	breq	.+30     	; 0x27b2 <vfprintf+0x90>
    2794:	83 32       	cpi	r24, 0x23	; 35
    2796:	a1 f4       	brne	.+40     	; 0x27c0 <vfprintf+0x9e>
    2798:	f9 2d       	mov	r31, r9
    279a:	f0 61       	ori	r31, 0x10	; 16
    279c:	2e c0       	rjmp	.+92     	; 0x27fa <vfprintf+0xd8>
    279e:	8d 32       	cpi	r24, 0x2D	; 45
    27a0:	61 f0       	breq	.+24     	; 0x27ba <vfprintf+0x98>
    27a2:	80 33       	cpi	r24, 0x30	; 48
    27a4:	69 f4       	brne	.+26     	; 0x27c0 <vfprintf+0x9e>
    27a6:	29 2d       	mov	r18, r9
    27a8:	21 60       	ori	r18, 0x01	; 1
    27aa:	2d c0       	rjmp	.+90     	; 0x2806 <vfprintf+0xe4>
    27ac:	39 2d       	mov	r19, r9
    27ae:	32 60       	ori	r19, 0x02	; 2
    27b0:	93 2e       	mov	r9, r19
    27b2:	89 2d       	mov	r24, r9
    27b4:	84 60       	ori	r24, 0x04	; 4
    27b6:	98 2e       	mov	r9, r24
    27b8:	2a c0       	rjmp	.+84     	; 0x280e <vfprintf+0xec>
    27ba:	e9 2d       	mov	r30, r9
    27bc:	e8 60       	ori	r30, 0x08	; 8
    27be:	15 c0       	rjmp	.+42     	; 0x27ea <vfprintf+0xc8>
    27c0:	97 fc       	sbrc	r9, 7
    27c2:	2d c0       	rjmp	.+90     	; 0x281e <vfprintf+0xfc>
    27c4:	20 ed       	ldi	r18, 0xD0	; 208
    27c6:	28 0f       	add	r18, r24
    27c8:	2a 30       	cpi	r18, 0x0A	; 10
    27ca:	88 f4       	brcc	.+34     	; 0x27ee <vfprintf+0xcc>
    27cc:	96 fe       	sbrs	r9, 6
    27ce:	06 c0       	rjmp	.+12     	; 0x27dc <vfprintf+0xba>
    27d0:	3a e0       	ldi	r19, 0x0A	; 10
    27d2:	13 9f       	mul	r17, r19
    27d4:	20 0d       	add	r18, r0
    27d6:	11 24       	eor	r1, r1
    27d8:	12 2f       	mov	r17, r18
    27da:	19 c0       	rjmp	.+50     	; 0x280e <vfprintf+0xec>
    27dc:	8a e0       	ldi	r24, 0x0A	; 10
    27de:	58 9e       	mul	r5, r24
    27e0:	20 0d       	add	r18, r0
    27e2:	11 24       	eor	r1, r1
    27e4:	52 2e       	mov	r5, r18
    27e6:	e9 2d       	mov	r30, r9
    27e8:	e0 62       	ori	r30, 0x20	; 32
    27ea:	9e 2e       	mov	r9, r30
    27ec:	10 c0       	rjmp	.+32     	; 0x280e <vfprintf+0xec>
    27ee:	8e 32       	cpi	r24, 0x2E	; 46
    27f0:	31 f4       	brne	.+12     	; 0x27fe <vfprintf+0xdc>
    27f2:	96 fc       	sbrc	r9, 6
    27f4:	e5 c2       	rjmp	.+1482   	; 0x2dc0 <vfprintf+0x69e>
    27f6:	f9 2d       	mov	r31, r9
    27f8:	f0 64       	ori	r31, 0x40	; 64
    27fa:	9f 2e       	mov	r9, r31
    27fc:	08 c0       	rjmp	.+16     	; 0x280e <vfprintf+0xec>
    27fe:	8c 36       	cpi	r24, 0x6C	; 108
    2800:	21 f4       	brne	.+8      	; 0x280a <vfprintf+0xe8>
    2802:	29 2d       	mov	r18, r9
    2804:	20 68       	ori	r18, 0x80	; 128
    2806:	92 2e       	mov	r9, r18
    2808:	02 c0       	rjmp	.+4      	; 0x280e <vfprintf+0xec>
    280a:	88 36       	cpi	r24, 0x68	; 104
    280c:	41 f4       	brne	.+16     	; 0x281e <vfprintf+0xfc>
    280e:	f1 01       	movw	r30, r2
    2810:	93 fd       	sbrc	r25, 3
    2812:	85 91       	lpm	r24, Z+
    2814:	93 ff       	sbrs	r25, 3
    2816:	81 91       	ld	r24, Z+
    2818:	1f 01       	movw	r2, r30
    281a:	81 11       	cpse	r24, r1
    281c:	b3 cf       	rjmp	.-154    	; 0x2784 <vfprintf+0x62>
    281e:	9b eb       	ldi	r25, 0xBB	; 187
    2820:	98 0f       	add	r25, r24
    2822:	93 30       	cpi	r25, 0x03	; 3
    2824:	20 f4       	brcc	.+8      	; 0x282e <vfprintf+0x10c>
    2826:	99 2d       	mov	r25, r9
    2828:	90 61       	ori	r25, 0x10	; 16
    282a:	80 5e       	subi	r24, 0xE0	; 224
    282c:	07 c0       	rjmp	.+14     	; 0x283c <vfprintf+0x11a>
    282e:	9b e9       	ldi	r25, 0x9B	; 155
    2830:	98 0f       	add	r25, r24
    2832:	93 30       	cpi	r25, 0x03	; 3
    2834:	08 f0       	brcs	.+2      	; 0x2838 <vfprintf+0x116>
    2836:	66 c1       	rjmp	.+716    	; 0x2b04 <vfprintf+0x3e2>
    2838:	99 2d       	mov	r25, r9
    283a:	9f 7e       	andi	r25, 0xEF	; 239
    283c:	96 ff       	sbrs	r25, 6
    283e:	16 e0       	ldi	r17, 0x06	; 6
    2840:	9f 73       	andi	r25, 0x3F	; 63
    2842:	99 2e       	mov	r9, r25
    2844:	85 36       	cpi	r24, 0x65	; 101
    2846:	19 f4       	brne	.+6      	; 0x284e <vfprintf+0x12c>
    2848:	90 64       	ori	r25, 0x40	; 64
    284a:	99 2e       	mov	r9, r25
    284c:	08 c0       	rjmp	.+16     	; 0x285e <vfprintf+0x13c>
    284e:	86 36       	cpi	r24, 0x66	; 102
    2850:	21 f4       	brne	.+8      	; 0x285a <vfprintf+0x138>
    2852:	39 2f       	mov	r19, r25
    2854:	30 68       	ori	r19, 0x80	; 128
    2856:	93 2e       	mov	r9, r19
    2858:	02 c0       	rjmp	.+4      	; 0x285e <vfprintf+0x13c>
    285a:	11 11       	cpse	r17, r1
    285c:	11 50       	subi	r17, 0x01	; 1
    285e:	97 fe       	sbrs	r9, 7
    2860:	07 c0       	rjmp	.+14     	; 0x2870 <vfprintf+0x14e>
    2862:	1c 33       	cpi	r17, 0x3C	; 60
    2864:	50 f4       	brcc	.+20     	; 0x287a <vfprintf+0x158>
    2866:	44 24       	eor	r4, r4
    2868:	43 94       	inc	r4
    286a:	41 0e       	add	r4, r17
    286c:	27 e0       	ldi	r18, 0x07	; 7
    286e:	0b c0       	rjmp	.+22     	; 0x2886 <vfprintf+0x164>
    2870:	18 30       	cpi	r17, 0x08	; 8
    2872:	38 f0       	brcs	.+14     	; 0x2882 <vfprintf+0x160>
    2874:	27 e0       	ldi	r18, 0x07	; 7
    2876:	17 e0       	ldi	r17, 0x07	; 7
    2878:	05 c0       	rjmp	.+10     	; 0x2884 <vfprintf+0x162>
    287a:	27 e0       	ldi	r18, 0x07	; 7
    287c:	9c e3       	ldi	r25, 0x3C	; 60
    287e:	49 2e       	mov	r4, r25
    2880:	02 c0       	rjmp	.+4      	; 0x2886 <vfprintf+0x164>
    2882:	21 2f       	mov	r18, r17
    2884:	41 2c       	mov	r4, r1
    2886:	56 01       	movw	r10, r12
    2888:	84 e0       	ldi	r24, 0x04	; 4
    288a:	a8 0e       	add	r10, r24
    288c:	b1 1c       	adc	r11, r1
    288e:	f6 01       	movw	r30, r12
    2890:	60 81       	ld	r22, Z
    2892:	71 81       	ldd	r23, Z+1	; 0x01
    2894:	82 81       	ldd	r24, Z+2	; 0x02
    2896:	93 81       	ldd	r25, Z+3	; 0x03
    2898:	04 2d       	mov	r16, r4
    289a:	a3 01       	movw	r20, r6
    289c:	0e 94 24 18 	call	0x3048	; 0x3048 <__ftoa_engine>
    28a0:	6c 01       	movw	r12, r24
    28a2:	f9 81       	ldd	r31, Y+1	; 0x01
    28a4:	fc 87       	std	Y+12, r31	; 0x0c
    28a6:	f0 ff       	sbrs	r31, 0
    28a8:	02 c0       	rjmp	.+4      	; 0x28ae <vfprintf+0x18c>
    28aa:	f3 ff       	sbrs	r31, 3
    28ac:	06 c0       	rjmp	.+12     	; 0x28ba <vfprintf+0x198>
    28ae:	91 fc       	sbrc	r9, 1
    28b0:	06 c0       	rjmp	.+12     	; 0x28be <vfprintf+0x19c>
    28b2:	92 fe       	sbrs	r9, 2
    28b4:	06 c0       	rjmp	.+12     	; 0x28c2 <vfprintf+0x1a0>
    28b6:	00 e2       	ldi	r16, 0x20	; 32
    28b8:	05 c0       	rjmp	.+10     	; 0x28c4 <vfprintf+0x1a2>
    28ba:	0d e2       	ldi	r16, 0x2D	; 45
    28bc:	03 c0       	rjmp	.+6      	; 0x28c4 <vfprintf+0x1a2>
    28be:	0b e2       	ldi	r16, 0x2B	; 43
    28c0:	01 c0       	rjmp	.+2      	; 0x28c4 <vfprintf+0x1a2>
    28c2:	00 e0       	ldi	r16, 0x00	; 0
    28c4:	8c 85       	ldd	r24, Y+12	; 0x0c
    28c6:	8c 70       	andi	r24, 0x0C	; 12
    28c8:	19 f0       	breq	.+6      	; 0x28d0 <vfprintf+0x1ae>
    28ca:	01 11       	cpse	r16, r1
    28cc:	5a c2       	rjmp	.+1204   	; 0x2d82 <vfprintf+0x660>
    28ce:	9b c2       	rjmp	.+1334   	; 0x2e06 <vfprintf+0x6e4>
    28d0:	97 fe       	sbrs	r9, 7
    28d2:	10 c0       	rjmp	.+32     	; 0x28f4 <vfprintf+0x1d2>
    28d4:	4c 0c       	add	r4, r12
    28d6:	fc 85       	ldd	r31, Y+12	; 0x0c
    28d8:	f4 ff       	sbrs	r31, 4
    28da:	04 c0       	rjmp	.+8      	; 0x28e4 <vfprintf+0x1c2>
    28dc:	8a 81       	ldd	r24, Y+2	; 0x02
    28de:	81 33       	cpi	r24, 0x31	; 49
    28e0:	09 f4       	brne	.+2      	; 0x28e4 <vfprintf+0x1c2>
    28e2:	4a 94       	dec	r4
    28e4:	14 14       	cp	r1, r4
    28e6:	74 f5       	brge	.+92     	; 0x2944 <vfprintf+0x222>
    28e8:	28 e0       	ldi	r18, 0x08	; 8
    28ea:	24 15       	cp	r18, r4
    28ec:	78 f5       	brcc	.+94     	; 0x294c <vfprintf+0x22a>
    28ee:	88 e0       	ldi	r24, 0x08	; 8
    28f0:	48 2e       	mov	r4, r24
    28f2:	2c c0       	rjmp	.+88     	; 0x294c <vfprintf+0x22a>
    28f4:	96 fc       	sbrc	r9, 6
    28f6:	2a c0       	rjmp	.+84     	; 0x294c <vfprintf+0x22a>
    28f8:	81 2f       	mov	r24, r17
    28fa:	90 e0       	ldi	r25, 0x00	; 0
    28fc:	8c 15       	cp	r24, r12
    28fe:	9d 05       	cpc	r25, r13
    2900:	9c f0       	brlt	.+38     	; 0x2928 <vfprintf+0x206>
    2902:	3c ef       	ldi	r19, 0xFC	; 252
    2904:	c3 16       	cp	r12, r19
    2906:	3f ef       	ldi	r19, 0xFF	; 255
    2908:	d3 06       	cpc	r13, r19
    290a:	74 f0       	brlt	.+28     	; 0x2928 <vfprintf+0x206>
    290c:	89 2d       	mov	r24, r9
    290e:	80 68       	ori	r24, 0x80	; 128
    2910:	98 2e       	mov	r9, r24
    2912:	0a c0       	rjmp	.+20     	; 0x2928 <vfprintf+0x206>
    2914:	e2 e0       	ldi	r30, 0x02	; 2
    2916:	f0 e0       	ldi	r31, 0x00	; 0
    2918:	ec 0f       	add	r30, r28
    291a:	fd 1f       	adc	r31, r29
    291c:	e1 0f       	add	r30, r17
    291e:	f1 1d       	adc	r31, r1
    2920:	80 81       	ld	r24, Z
    2922:	80 33       	cpi	r24, 0x30	; 48
    2924:	19 f4       	brne	.+6      	; 0x292c <vfprintf+0x20a>
    2926:	11 50       	subi	r17, 0x01	; 1
    2928:	11 11       	cpse	r17, r1
    292a:	f4 cf       	rjmp	.-24     	; 0x2914 <vfprintf+0x1f2>
    292c:	97 fe       	sbrs	r9, 7
    292e:	0e c0       	rjmp	.+28     	; 0x294c <vfprintf+0x22a>
    2930:	44 24       	eor	r4, r4
    2932:	43 94       	inc	r4
    2934:	41 0e       	add	r4, r17
    2936:	81 2f       	mov	r24, r17
    2938:	90 e0       	ldi	r25, 0x00	; 0
    293a:	c8 16       	cp	r12, r24
    293c:	d9 06       	cpc	r13, r25
    293e:	2c f4       	brge	.+10     	; 0x294a <vfprintf+0x228>
    2940:	1c 19       	sub	r17, r12
    2942:	04 c0       	rjmp	.+8      	; 0x294c <vfprintf+0x22a>
    2944:	44 24       	eor	r4, r4
    2946:	43 94       	inc	r4
    2948:	01 c0       	rjmp	.+2      	; 0x294c <vfprintf+0x22a>
    294a:	10 e0       	ldi	r17, 0x00	; 0
    294c:	97 fe       	sbrs	r9, 7
    294e:	06 c0       	rjmp	.+12     	; 0x295c <vfprintf+0x23a>
    2950:	1c 14       	cp	r1, r12
    2952:	1d 04       	cpc	r1, r13
    2954:	34 f4       	brge	.+12     	; 0x2962 <vfprintf+0x240>
    2956:	c6 01       	movw	r24, r12
    2958:	01 96       	adiw	r24, 0x01	; 1
    295a:	05 c0       	rjmp	.+10     	; 0x2966 <vfprintf+0x244>
    295c:	85 e0       	ldi	r24, 0x05	; 5
    295e:	90 e0       	ldi	r25, 0x00	; 0
    2960:	02 c0       	rjmp	.+4      	; 0x2966 <vfprintf+0x244>
    2962:	81 e0       	ldi	r24, 0x01	; 1
    2964:	90 e0       	ldi	r25, 0x00	; 0
    2966:	01 11       	cpse	r16, r1
    2968:	01 96       	adiw	r24, 0x01	; 1
    296a:	11 23       	and	r17, r17
    296c:	31 f0       	breq	.+12     	; 0x297a <vfprintf+0x258>
    296e:	21 2f       	mov	r18, r17
    2970:	30 e0       	ldi	r19, 0x00	; 0
    2972:	2f 5f       	subi	r18, 0xFF	; 255
    2974:	3f 4f       	sbci	r19, 0xFF	; 255
    2976:	82 0f       	add	r24, r18
    2978:	93 1f       	adc	r25, r19
    297a:	25 2d       	mov	r18, r5
    297c:	30 e0       	ldi	r19, 0x00	; 0
    297e:	82 17       	cp	r24, r18
    2980:	93 07       	cpc	r25, r19
    2982:	14 f4       	brge	.+4      	; 0x2988 <vfprintf+0x266>
    2984:	58 1a       	sub	r5, r24
    2986:	01 c0       	rjmp	.+2      	; 0x298a <vfprintf+0x268>
    2988:	51 2c       	mov	r5, r1
    298a:	89 2d       	mov	r24, r9
    298c:	89 70       	andi	r24, 0x09	; 9
    298e:	49 f4       	brne	.+18     	; 0x29a2 <vfprintf+0x280>
    2990:	55 20       	and	r5, r5
    2992:	39 f0       	breq	.+14     	; 0x29a2 <vfprintf+0x280>
    2994:	b7 01       	movw	r22, r14
    2996:	80 e2       	ldi	r24, 0x20	; 32
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    299e:	5a 94       	dec	r5
    29a0:	f7 cf       	rjmp	.-18     	; 0x2990 <vfprintf+0x26e>
    29a2:	00 23       	and	r16, r16
    29a4:	29 f0       	breq	.+10     	; 0x29b0 <vfprintf+0x28e>
    29a6:	b7 01       	movw	r22, r14
    29a8:	80 2f       	mov	r24, r16
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    29b0:	93 fc       	sbrc	r9, 3
    29b2:	09 c0       	rjmp	.+18     	; 0x29c6 <vfprintf+0x2a4>
    29b4:	55 20       	and	r5, r5
    29b6:	39 f0       	breq	.+14     	; 0x29c6 <vfprintf+0x2a4>
    29b8:	b7 01       	movw	r22, r14
    29ba:	80 e3       	ldi	r24, 0x30	; 48
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    29c2:	5a 94       	dec	r5
    29c4:	f7 cf       	rjmp	.-18     	; 0x29b4 <vfprintf+0x292>
    29c6:	97 fe       	sbrs	r9, 7
    29c8:	4c c0       	rjmp	.+152    	; 0x2a62 <vfprintf+0x340>
    29ca:	46 01       	movw	r8, r12
    29cc:	d7 fe       	sbrs	r13, 7
    29ce:	02 c0       	rjmp	.+4      	; 0x29d4 <vfprintf+0x2b2>
    29d0:	81 2c       	mov	r8, r1
    29d2:	91 2c       	mov	r9, r1
    29d4:	c6 01       	movw	r24, r12
    29d6:	88 19       	sub	r24, r8
    29d8:	99 09       	sbc	r25, r9
    29da:	f3 01       	movw	r30, r6
    29dc:	e8 0f       	add	r30, r24
    29de:	f9 1f       	adc	r31, r25
    29e0:	fe 87       	std	Y+14, r31	; 0x0e
    29e2:	ed 87       	std	Y+13, r30	; 0x0d
    29e4:	96 01       	movw	r18, r12
    29e6:	24 19       	sub	r18, r4
    29e8:	31 09       	sbc	r19, r1
    29ea:	38 8b       	std	Y+16, r19	; 0x10
    29ec:	2f 87       	std	Y+15, r18	; 0x0f
    29ee:	01 2f       	mov	r16, r17
    29f0:	10 e0       	ldi	r17, 0x00	; 0
    29f2:	11 95       	neg	r17
    29f4:	01 95       	neg	r16
    29f6:	11 09       	sbc	r17, r1
    29f8:	3f ef       	ldi	r19, 0xFF	; 255
    29fa:	83 16       	cp	r8, r19
    29fc:	93 06       	cpc	r9, r19
    29fe:	29 f4       	brne	.+10     	; 0x2a0a <vfprintf+0x2e8>
    2a00:	b7 01       	movw	r22, r14
    2a02:	8e e2       	ldi	r24, 0x2E	; 46
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2a0a:	c8 14       	cp	r12, r8
    2a0c:	d9 04       	cpc	r13, r9
    2a0e:	4c f0       	brlt	.+18     	; 0x2a22 <vfprintf+0x300>
    2a10:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a12:	98 89       	ldd	r25, Y+16	; 0x10
    2a14:	88 15       	cp	r24, r8
    2a16:	99 05       	cpc	r25, r9
    2a18:	24 f4       	brge	.+8      	; 0x2a22 <vfprintf+0x300>
    2a1a:	ed 85       	ldd	r30, Y+13	; 0x0d
    2a1c:	fe 85       	ldd	r31, Y+14	; 0x0e
    2a1e:	81 81       	ldd	r24, Z+1	; 0x01
    2a20:	01 c0       	rjmp	.+2      	; 0x2a24 <vfprintf+0x302>
    2a22:	80 e3       	ldi	r24, 0x30	; 48
    2a24:	f1 e0       	ldi	r31, 0x01	; 1
    2a26:	8f 1a       	sub	r8, r31
    2a28:	91 08       	sbc	r9, r1
    2a2a:	2d 85       	ldd	r18, Y+13	; 0x0d
    2a2c:	3e 85       	ldd	r19, Y+14	; 0x0e
    2a2e:	2f 5f       	subi	r18, 0xFF	; 255
    2a30:	3f 4f       	sbci	r19, 0xFF	; 255
    2a32:	3e 87       	std	Y+14, r19	; 0x0e
    2a34:	2d 87       	std	Y+13, r18	; 0x0d
    2a36:	80 16       	cp	r8, r16
    2a38:	91 06       	cpc	r9, r17
    2a3a:	2c f0       	brlt	.+10     	; 0x2a46 <vfprintf+0x324>
    2a3c:	b7 01       	movw	r22, r14
    2a3e:	90 e0       	ldi	r25, 0x00	; 0
    2a40:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2a44:	d9 cf       	rjmp	.-78     	; 0x29f8 <vfprintf+0x2d6>
    2a46:	c8 14       	cp	r12, r8
    2a48:	d9 04       	cpc	r13, r9
    2a4a:	41 f4       	brne	.+16     	; 0x2a5c <vfprintf+0x33a>
    2a4c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a4e:	96 33       	cpi	r25, 0x36	; 54
    2a50:	20 f4       	brcc	.+8      	; 0x2a5a <vfprintf+0x338>
    2a52:	95 33       	cpi	r25, 0x35	; 53
    2a54:	19 f4       	brne	.+6      	; 0x2a5c <vfprintf+0x33a>
    2a56:	3c 85       	ldd	r19, Y+12	; 0x0c
    2a58:	34 ff       	sbrs	r19, 4
    2a5a:	81 e3       	ldi	r24, 0x31	; 49
    2a5c:	b7 01       	movw	r22, r14
    2a5e:	90 e0       	ldi	r25, 0x00	; 0
    2a60:	4e c0       	rjmp	.+156    	; 0x2afe <vfprintf+0x3dc>
    2a62:	8a 81       	ldd	r24, Y+2	; 0x02
    2a64:	81 33       	cpi	r24, 0x31	; 49
    2a66:	19 f0       	breq	.+6      	; 0x2a6e <vfprintf+0x34c>
    2a68:	9c 85       	ldd	r25, Y+12	; 0x0c
    2a6a:	9f 7e       	andi	r25, 0xEF	; 239
    2a6c:	9c 87       	std	Y+12, r25	; 0x0c
    2a6e:	b7 01       	movw	r22, r14
    2a70:	90 e0       	ldi	r25, 0x00	; 0
    2a72:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2a76:	11 11       	cpse	r17, r1
    2a78:	05 c0       	rjmp	.+10     	; 0x2a84 <vfprintf+0x362>
    2a7a:	94 fc       	sbrc	r9, 4
    2a7c:	18 c0       	rjmp	.+48     	; 0x2aae <vfprintf+0x38c>
    2a7e:	85 e6       	ldi	r24, 0x65	; 101
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	17 c0       	rjmp	.+46     	; 0x2ab2 <vfprintf+0x390>
    2a84:	b7 01       	movw	r22, r14
    2a86:	8e e2       	ldi	r24, 0x2E	; 46
    2a88:	90 e0       	ldi	r25, 0x00	; 0
    2a8a:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2a8e:	1e 5f       	subi	r17, 0xFE	; 254
    2a90:	82 e0       	ldi	r24, 0x02	; 2
    2a92:	01 e0       	ldi	r16, 0x01	; 1
    2a94:	08 0f       	add	r16, r24
    2a96:	f3 01       	movw	r30, r6
    2a98:	e8 0f       	add	r30, r24
    2a9a:	f1 1d       	adc	r31, r1
    2a9c:	80 81       	ld	r24, Z
    2a9e:	b7 01       	movw	r22, r14
    2aa0:	90 e0       	ldi	r25, 0x00	; 0
    2aa2:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2aa6:	80 2f       	mov	r24, r16
    2aa8:	01 13       	cpse	r16, r17
    2aaa:	f3 cf       	rjmp	.-26     	; 0x2a92 <vfprintf+0x370>
    2aac:	e6 cf       	rjmp	.-52     	; 0x2a7a <vfprintf+0x358>
    2aae:	85 e4       	ldi	r24, 0x45	; 69
    2ab0:	90 e0       	ldi	r25, 0x00	; 0
    2ab2:	b7 01       	movw	r22, r14
    2ab4:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2ab8:	d7 fc       	sbrc	r13, 7
    2aba:	06 c0       	rjmp	.+12     	; 0x2ac8 <vfprintf+0x3a6>
    2abc:	c1 14       	cp	r12, r1
    2abe:	d1 04       	cpc	r13, r1
    2ac0:	41 f4       	brne	.+16     	; 0x2ad2 <vfprintf+0x3b0>
    2ac2:	ec 85       	ldd	r30, Y+12	; 0x0c
    2ac4:	e4 ff       	sbrs	r30, 4
    2ac6:	05 c0       	rjmp	.+10     	; 0x2ad2 <vfprintf+0x3b0>
    2ac8:	d1 94       	neg	r13
    2aca:	c1 94       	neg	r12
    2acc:	d1 08       	sbc	r13, r1
    2ace:	8d e2       	ldi	r24, 0x2D	; 45
    2ad0:	01 c0       	rjmp	.+2      	; 0x2ad4 <vfprintf+0x3b2>
    2ad2:	8b e2       	ldi	r24, 0x2B	; 43
    2ad4:	b7 01       	movw	r22, r14
    2ad6:	90 e0       	ldi	r25, 0x00	; 0
    2ad8:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2adc:	80 e3       	ldi	r24, 0x30	; 48
    2ade:	2a e0       	ldi	r18, 0x0A	; 10
    2ae0:	c2 16       	cp	r12, r18
    2ae2:	d1 04       	cpc	r13, r1
    2ae4:	2c f0       	brlt	.+10     	; 0x2af0 <vfprintf+0x3ce>
    2ae6:	8f 5f       	subi	r24, 0xFF	; 255
    2ae8:	fa e0       	ldi	r31, 0x0A	; 10
    2aea:	cf 1a       	sub	r12, r31
    2aec:	d1 08       	sbc	r13, r1
    2aee:	f7 cf       	rjmp	.-18     	; 0x2ade <vfprintf+0x3bc>
    2af0:	b7 01       	movw	r22, r14
    2af2:	90 e0       	ldi	r25, 0x00	; 0
    2af4:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2af8:	b7 01       	movw	r22, r14
    2afa:	c6 01       	movw	r24, r12
    2afc:	c0 96       	adiw	r24, 0x30	; 48
    2afe:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2b02:	54 c1       	rjmp	.+680    	; 0x2dac <vfprintf+0x68a>
    2b04:	83 36       	cpi	r24, 0x63	; 99
    2b06:	31 f0       	breq	.+12     	; 0x2b14 <vfprintf+0x3f2>
    2b08:	83 37       	cpi	r24, 0x73	; 115
    2b0a:	79 f0       	breq	.+30     	; 0x2b2a <vfprintf+0x408>
    2b0c:	83 35       	cpi	r24, 0x53	; 83
    2b0e:	09 f0       	breq	.+2      	; 0x2b12 <vfprintf+0x3f0>
    2b10:	56 c0       	rjmp	.+172    	; 0x2bbe <vfprintf+0x49c>
    2b12:	20 c0       	rjmp	.+64     	; 0x2b54 <vfprintf+0x432>
    2b14:	56 01       	movw	r10, r12
    2b16:	32 e0       	ldi	r19, 0x02	; 2
    2b18:	a3 0e       	add	r10, r19
    2b1a:	b1 1c       	adc	r11, r1
    2b1c:	f6 01       	movw	r30, r12
    2b1e:	80 81       	ld	r24, Z
    2b20:	89 83       	std	Y+1, r24	; 0x01
    2b22:	01 e0       	ldi	r16, 0x01	; 1
    2b24:	10 e0       	ldi	r17, 0x00	; 0
    2b26:	63 01       	movw	r12, r6
    2b28:	12 c0       	rjmp	.+36     	; 0x2b4e <vfprintf+0x42c>
    2b2a:	56 01       	movw	r10, r12
    2b2c:	f2 e0       	ldi	r31, 0x02	; 2
    2b2e:	af 0e       	add	r10, r31
    2b30:	b1 1c       	adc	r11, r1
    2b32:	f6 01       	movw	r30, r12
    2b34:	c0 80       	ld	r12, Z
    2b36:	d1 80       	ldd	r13, Z+1	; 0x01
    2b38:	96 fe       	sbrs	r9, 6
    2b3a:	03 c0       	rjmp	.+6      	; 0x2b42 <vfprintf+0x420>
    2b3c:	61 2f       	mov	r22, r17
    2b3e:	70 e0       	ldi	r23, 0x00	; 0
    2b40:	02 c0       	rjmp	.+4      	; 0x2b46 <vfprintf+0x424>
    2b42:	6f ef       	ldi	r22, 0xFF	; 255
    2b44:	7f ef       	ldi	r23, 0xFF	; 255
    2b46:	c6 01       	movw	r24, r12
    2b48:	0e 94 26 19 	call	0x324c	; 0x324c <strnlen>
    2b4c:	8c 01       	movw	r16, r24
    2b4e:	f9 2d       	mov	r31, r9
    2b50:	ff 77       	andi	r31, 0x7F	; 127
    2b52:	14 c0       	rjmp	.+40     	; 0x2b7c <vfprintf+0x45a>
    2b54:	56 01       	movw	r10, r12
    2b56:	22 e0       	ldi	r18, 0x02	; 2
    2b58:	a2 0e       	add	r10, r18
    2b5a:	b1 1c       	adc	r11, r1
    2b5c:	f6 01       	movw	r30, r12
    2b5e:	c0 80       	ld	r12, Z
    2b60:	d1 80       	ldd	r13, Z+1	; 0x01
    2b62:	96 fe       	sbrs	r9, 6
    2b64:	03 c0       	rjmp	.+6      	; 0x2b6c <vfprintf+0x44a>
    2b66:	61 2f       	mov	r22, r17
    2b68:	70 e0       	ldi	r23, 0x00	; 0
    2b6a:	02 c0       	rjmp	.+4      	; 0x2b70 <vfprintf+0x44e>
    2b6c:	6f ef       	ldi	r22, 0xFF	; 255
    2b6e:	7f ef       	ldi	r23, 0xFF	; 255
    2b70:	c6 01       	movw	r24, r12
    2b72:	0e 94 fc 18 	call	0x31f8	; 0x31f8 <strnlen_P>
    2b76:	8c 01       	movw	r16, r24
    2b78:	f9 2d       	mov	r31, r9
    2b7a:	f0 68       	ori	r31, 0x80	; 128
    2b7c:	9f 2e       	mov	r9, r31
    2b7e:	f3 fd       	sbrc	r31, 3
    2b80:	1a c0       	rjmp	.+52     	; 0x2bb6 <vfprintf+0x494>
    2b82:	85 2d       	mov	r24, r5
    2b84:	90 e0       	ldi	r25, 0x00	; 0
    2b86:	08 17       	cp	r16, r24
    2b88:	19 07       	cpc	r17, r25
    2b8a:	a8 f4       	brcc	.+42     	; 0x2bb6 <vfprintf+0x494>
    2b8c:	b7 01       	movw	r22, r14
    2b8e:	80 e2       	ldi	r24, 0x20	; 32
    2b90:	90 e0       	ldi	r25, 0x00	; 0
    2b92:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2b96:	5a 94       	dec	r5
    2b98:	f4 cf       	rjmp	.-24     	; 0x2b82 <vfprintf+0x460>
    2b9a:	f6 01       	movw	r30, r12
    2b9c:	97 fc       	sbrc	r9, 7
    2b9e:	85 91       	lpm	r24, Z+
    2ba0:	97 fe       	sbrs	r9, 7
    2ba2:	81 91       	ld	r24, Z+
    2ba4:	6f 01       	movw	r12, r30
    2ba6:	b7 01       	movw	r22, r14
    2ba8:	90 e0       	ldi	r25, 0x00	; 0
    2baa:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2bae:	51 10       	cpse	r5, r1
    2bb0:	5a 94       	dec	r5
    2bb2:	01 50       	subi	r16, 0x01	; 1
    2bb4:	11 09       	sbc	r17, r1
    2bb6:	01 15       	cp	r16, r1
    2bb8:	11 05       	cpc	r17, r1
    2bba:	79 f7       	brne	.-34     	; 0x2b9a <vfprintf+0x478>
    2bbc:	f7 c0       	rjmp	.+494    	; 0x2dac <vfprintf+0x68a>
    2bbe:	84 36       	cpi	r24, 0x64	; 100
    2bc0:	11 f0       	breq	.+4      	; 0x2bc6 <vfprintf+0x4a4>
    2bc2:	89 36       	cpi	r24, 0x69	; 105
    2bc4:	61 f5       	brne	.+88     	; 0x2c1e <vfprintf+0x4fc>
    2bc6:	56 01       	movw	r10, r12
    2bc8:	97 fe       	sbrs	r9, 7
    2bca:	09 c0       	rjmp	.+18     	; 0x2bde <vfprintf+0x4bc>
    2bcc:	24 e0       	ldi	r18, 0x04	; 4
    2bce:	a2 0e       	add	r10, r18
    2bd0:	b1 1c       	adc	r11, r1
    2bd2:	f6 01       	movw	r30, r12
    2bd4:	60 81       	ld	r22, Z
    2bd6:	71 81       	ldd	r23, Z+1	; 0x01
    2bd8:	82 81       	ldd	r24, Z+2	; 0x02
    2bda:	93 81       	ldd	r25, Z+3	; 0x03
    2bdc:	0a c0       	rjmp	.+20     	; 0x2bf2 <vfprintf+0x4d0>
    2bde:	f2 e0       	ldi	r31, 0x02	; 2
    2be0:	af 0e       	add	r10, r31
    2be2:	b1 1c       	adc	r11, r1
    2be4:	f6 01       	movw	r30, r12
    2be6:	60 81       	ld	r22, Z
    2be8:	71 81       	ldd	r23, Z+1	; 0x01
    2bea:	07 2e       	mov	r0, r23
    2bec:	00 0c       	add	r0, r0
    2bee:	88 0b       	sbc	r24, r24
    2bf0:	99 0b       	sbc	r25, r25
    2bf2:	f9 2d       	mov	r31, r9
    2bf4:	ff 76       	andi	r31, 0x6F	; 111
    2bf6:	9f 2e       	mov	r9, r31
    2bf8:	97 ff       	sbrs	r25, 7
    2bfa:	09 c0       	rjmp	.+18     	; 0x2c0e <vfprintf+0x4ec>
    2bfc:	90 95       	com	r25
    2bfe:	80 95       	com	r24
    2c00:	70 95       	com	r23
    2c02:	61 95       	neg	r22
    2c04:	7f 4f       	sbci	r23, 0xFF	; 255
    2c06:	8f 4f       	sbci	r24, 0xFF	; 255
    2c08:	9f 4f       	sbci	r25, 0xFF	; 255
    2c0a:	f0 68       	ori	r31, 0x80	; 128
    2c0c:	9f 2e       	mov	r9, r31
    2c0e:	2a e0       	ldi	r18, 0x0A	; 10
    2c10:	30 e0       	ldi	r19, 0x00	; 0
    2c12:	a3 01       	movw	r20, r6
    2c14:	0e 94 a4 19 	call	0x3348	; 0x3348 <__ultoa_invert>
    2c18:	c8 2e       	mov	r12, r24
    2c1a:	c6 18       	sub	r12, r6
    2c1c:	3f c0       	rjmp	.+126    	; 0x2c9c <vfprintf+0x57a>
    2c1e:	09 2d       	mov	r16, r9
    2c20:	85 37       	cpi	r24, 0x75	; 117
    2c22:	21 f4       	brne	.+8      	; 0x2c2c <vfprintf+0x50a>
    2c24:	0f 7e       	andi	r16, 0xEF	; 239
    2c26:	2a e0       	ldi	r18, 0x0A	; 10
    2c28:	30 e0       	ldi	r19, 0x00	; 0
    2c2a:	1d c0       	rjmp	.+58     	; 0x2c66 <vfprintf+0x544>
    2c2c:	09 7f       	andi	r16, 0xF9	; 249
    2c2e:	8f 36       	cpi	r24, 0x6F	; 111
    2c30:	91 f0       	breq	.+36     	; 0x2c56 <vfprintf+0x534>
    2c32:	18 f4       	brcc	.+6      	; 0x2c3a <vfprintf+0x518>
    2c34:	88 35       	cpi	r24, 0x58	; 88
    2c36:	59 f0       	breq	.+22     	; 0x2c4e <vfprintf+0x52c>
    2c38:	c3 c0       	rjmp	.+390    	; 0x2dc0 <vfprintf+0x69e>
    2c3a:	80 37       	cpi	r24, 0x70	; 112
    2c3c:	19 f0       	breq	.+6      	; 0x2c44 <vfprintf+0x522>
    2c3e:	88 37       	cpi	r24, 0x78	; 120
    2c40:	11 f0       	breq	.+4      	; 0x2c46 <vfprintf+0x524>
    2c42:	be c0       	rjmp	.+380    	; 0x2dc0 <vfprintf+0x69e>
    2c44:	00 61       	ori	r16, 0x10	; 16
    2c46:	04 ff       	sbrs	r16, 4
    2c48:	09 c0       	rjmp	.+18     	; 0x2c5c <vfprintf+0x53a>
    2c4a:	04 60       	ori	r16, 0x04	; 4
    2c4c:	07 c0       	rjmp	.+14     	; 0x2c5c <vfprintf+0x53a>
    2c4e:	94 fe       	sbrs	r9, 4
    2c50:	08 c0       	rjmp	.+16     	; 0x2c62 <vfprintf+0x540>
    2c52:	06 60       	ori	r16, 0x06	; 6
    2c54:	06 c0       	rjmp	.+12     	; 0x2c62 <vfprintf+0x540>
    2c56:	28 e0       	ldi	r18, 0x08	; 8
    2c58:	30 e0       	ldi	r19, 0x00	; 0
    2c5a:	05 c0       	rjmp	.+10     	; 0x2c66 <vfprintf+0x544>
    2c5c:	20 e1       	ldi	r18, 0x10	; 16
    2c5e:	30 e0       	ldi	r19, 0x00	; 0
    2c60:	02 c0       	rjmp	.+4      	; 0x2c66 <vfprintf+0x544>
    2c62:	20 e1       	ldi	r18, 0x10	; 16
    2c64:	32 e0       	ldi	r19, 0x02	; 2
    2c66:	56 01       	movw	r10, r12
    2c68:	07 ff       	sbrs	r16, 7
    2c6a:	09 c0       	rjmp	.+18     	; 0x2c7e <vfprintf+0x55c>
    2c6c:	84 e0       	ldi	r24, 0x04	; 4
    2c6e:	a8 0e       	add	r10, r24
    2c70:	b1 1c       	adc	r11, r1
    2c72:	f6 01       	movw	r30, r12
    2c74:	60 81       	ld	r22, Z
    2c76:	71 81       	ldd	r23, Z+1	; 0x01
    2c78:	82 81       	ldd	r24, Z+2	; 0x02
    2c7a:	93 81       	ldd	r25, Z+3	; 0x03
    2c7c:	08 c0       	rjmp	.+16     	; 0x2c8e <vfprintf+0x56c>
    2c7e:	f2 e0       	ldi	r31, 0x02	; 2
    2c80:	af 0e       	add	r10, r31
    2c82:	b1 1c       	adc	r11, r1
    2c84:	f6 01       	movw	r30, r12
    2c86:	60 81       	ld	r22, Z
    2c88:	71 81       	ldd	r23, Z+1	; 0x01
    2c8a:	80 e0       	ldi	r24, 0x00	; 0
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	a3 01       	movw	r20, r6
    2c90:	0e 94 a4 19 	call	0x3348	; 0x3348 <__ultoa_invert>
    2c94:	c8 2e       	mov	r12, r24
    2c96:	c6 18       	sub	r12, r6
    2c98:	0f 77       	andi	r16, 0x7F	; 127
    2c9a:	90 2e       	mov	r9, r16
    2c9c:	96 fe       	sbrs	r9, 6
    2c9e:	0b c0       	rjmp	.+22     	; 0x2cb6 <vfprintf+0x594>
    2ca0:	09 2d       	mov	r16, r9
    2ca2:	0e 7f       	andi	r16, 0xFE	; 254
    2ca4:	c1 16       	cp	r12, r17
    2ca6:	50 f4       	brcc	.+20     	; 0x2cbc <vfprintf+0x59a>
    2ca8:	94 fe       	sbrs	r9, 4
    2caa:	0a c0       	rjmp	.+20     	; 0x2cc0 <vfprintf+0x59e>
    2cac:	92 fc       	sbrc	r9, 2
    2cae:	08 c0       	rjmp	.+16     	; 0x2cc0 <vfprintf+0x59e>
    2cb0:	09 2d       	mov	r16, r9
    2cb2:	0e 7e       	andi	r16, 0xEE	; 238
    2cb4:	05 c0       	rjmp	.+10     	; 0x2cc0 <vfprintf+0x59e>
    2cb6:	dc 2c       	mov	r13, r12
    2cb8:	09 2d       	mov	r16, r9
    2cba:	03 c0       	rjmp	.+6      	; 0x2cc2 <vfprintf+0x5a0>
    2cbc:	dc 2c       	mov	r13, r12
    2cbe:	01 c0       	rjmp	.+2      	; 0x2cc2 <vfprintf+0x5a0>
    2cc0:	d1 2e       	mov	r13, r17
    2cc2:	04 ff       	sbrs	r16, 4
    2cc4:	0d c0       	rjmp	.+26     	; 0x2ce0 <vfprintf+0x5be>
    2cc6:	fe 01       	movw	r30, r28
    2cc8:	ec 0d       	add	r30, r12
    2cca:	f1 1d       	adc	r31, r1
    2ccc:	80 81       	ld	r24, Z
    2cce:	80 33       	cpi	r24, 0x30	; 48
    2cd0:	11 f4       	brne	.+4      	; 0x2cd6 <vfprintf+0x5b4>
    2cd2:	09 7e       	andi	r16, 0xE9	; 233
    2cd4:	09 c0       	rjmp	.+18     	; 0x2ce8 <vfprintf+0x5c6>
    2cd6:	02 ff       	sbrs	r16, 2
    2cd8:	06 c0       	rjmp	.+12     	; 0x2ce6 <vfprintf+0x5c4>
    2cda:	d3 94       	inc	r13
    2cdc:	d3 94       	inc	r13
    2cde:	04 c0       	rjmp	.+8      	; 0x2ce8 <vfprintf+0x5c6>
    2ce0:	80 2f       	mov	r24, r16
    2ce2:	86 78       	andi	r24, 0x86	; 134
    2ce4:	09 f0       	breq	.+2      	; 0x2ce8 <vfprintf+0x5c6>
    2ce6:	d3 94       	inc	r13
    2ce8:	03 fd       	sbrc	r16, 3
    2cea:	11 c0       	rjmp	.+34     	; 0x2d0e <vfprintf+0x5ec>
    2cec:	00 ff       	sbrs	r16, 0
    2cee:	06 c0       	rjmp	.+12     	; 0x2cfc <vfprintf+0x5da>
    2cf0:	1c 2d       	mov	r17, r12
    2cf2:	d5 14       	cp	r13, r5
    2cf4:	80 f4       	brcc	.+32     	; 0x2d16 <vfprintf+0x5f4>
    2cf6:	15 0d       	add	r17, r5
    2cf8:	1d 19       	sub	r17, r13
    2cfa:	0d c0       	rjmp	.+26     	; 0x2d16 <vfprintf+0x5f4>
    2cfc:	d5 14       	cp	r13, r5
    2cfe:	58 f4       	brcc	.+22     	; 0x2d16 <vfprintf+0x5f4>
    2d00:	b7 01       	movw	r22, r14
    2d02:	80 e2       	ldi	r24, 0x20	; 32
    2d04:	90 e0       	ldi	r25, 0x00	; 0
    2d06:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2d0a:	d3 94       	inc	r13
    2d0c:	f7 cf       	rjmp	.-18     	; 0x2cfc <vfprintf+0x5da>
    2d0e:	d5 14       	cp	r13, r5
    2d10:	10 f4       	brcc	.+4      	; 0x2d16 <vfprintf+0x5f4>
    2d12:	5d 18       	sub	r5, r13
    2d14:	01 c0       	rjmp	.+2      	; 0x2d18 <vfprintf+0x5f6>
    2d16:	51 2c       	mov	r5, r1
    2d18:	04 ff       	sbrs	r16, 4
    2d1a:	10 c0       	rjmp	.+32     	; 0x2d3c <vfprintf+0x61a>
    2d1c:	b7 01       	movw	r22, r14
    2d1e:	80 e3       	ldi	r24, 0x30	; 48
    2d20:	90 e0       	ldi	r25, 0x00	; 0
    2d22:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2d26:	02 ff       	sbrs	r16, 2
    2d28:	17 c0       	rjmp	.+46     	; 0x2d58 <vfprintf+0x636>
    2d2a:	01 fd       	sbrc	r16, 1
    2d2c:	03 c0       	rjmp	.+6      	; 0x2d34 <vfprintf+0x612>
    2d2e:	88 e7       	ldi	r24, 0x78	; 120
    2d30:	90 e0       	ldi	r25, 0x00	; 0
    2d32:	02 c0       	rjmp	.+4      	; 0x2d38 <vfprintf+0x616>
    2d34:	88 e5       	ldi	r24, 0x58	; 88
    2d36:	90 e0       	ldi	r25, 0x00	; 0
    2d38:	b7 01       	movw	r22, r14
    2d3a:	0c c0       	rjmp	.+24     	; 0x2d54 <vfprintf+0x632>
    2d3c:	80 2f       	mov	r24, r16
    2d3e:	86 78       	andi	r24, 0x86	; 134
    2d40:	59 f0       	breq	.+22     	; 0x2d58 <vfprintf+0x636>
    2d42:	01 ff       	sbrs	r16, 1
    2d44:	02 c0       	rjmp	.+4      	; 0x2d4a <vfprintf+0x628>
    2d46:	8b e2       	ldi	r24, 0x2B	; 43
    2d48:	01 c0       	rjmp	.+2      	; 0x2d4c <vfprintf+0x62a>
    2d4a:	80 e2       	ldi	r24, 0x20	; 32
    2d4c:	07 fd       	sbrc	r16, 7
    2d4e:	8d e2       	ldi	r24, 0x2D	; 45
    2d50:	b7 01       	movw	r22, r14
    2d52:	90 e0       	ldi	r25, 0x00	; 0
    2d54:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2d58:	c1 16       	cp	r12, r17
    2d5a:	38 f4       	brcc	.+14     	; 0x2d6a <vfprintf+0x648>
    2d5c:	b7 01       	movw	r22, r14
    2d5e:	80 e3       	ldi	r24, 0x30	; 48
    2d60:	90 e0       	ldi	r25, 0x00	; 0
    2d62:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2d66:	11 50       	subi	r17, 0x01	; 1
    2d68:	f7 cf       	rjmp	.-18     	; 0x2d58 <vfprintf+0x636>
    2d6a:	ca 94       	dec	r12
    2d6c:	f3 01       	movw	r30, r6
    2d6e:	ec 0d       	add	r30, r12
    2d70:	f1 1d       	adc	r31, r1
    2d72:	80 81       	ld	r24, Z
    2d74:	b7 01       	movw	r22, r14
    2d76:	90 e0       	ldi	r25, 0x00	; 0
    2d78:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2d7c:	c1 10       	cpse	r12, r1
    2d7e:	f5 cf       	rjmp	.-22     	; 0x2d6a <vfprintf+0x648>
    2d80:	15 c0       	rjmp	.+42     	; 0x2dac <vfprintf+0x68a>
    2d82:	f4 e0       	ldi	r31, 0x04	; 4
    2d84:	f5 15       	cp	r31, r5
    2d86:	60 f5       	brcc	.+88     	; 0x2de0 <vfprintf+0x6be>
    2d88:	84 e0       	ldi	r24, 0x04	; 4
    2d8a:	58 1a       	sub	r5, r24
    2d8c:	93 fe       	sbrs	r9, 3
    2d8e:	1f c0       	rjmp	.+62     	; 0x2dce <vfprintf+0x6ac>
    2d90:	01 11       	cpse	r16, r1
    2d92:	27 c0       	rjmp	.+78     	; 0x2de2 <vfprintf+0x6c0>
    2d94:	2c 85       	ldd	r18, Y+12	; 0x0c
    2d96:	23 ff       	sbrs	r18, 3
    2d98:	2a c0       	rjmp	.+84     	; 0x2dee <vfprintf+0x6cc>
    2d9a:	04 e7       	ldi	r16, 0x74	; 116
    2d9c:	11 e0       	ldi	r17, 0x01	; 1
    2d9e:	39 2d       	mov	r19, r9
    2da0:	30 71       	andi	r19, 0x10	; 16
    2da2:	93 2e       	mov	r9, r19
    2da4:	f8 01       	movw	r30, r16
    2da6:	84 91       	lpm	r24, Z
    2da8:	81 11       	cpse	r24, r1
    2daa:	24 c0       	rjmp	.+72     	; 0x2df4 <vfprintf+0x6d2>
    2dac:	55 20       	and	r5, r5
    2dae:	09 f4       	brne	.+2      	; 0x2db2 <vfprintf+0x690>
    2db0:	e4 cc       	rjmp	.-1592   	; 0x277a <vfprintf+0x58>
    2db2:	b7 01       	movw	r22, r14
    2db4:	80 e2       	ldi	r24, 0x20	; 32
    2db6:	90 e0       	ldi	r25, 0x00	; 0
    2db8:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2dbc:	5a 94       	dec	r5
    2dbe:	f6 cf       	rjmp	.-20     	; 0x2dac <vfprintf+0x68a>
    2dc0:	f7 01       	movw	r30, r14
    2dc2:	86 81       	ldd	r24, Z+6	; 0x06
    2dc4:	97 81       	ldd	r25, Z+7	; 0x07
    2dc6:	26 c0       	rjmp	.+76     	; 0x2e14 <vfprintf+0x6f2>
    2dc8:	8f ef       	ldi	r24, 0xFF	; 255
    2dca:	9f ef       	ldi	r25, 0xFF	; 255
    2dcc:	23 c0       	rjmp	.+70     	; 0x2e14 <vfprintf+0x6f2>
    2dce:	b7 01       	movw	r22, r14
    2dd0:	80 e2       	ldi	r24, 0x20	; 32
    2dd2:	90 e0       	ldi	r25, 0x00	; 0
    2dd4:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2dd8:	5a 94       	dec	r5
    2dda:	51 10       	cpse	r5, r1
    2ddc:	f8 cf       	rjmp	.-16     	; 0x2dce <vfprintf+0x6ac>
    2dde:	d8 cf       	rjmp	.-80     	; 0x2d90 <vfprintf+0x66e>
    2de0:	51 2c       	mov	r5, r1
    2de2:	b7 01       	movw	r22, r14
    2de4:	80 2f       	mov	r24, r16
    2de6:	90 e0       	ldi	r25, 0x00	; 0
    2de8:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2dec:	d3 cf       	rjmp	.-90     	; 0x2d94 <vfprintf+0x672>
    2dee:	08 e7       	ldi	r16, 0x78	; 120
    2df0:	11 e0       	ldi	r17, 0x01	; 1
    2df2:	d5 cf       	rjmp	.-86     	; 0x2d9e <vfprintf+0x67c>
    2df4:	91 10       	cpse	r9, r1
    2df6:	80 52       	subi	r24, 0x20	; 32
    2df8:	b7 01       	movw	r22, r14
    2dfa:	90 e0       	ldi	r25, 0x00	; 0
    2dfc:	0e 94 46 19 	call	0x328c	; 0x328c <fputc>
    2e00:	0f 5f       	subi	r16, 0xFF	; 255
    2e02:	1f 4f       	sbci	r17, 0xFF	; 255
    2e04:	cf cf       	rjmp	.-98     	; 0x2da4 <vfprintf+0x682>
    2e06:	23 e0       	ldi	r18, 0x03	; 3
    2e08:	25 15       	cp	r18, r5
    2e0a:	10 f4       	brcc	.+4      	; 0x2e10 <vfprintf+0x6ee>
    2e0c:	83 e0       	ldi	r24, 0x03	; 3
    2e0e:	bd cf       	rjmp	.-134    	; 0x2d8a <vfprintf+0x668>
    2e10:	51 2c       	mov	r5, r1
    2e12:	c0 cf       	rjmp	.-128    	; 0x2d94 <vfprintf+0x672>
    2e14:	60 96       	adiw	r28, 0x10	; 16
    2e16:	e2 e1       	ldi	r30, 0x12	; 18
    2e18:	0c 94 a0 17 	jmp	0x2f40	; 0x2f40 <__epilogue_restores__>

00002e1c <__mulsi3>:
    2e1c:	db 01       	movw	r26, r22
    2e1e:	8f 93       	push	r24
    2e20:	9f 93       	push	r25
    2e22:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <__muluhisi3>
    2e26:	bf 91       	pop	r27
    2e28:	af 91       	pop	r26
    2e2a:	a2 9f       	mul	r26, r18
    2e2c:	80 0d       	add	r24, r0
    2e2e:	91 1d       	adc	r25, r1
    2e30:	a3 9f       	mul	r26, r19
    2e32:	90 0d       	add	r25, r0
    2e34:	b2 9f       	mul	r27, r18
    2e36:	90 0d       	add	r25, r0
    2e38:	11 24       	eor	r1, r1
    2e3a:	08 95       	ret

00002e3c <__udivmodsi4>:
    2e3c:	a1 e2       	ldi	r26, 0x21	; 33
    2e3e:	1a 2e       	mov	r1, r26
    2e40:	aa 1b       	sub	r26, r26
    2e42:	bb 1b       	sub	r27, r27
    2e44:	fd 01       	movw	r30, r26
    2e46:	0d c0       	rjmp	.+26     	; 0x2e62 <__udivmodsi4_ep>

00002e48 <__udivmodsi4_loop>:
    2e48:	aa 1f       	adc	r26, r26
    2e4a:	bb 1f       	adc	r27, r27
    2e4c:	ee 1f       	adc	r30, r30
    2e4e:	ff 1f       	adc	r31, r31
    2e50:	a2 17       	cp	r26, r18
    2e52:	b3 07       	cpc	r27, r19
    2e54:	e4 07       	cpc	r30, r20
    2e56:	f5 07       	cpc	r31, r21
    2e58:	20 f0       	brcs	.+8      	; 0x2e62 <__udivmodsi4_ep>
    2e5a:	a2 1b       	sub	r26, r18
    2e5c:	b3 0b       	sbc	r27, r19
    2e5e:	e4 0b       	sbc	r30, r20
    2e60:	f5 0b       	sbc	r31, r21

00002e62 <__udivmodsi4_ep>:
    2e62:	66 1f       	adc	r22, r22
    2e64:	77 1f       	adc	r23, r23
    2e66:	88 1f       	adc	r24, r24
    2e68:	99 1f       	adc	r25, r25
    2e6a:	1a 94       	dec	r1
    2e6c:	69 f7       	brne	.-38     	; 0x2e48 <__udivmodsi4_loop>
    2e6e:	60 95       	com	r22
    2e70:	70 95       	com	r23
    2e72:	80 95       	com	r24
    2e74:	90 95       	com	r25
    2e76:	9b 01       	movw	r18, r22
    2e78:	ac 01       	movw	r20, r24
    2e7a:	bd 01       	movw	r22, r26
    2e7c:	cf 01       	movw	r24, r30
    2e7e:	08 95       	ret

00002e80 <__tablejump2__>:
    2e80:	ee 0f       	add	r30, r30
    2e82:	ff 1f       	adc	r31, r31
    2e84:	05 90       	lpm	r0, Z+
    2e86:	f4 91       	lpm	r31, Z
    2e88:	e0 2d       	mov	r30, r0
    2e8a:	09 94       	ijmp

00002e8c <__muluhisi3>:
    2e8c:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__umulhisi3>
    2e90:	a5 9f       	mul	r26, r21
    2e92:	90 0d       	add	r25, r0
    2e94:	b4 9f       	mul	r27, r20
    2e96:	90 0d       	add	r25, r0
    2e98:	a4 9f       	mul	r26, r20
    2e9a:	80 0d       	add	r24, r0
    2e9c:	91 1d       	adc	r25, r1
    2e9e:	11 24       	eor	r1, r1
    2ea0:	08 95       	ret

00002ea2 <__mulshisi3>:
    2ea2:	b7 ff       	sbrs	r27, 7
    2ea4:	0c 94 46 17 	jmp	0x2e8c	; 0x2e8c <__muluhisi3>

00002ea8 <__mulohisi3>:
    2ea8:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <__muluhisi3>
    2eac:	82 1b       	sub	r24, r18
    2eae:	93 0b       	sbc	r25, r19
    2eb0:	08 95       	ret

00002eb2 <__umulsidi3>:
    2eb2:	e8 94       	clt

00002eb4 <__umulsidi3_helper>:
    2eb4:	df 93       	push	r29
    2eb6:	cf 93       	push	r28
    2eb8:	fc 01       	movw	r30, r24
    2eba:	db 01       	movw	r26, r22
    2ebc:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__umulhisi3>
    2ec0:	7f 93       	push	r23
    2ec2:	6f 93       	push	r22
    2ec4:	e9 01       	movw	r28, r18
    2ec6:	9a 01       	movw	r18, r20
    2ec8:	ac 01       	movw	r20, r24
    2eca:	bf 93       	push	r27
    2ecc:	af 93       	push	r26
    2ece:	3f 93       	push	r19
    2ed0:	2f 93       	push	r18
    2ed2:	df 01       	movw	r26, r30
    2ed4:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__umulhisi3>
    2ed8:	26 f4       	brtc	.+8      	; 0x2ee2 <__umulsidi3_helper+0x2e>
    2eda:	6c 1b       	sub	r22, r28
    2edc:	7d 0b       	sbc	r23, r29
    2ede:	82 0b       	sbc	r24, r18
    2ee0:	93 0b       	sbc	r25, r19
    2ee2:	9e 01       	movw	r18, r28
    2ee4:	eb 01       	movw	r28, r22
    2ee6:	fc 01       	movw	r30, r24
    2ee8:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <__muldi3_6>
    2eec:	af 91       	pop	r26
    2eee:	bf 91       	pop	r27
    2ef0:	2f 91       	pop	r18
    2ef2:	3f 91       	pop	r19
    2ef4:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <__muldi3_6>
    2ef8:	be 01       	movw	r22, r28
    2efa:	cf 01       	movw	r24, r30
    2efc:	f9 01       	movw	r30, r18
    2efe:	2f 91       	pop	r18
    2f00:	3f 91       	pop	r19
    2f02:	cf 91       	pop	r28
    2f04:	df 91       	pop	r29
    2f06:	08 95       	ret

00002f08 <__prologue_saves__>:
    2f08:	2f 92       	push	r2
    2f0a:	3f 92       	push	r3
    2f0c:	4f 92       	push	r4
    2f0e:	5f 92       	push	r5
    2f10:	6f 92       	push	r6
    2f12:	7f 92       	push	r7
    2f14:	8f 92       	push	r8
    2f16:	9f 92       	push	r9
    2f18:	af 92       	push	r10
    2f1a:	bf 92       	push	r11
    2f1c:	cf 92       	push	r12
    2f1e:	df 92       	push	r13
    2f20:	ef 92       	push	r14
    2f22:	ff 92       	push	r15
    2f24:	0f 93       	push	r16
    2f26:	1f 93       	push	r17
    2f28:	cf 93       	push	r28
    2f2a:	df 93       	push	r29
    2f2c:	cd b7       	in	r28, 0x3d	; 61
    2f2e:	de b7       	in	r29, 0x3e	; 62
    2f30:	ca 1b       	sub	r28, r26
    2f32:	db 0b       	sbc	r29, r27
    2f34:	0f b6       	in	r0, 0x3f	; 63
    2f36:	f8 94       	cli
    2f38:	de bf       	out	0x3e, r29	; 62
    2f3a:	0f be       	out	0x3f, r0	; 63
    2f3c:	cd bf       	out	0x3d, r28	; 61
    2f3e:	09 94       	ijmp

00002f40 <__epilogue_restores__>:
    2f40:	2a 88       	ldd	r2, Y+18	; 0x12
    2f42:	39 88       	ldd	r3, Y+17	; 0x11
    2f44:	48 88       	ldd	r4, Y+16	; 0x10
    2f46:	5f 84       	ldd	r5, Y+15	; 0x0f
    2f48:	6e 84       	ldd	r6, Y+14	; 0x0e
    2f4a:	7d 84       	ldd	r7, Y+13	; 0x0d
    2f4c:	8c 84       	ldd	r8, Y+12	; 0x0c
    2f4e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2f50:	aa 84       	ldd	r10, Y+10	; 0x0a
    2f52:	b9 84       	ldd	r11, Y+9	; 0x09
    2f54:	c8 84       	ldd	r12, Y+8	; 0x08
    2f56:	df 80       	ldd	r13, Y+7	; 0x07
    2f58:	ee 80       	ldd	r14, Y+6	; 0x06
    2f5a:	fd 80       	ldd	r15, Y+5	; 0x05
    2f5c:	0c 81       	ldd	r16, Y+4	; 0x04
    2f5e:	1b 81       	ldd	r17, Y+3	; 0x03
    2f60:	aa 81       	ldd	r26, Y+2	; 0x02
    2f62:	b9 81       	ldd	r27, Y+1	; 0x01
    2f64:	ce 0f       	add	r28, r30
    2f66:	d1 1d       	adc	r29, r1
    2f68:	0f b6       	in	r0, 0x3f	; 63
    2f6a:	f8 94       	cli
    2f6c:	de bf       	out	0x3e, r29	; 62
    2f6e:	0f be       	out	0x3f, r0	; 63
    2f70:	cd bf       	out	0x3d, r28	; 61
    2f72:	ed 01       	movw	r28, r26
    2f74:	08 95       	ret

00002f76 <__ashrdi3>:
    2f76:	97 fb       	bst	r25, 7
    2f78:	10 f8       	bld	r1, 0

00002f7a <__lshrdi3>:
    2f7a:	16 94       	lsr	r1
    2f7c:	00 08       	sbc	r0, r0
    2f7e:	0f 93       	push	r16
    2f80:	08 30       	cpi	r16, 0x08	; 8
    2f82:	98 f0       	brcs	.+38     	; 0x2faa <__lshrdi3+0x30>
    2f84:	08 50       	subi	r16, 0x08	; 8
    2f86:	23 2f       	mov	r18, r19
    2f88:	34 2f       	mov	r19, r20
    2f8a:	45 2f       	mov	r20, r21
    2f8c:	56 2f       	mov	r21, r22
    2f8e:	67 2f       	mov	r22, r23
    2f90:	78 2f       	mov	r23, r24
    2f92:	89 2f       	mov	r24, r25
    2f94:	90 2d       	mov	r25, r0
    2f96:	f4 cf       	rjmp	.-24     	; 0x2f80 <__lshrdi3+0x6>
    2f98:	05 94       	asr	r0
    2f9a:	97 95       	ror	r25
    2f9c:	87 95       	ror	r24
    2f9e:	77 95       	ror	r23
    2fa0:	67 95       	ror	r22
    2fa2:	57 95       	ror	r21
    2fa4:	47 95       	ror	r20
    2fa6:	37 95       	ror	r19
    2fa8:	27 95       	ror	r18
    2faa:	0a 95       	dec	r16
    2fac:	aa f7       	brpl	.-22     	; 0x2f98 <__lshrdi3+0x1e>
    2fae:	0f 91       	pop	r16
    2fb0:	08 95       	ret

00002fb2 <__adddi3_s8>:
    2fb2:	00 24       	eor	r0, r0
    2fb4:	a7 fd       	sbrc	r26, 7
    2fb6:	00 94       	com	r0
    2fb8:	2a 0f       	add	r18, r26
    2fba:	30 1d       	adc	r19, r0
    2fbc:	40 1d       	adc	r20, r0
    2fbe:	50 1d       	adc	r21, r0
    2fc0:	60 1d       	adc	r22, r0
    2fc2:	70 1d       	adc	r23, r0
    2fc4:	80 1d       	adc	r24, r0
    2fc6:	90 1d       	adc	r25, r0
    2fc8:	08 95       	ret

00002fca <__umulhisi3>:
    2fca:	a2 9f       	mul	r26, r18
    2fcc:	b0 01       	movw	r22, r0
    2fce:	b3 9f       	mul	r27, r19
    2fd0:	c0 01       	movw	r24, r0
    2fd2:	a3 9f       	mul	r26, r19
    2fd4:	70 0d       	add	r23, r0
    2fd6:	81 1d       	adc	r24, r1
    2fd8:	11 24       	eor	r1, r1
    2fda:	91 1d       	adc	r25, r1
    2fdc:	b2 9f       	mul	r27, r18
    2fde:	70 0d       	add	r23, r0
    2fe0:	81 1d       	adc	r24, r1
    2fe2:	11 24       	eor	r1, r1
    2fe4:	91 1d       	adc	r25, r1
    2fe6:	08 95       	ret

00002fe8 <__muldi3_6>:
    2fe8:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__umulhisi3>
    2fec:	46 0f       	add	r20, r22
    2fee:	57 1f       	adc	r21, r23
    2ff0:	c8 1f       	adc	r28, r24
    2ff2:	d9 1f       	adc	r29, r25
    2ff4:	08 f4       	brcc	.+2      	; 0x2ff8 <__muldi3_6+0x10>
    2ff6:	31 96       	adiw	r30, 0x01	; 1
    2ff8:	08 95       	ret

00002ffa <atol>:
    2ffa:	1f 93       	push	r17
    2ffc:	fc 01       	movw	r30, r24
    2ffe:	99 27       	eor	r25, r25
    3000:	88 27       	eor	r24, r24
    3002:	bc 01       	movw	r22, r24
    3004:	e8 94       	clt
    3006:	11 91       	ld	r17, Z+
    3008:	10 32       	cpi	r17, 0x20	; 32
    300a:	e9 f3       	breq	.-6      	; 0x3006 <atol+0xc>
    300c:	19 30       	cpi	r17, 0x09	; 9
    300e:	10 f0       	brcs	.+4      	; 0x3014 <atol+0x1a>
    3010:	1e 30       	cpi	r17, 0x0E	; 14
    3012:	c8 f3       	brcs	.-14     	; 0x3006 <atol+0xc>
    3014:	1b 32       	cpi	r17, 0x2B	; 43
    3016:	51 f0       	breq	.+20     	; 0x302c <atol+0x32>
    3018:	1d 32       	cpi	r17, 0x2D	; 45
    301a:	49 f4       	brne	.+18     	; 0x302e <atol+0x34>
    301c:	68 94       	set
    301e:	06 c0       	rjmp	.+12     	; 0x302c <atol+0x32>
    3020:	0e 94 31 19 	call	0x3262	; 0x3262 <__mulsi_const_10>
    3024:	61 0f       	add	r22, r17
    3026:	71 1d       	adc	r23, r1
    3028:	81 1d       	adc	r24, r1
    302a:	91 1d       	adc	r25, r1
    302c:	11 91       	ld	r17, Z+
    302e:	10 53       	subi	r17, 0x30	; 48
    3030:	1a 30       	cpi	r17, 0x0A	; 10
    3032:	b0 f3       	brcs	.-20     	; 0x3020 <atol+0x26>
    3034:	3e f4       	brtc	.+14     	; 0x3044 <atol+0x4a>
    3036:	90 95       	com	r25
    3038:	80 95       	com	r24
    303a:	70 95       	com	r23
    303c:	61 95       	neg	r22
    303e:	7f 4f       	sbci	r23, 0xFF	; 255
    3040:	8f 4f       	sbci	r24, 0xFF	; 255
    3042:	9f 4f       	sbci	r25, 0xFF	; 255
    3044:	1f 91       	pop	r17
    3046:	08 95       	ret

00003048 <__ftoa_engine>:
    3048:	28 30       	cpi	r18, 0x08	; 8
    304a:	08 f0       	brcs	.+2      	; 0x304e <__ftoa_engine+0x6>
    304c:	27 e0       	ldi	r18, 0x07	; 7
    304e:	33 27       	eor	r19, r19
    3050:	da 01       	movw	r26, r20
    3052:	99 0f       	add	r25, r25
    3054:	31 1d       	adc	r19, r1
    3056:	87 fd       	sbrc	r24, 7
    3058:	91 60       	ori	r25, 0x01	; 1
    305a:	00 96       	adiw	r24, 0x00	; 0
    305c:	61 05       	cpc	r22, r1
    305e:	71 05       	cpc	r23, r1
    3060:	39 f4       	brne	.+14     	; 0x3070 <__ftoa_engine+0x28>
    3062:	32 60       	ori	r19, 0x02	; 2
    3064:	2e 5f       	subi	r18, 0xFE	; 254
    3066:	3d 93       	st	X+, r19
    3068:	30 e3       	ldi	r19, 0x30	; 48
    306a:	2a 95       	dec	r18
    306c:	e1 f7       	brne	.-8      	; 0x3066 <__ftoa_engine+0x1e>
    306e:	08 95       	ret
    3070:	9f 3f       	cpi	r25, 0xFF	; 255
    3072:	30 f0       	brcs	.+12     	; 0x3080 <__ftoa_engine+0x38>
    3074:	80 38       	cpi	r24, 0x80	; 128
    3076:	71 05       	cpc	r23, r1
    3078:	61 05       	cpc	r22, r1
    307a:	09 f0       	breq	.+2      	; 0x307e <__ftoa_engine+0x36>
    307c:	3c 5f       	subi	r19, 0xFC	; 252
    307e:	3c 5f       	subi	r19, 0xFC	; 252
    3080:	3d 93       	st	X+, r19
    3082:	91 30       	cpi	r25, 0x01	; 1
    3084:	08 f0       	brcs	.+2      	; 0x3088 <__ftoa_engine+0x40>
    3086:	80 68       	ori	r24, 0x80	; 128
    3088:	91 1d       	adc	r25, r1
    308a:	df 93       	push	r29
    308c:	cf 93       	push	r28
    308e:	1f 93       	push	r17
    3090:	0f 93       	push	r16
    3092:	ff 92       	push	r15
    3094:	ef 92       	push	r14
    3096:	19 2f       	mov	r17, r25
    3098:	98 7f       	andi	r25, 0xF8	; 248
    309a:	96 95       	lsr	r25
    309c:	e9 2f       	mov	r30, r25
    309e:	96 95       	lsr	r25
    30a0:	96 95       	lsr	r25
    30a2:	e9 0f       	add	r30, r25
    30a4:	ff 27       	eor	r31, r31
    30a6:	ea 52       	subi	r30, 0x2A	; 42
    30a8:	fe 4f       	sbci	r31, 0xFE	; 254
    30aa:	99 27       	eor	r25, r25
    30ac:	33 27       	eor	r19, r19
    30ae:	ee 24       	eor	r14, r14
    30b0:	ff 24       	eor	r15, r15
    30b2:	a7 01       	movw	r20, r14
    30b4:	e7 01       	movw	r28, r14
    30b6:	05 90       	lpm	r0, Z+
    30b8:	08 94       	sec
    30ba:	07 94       	ror	r0
    30bc:	28 f4       	brcc	.+10     	; 0x30c8 <__ftoa_engine+0x80>
    30be:	36 0f       	add	r19, r22
    30c0:	e7 1e       	adc	r14, r23
    30c2:	f8 1e       	adc	r15, r24
    30c4:	49 1f       	adc	r20, r25
    30c6:	51 1d       	adc	r21, r1
    30c8:	66 0f       	add	r22, r22
    30ca:	77 1f       	adc	r23, r23
    30cc:	88 1f       	adc	r24, r24
    30ce:	99 1f       	adc	r25, r25
    30d0:	06 94       	lsr	r0
    30d2:	a1 f7       	brne	.-24     	; 0x30bc <__ftoa_engine+0x74>
    30d4:	05 90       	lpm	r0, Z+
    30d6:	07 94       	ror	r0
    30d8:	28 f4       	brcc	.+10     	; 0x30e4 <__ftoa_engine+0x9c>
    30da:	e7 0e       	add	r14, r23
    30dc:	f8 1e       	adc	r15, r24
    30de:	49 1f       	adc	r20, r25
    30e0:	56 1f       	adc	r21, r22
    30e2:	c1 1d       	adc	r28, r1
    30e4:	77 0f       	add	r23, r23
    30e6:	88 1f       	adc	r24, r24
    30e8:	99 1f       	adc	r25, r25
    30ea:	66 1f       	adc	r22, r22
    30ec:	06 94       	lsr	r0
    30ee:	a1 f7       	brne	.-24     	; 0x30d8 <__ftoa_engine+0x90>
    30f0:	05 90       	lpm	r0, Z+
    30f2:	07 94       	ror	r0
    30f4:	28 f4       	brcc	.+10     	; 0x3100 <__ftoa_engine+0xb8>
    30f6:	f8 0e       	add	r15, r24
    30f8:	49 1f       	adc	r20, r25
    30fa:	56 1f       	adc	r21, r22
    30fc:	c7 1f       	adc	r28, r23
    30fe:	d1 1d       	adc	r29, r1
    3100:	88 0f       	add	r24, r24
    3102:	99 1f       	adc	r25, r25
    3104:	66 1f       	adc	r22, r22
    3106:	77 1f       	adc	r23, r23
    3108:	06 94       	lsr	r0
    310a:	a1 f7       	brne	.-24     	; 0x30f4 <__ftoa_engine+0xac>
    310c:	05 90       	lpm	r0, Z+
    310e:	07 94       	ror	r0
    3110:	20 f4       	brcc	.+8      	; 0x311a <__ftoa_engine+0xd2>
    3112:	49 0f       	add	r20, r25
    3114:	56 1f       	adc	r21, r22
    3116:	c7 1f       	adc	r28, r23
    3118:	d8 1f       	adc	r29, r24
    311a:	99 0f       	add	r25, r25
    311c:	66 1f       	adc	r22, r22
    311e:	77 1f       	adc	r23, r23
    3120:	88 1f       	adc	r24, r24
    3122:	06 94       	lsr	r0
    3124:	a9 f7       	brne	.-22     	; 0x3110 <__ftoa_engine+0xc8>
    3126:	84 91       	lpm	r24, Z
    3128:	10 95       	com	r17
    312a:	17 70       	andi	r17, 0x07	; 7
    312c:	41 f0       	breq	.+16     	; 0x313e <__ftoa_engine+0xf6>
    312e:	d6 95       	lsr	r29
    3130:	c7 95       	ror	r28
    3132:	57 95       	ror	r21
    3134:	47 95       	ror	r20
    3136:	f7 94       	ror	r15
    3138:	e7 94       	ror	r14
    313a:	1a 95       	dec	r17
    313c:	c1 f7       	brne	.-16     	; 0x312e <__ftoa_engine+0xe6>
    313e:	ec e7       	ldi	r30, 0x7C	; 124
    3140:	f1 e0       	ldi	r31, 0x01	; 1
    3142:	68 94       	set
    3144:	15 90       	lpm	r1, Z+
    3146:	15 91       	lpm	r17, Z+
    3148:	35 91       	lpm	r19, Z+
    314a:	65 91       	lpm	r22, Z+
    314c:	95 91       	lpm	r25, Z+
    314e:	05 90       	lpm	r0, Z+
    3150:	7f e2       	ldi	r23, 0x2F	; 47
    3152:	73 95       	inc	r23
    3154:	e1 18       	sub	r14, r1
    3156:	f1 0a       	sbc	r15, r17
    3158:	43 0b       	sbc	r20, r19
    315a:	56 0b       	sbc	r21, r22
    315c:	c9 0b       	sbc	r28, r25
    315e:	d0 09       	sbc	r29, r0
    3160:	c0 f7       	brcc	.-16     	; 0x3152 <__ftoa_engine+0x10a>
    3162:	e1 0c       	add	r14, r1
    3164:	f1 1e       	adc	r15, r17
    3166:	43 1f       	adc	r20, r19
    3168:	56 1f       	adc	r21, r22
    316a:	c9 1f       	adc	r28, r25
    316c:	d0 1d       	adc	r29, r0
    316e:	7e f4       	brtc	.+30     	; 0x318e <__ftoa_engine+0x146>
    3170:	70 33       	cpi	r23, 0x30	; 48
    3172:	11 f4       	brne	.+4      	; 0x3178 <__ftoa_engine+0x130>
    3174:	8a 95       	dec	r24
    3176:	e6 cf       	rjmp	.-52     	; 0x3144 <__ftoa_engine+0xfc>
    3178:	e8 94       	clt
    317a:	01 50       	subi	r16, 0x01	; 1
    317c:	30 f0       	brcs	.+12     	; 0x318a <__ftoa_engine+0x142>
    317e:	08 0f       	add	r16, r24
    3180:	0a f4       	brpl	.+2      	; 0x3184 <__ftoa_engine+0x13c>
    3182:	00 27       	eor	r16, r16
    3184:	02 17       	cp	r16, r18
    3186:	08 f4       	brcc	.+2      	; 0x318a <__ftoa_engine+0x142>
    3188:	20 2f       	mov	r18, r16
    318a:	23 95       	inc	r18
    318c:	02 2f       	mov	r16, r18
    318e:	7a 33       	cpi	r23, 0x3A	; 58
    3190:	28 f0       	brcs	.+10     	; 0x319c <__ftoa_engine+0x154>
    3192:	79 e3       	ldi	r23, 0x39	; 57
    3194:	7d 93       	st	X+, r23
    3196:	2a 95       	dec	r18
    3198:	e9 f7       	brne	.-6      	; 0x3194 <__ftoa_engine+0x14c>
    319a:	10 c0       	rjmp	.+32     	; 0x31bc <__ftoa_engine+0x174>
    319c:	7d 93       	st	X+, r23
    319e:	2a 95       	dec	r18
    31a0:	89 f6       	brne	.-94     	; 0x3144 <__ftoa_engine+0xfc>
    31a2:	06 94       	lsr	r0
    31a4:	97 95       	ror	r25
    31a6:	67 95       	ror	r22
    31a8:	37 95       	ror	r19
    31aa:	17 95       	ror	r17
    31ac:	17 94       	ror	r1
    31ae:	e1 18       	sub	r14, r1
    31b0:	f1 0a       	sbc	r15, r17
    31b2:	43 0b       	sbc	r20, r19
    31b4:	56 0b       	sbc	r21, r22
    31b6:	c9 0b       	sbc	r28, r25
    31b8:	d0 09       	sbc	r29, r0
    31ba:	98 f0       	brcs	.+38     	; 0x31e2 <__ftoa_engine+0x19a>
    31bc:	23 95       	inc	r18
    31be:	7e 91       	ld	r23, -X
    31c0:	73 95       	inc	r23
    31c2:	7a 33       	cpi	r23, 0x3A	; 58
    31c4:	08 f0       	brcs	.+2      	; 0x31c8 <__ftoa_engine+0x180>
    31c6:	70 e3       	ldi	r23, 0x30	; 48
    31c8:	7c 93       	st	X, r23
    31ca:	20 13       	cpse	r18, r16
    31cc:	b8 f7       	brcc	.-18     	; 0x31bc <__ftoa_engine+0x174>
    31ce:	7e 91       	ld	r23, -X
    31d0:	70 61       	ori	r23, 0x10	; 16
    31d2:	7d 93       	st	X+, r23
    31d4:	30 f0       	brcs	.+12     	; 0x31e2 <__ftoa_engine+0x19a>
    31d6:	83 95       	inc	r24
    31d8:	71 e3       	ldi	r23, 0x31	; 49
    31da:	7d 93       	st	X+, r23
    31dc:	70 e3       	ldi	r23, 0x30	; 48
    31de:	2a 95       	dec	r18
    31e0:	e1 f7       	brne	.-8      	; 0x31da <__ftoa_engine+0x192>
    31e2:	11 24       	eor	r1, r1
    31e4:	ef 90       	pop	r14
    31e6:	ff 90       	pop	r15
    31e8:	0f 91       	pop	r16
    31ea:	1f 91       	pop	r17
    31ec:	cf 91       	pop	r28
    31ee:	df 91       	pop	r29
    31f0:	99 27       	eor	r25, r25
    31f2:	87 fd       	sbrc	r24, 7
    31f4:	90 95       	com	r25
    31f6:	08 95       	ret

000031f8 <strnlen_P>:
    31f8:	fc 01       	movw	r30, r24
    31fa:	05 90       	lpm	r0, Z+
    31fc:	61 50       	subi	r22, 0x01	; 1
    31fe:	70 40       	sbci	r23, 0x00	; 0
    3200:	01 10       	cpse	r0, r1
    3202:	d8 f7       	brcc	.-10     	; 0x31fa <strnlen_P+0x2>
    3204:	80 95       	com	r24
    3206:	90 95       	com	r25
    3208:	8e 0f       	add	r24, r30
    320a:	9f 1f       	adc	r25, r31
    320c:	08 95       	ret

0000320e <strcmp>:
    320e:	fb 01       	movw	r30, r22
    3210:	dc 01       	movw	r26, r24
    3212:	8d 91       	ld	r24, X+
    3214:	01 90       	ld	r0, Z+
    3216:	80 19       	sub	r24, r0
    3218:	01 10       	cpse	r0, r1
    321a:	d9 f3       	breq	.-10     	; 0x3212 <strcmp+0x4>
    321c:	99 0b       	sbc	r25, r25
    321e:	08 95       	ret

00003220 <strcpy>:
    3220:	fb 01       	movw	r30, r22
    3222:	dc 01       	movw	r26, r24
    3224:	01 90       	ld	r0, Z+
    3226:	0d 92       	st	X+, r0
    3228:	00 20       	and	r0, r0
    322a:	e1 f7       	brne	.-8      	; 0x3224 <strcpy+0x4>
    322c:	08 95       	ret

0000322e <strncpy>:
    322e:	fb 01       	movw	r30, r22
    3230:	dc 01       	movw	r26, r24
    3232:	41 50       	subi	r20, 0x01	; 1
    3234:	50 40       	sbci	r21, 0x00	; 0
    3236:	48 f0       	brcs	.+18     	; 0x324a <strncpy+0x1c>
    3238:	01 90       	ld	r0, Z+
    323a:	0d 92       	st	X+, r0
    323c:	00 20       	and	r0, r0
    323e:	c9 f7       	brne	.-14     	; 0x3232 <strncpy+0x4>
    3240:	01 c0       	rjmp	.+2      	; 0x3244 <strncpy+0x16>
    3242:	1d 92       	st	X+, r1
    3244:	41 50       	subi	r20, 0x01	; 1
    3246:	50 40       	sbci	r21, 0x00	; 0
    3248:	e0 f7       	brcc	.-8      	; 0x3242 <strncpy+0x14>
    324a:	08 95       	ret

0000324c <strnlen>:
    324c:	fc 01       	movw	r30, r24
    324e:	61 50       	subi	r22, 0x01	; 1
    3250:	70 40       	sbci	r23, 0x00	; 0
    3252:	01 90       	ld	r0, Z+
    3254:	01 10       	cpse	r0, r1
    3256:	d8 f7       	brcc	.-10     	; 0x324e <strnlen+0x2>
    3258:	80 95       	com	r24
    325a:	90 95       	com	r25
    325c:	8e 0f       	add	r24, r30
    325e:	9f 1f       	adc	r25, r31
    3260:	08 95       	ret

00003262 <__mulsi_const_10>:
    3262:	59 2f       	mov	r21, r25
    3264:	48 2f       	mov	r20, r24
    3266:	37 2f       	mov	r19, r23
    3268:	26 2f       	mov	r18, r22
    326a:	66 0f       	add	r22, r22
    326c:	77 1f       	adc	r23, r23
    326e:	88 1f       	adc	r24, r24
    3270:	99 1f       	adc	r25, r25
    3272:	66 0f       	add	r22, r22
    3274:	77 1f       	adc	r23, r23
    3276:	88 1f       	adc	r24, r24
    3278:	99 1f       	adc	r25, r25
    327a:	62 0f       	add	r22, r18
    327c:	73 1f       	adc	r23, r19
    327e:	84 1f       	adc	r24, r20
    3280:	95 1f       	adc	r25, r21
    3282:	66 0f       	add	r22, r22
    3284:	77 1f       	adc	r23, r23
    3286:	88 1f       	adc	r24, r24
    3288:	99 1f       	adc	r25, r25
    328a:	08 95       	ret

0000328c <fputc>:
    328c:	0f 93       	push	r16
    328e:	1f 93       	push	r17
    3290:	cf 93       	push	r28
    3292:	df 93       	push	r29
    3294:	fb 01       	movw	r30, r22
    3296:	23 81       	ldd	r18, Z+3	; 0x03
    3298:	21 fd       	sbrc	r18, 1
    329a:	03 c0       	rjmp	.+6      	; 0x32a2 <fputc+0x16>
    329c:	8f ef       	ldi	r24, 0xFF	; 255
    329e:	9f ef       	ldi	r25, 0xFF	; 255
    32a0:	2c c0       	rjmp	.+88     	; 0x32fa <fputc+0x6e>
    32a2:	22 ff       	sbrs	r18, 2
    32a4:	16 c0       	rjmp	.+44     	; 0x32d2 <fputc+0x46>
    32a6:	46 81       	ldd	r20, Z+6	; 0x06
    32a8:	57 81       	ldd	r21, Z+7	; 0x07
    32aa:	24 81       	ldd	r18, Z+4	; 0x04
    32ac:	35 81       	ldd	r19, Z+5	; 0x05
    32ae:	42 17       	cp	r20, r18
    32b0:	53 07       	cpc	r21, r19
    32b2:	44 f4       	brge	.+16     	; 0x32c4 <fputc+0x38>
    32b4:	a0 81       	ld	r26, Z
    32b6:	b1 81       	ldd	r27, Z+1	; 0x01
    32b8:	9d 01       	movw	r18, r26
    32ba:	2f 5f       	subi	r18, 0xFF	; 255
    32bc:	3f 4f       	sbci	r19, 0xFF	; 255
    32be:	31 83       	std	Z+1, r19	; 0x01
    32c0:	20 83       	st	Z, r18
    32c2:	8c 93       	st	X, r24
    32c4:	26 81       	ldd	r18, Z+6	; 0x06
    32c6:	37 81       	ldd	r19, Z+7	; 0x07
    32c8:	2f 5f       	subi	r18, 0xFF	; 255
    32ca:	3f 4f       	sbci	r19, 0xFF	; 255
    32cc:	37 83       	std	Z+7, r19	; 0x07
    32ce:	26 83       	std	Z+6, r18	; 0x06
    32d0:	14 c0       	rjmp	.+40     	; 0x32fa <fputc+0x6e>
    32d2:	8b 01       	movw	r16, r22
    32d4:	ec 01       	movw	r28, r24
    32d6:	fb 01       	movw	r30, r22
    32d8:	00 84       	ldd	r0, Z+8	; 0x08
    32da:	f1 85       	ldd	r31, Z+9	; 0x09
    32dc:	e0 2d       	mov	r30, r0
    32de:	09 95       	icall
    32e0:	89 2b       	or	r24, r25
    32e2:	e1 f6       	brne	.-72     	; 0x329c <fputc+0x10>
    32e4:	d8 01       	movw	r26, r16
    32e6:	16 96       	adiw	r26, 0x06	; 6
    32e8:	8d 91       	ld	r24, X+
    32ea:	9c 91       	ld	r25, X
    32ec:	17 97       	sbiw	r26, 0x07	; 7
    32ee:	01 96       	adiw	r24, 0x01	; 1
    32f0:	17 96       	adiw	r26, 0x07	; 7
    32f2:	9c 93       	st	X, r25
    32f4:	8e 93       	st	-X, r24
    32f6:	16 97       	sbiw	r26, 0x06	; 6
    32f8:	ce 01       	movw	r24, r28
    32fa:	df 91       	pop	r29
    32fc:	cf 91       	pop	r28
    32fe:	1f 91       	pop	r17
    3300:	0f 91       	pop	r16
    3302:	08 95       	ret

00003304 <sprintf>:
    3304:	ae e0       	ldi	r26, 0x0E	; 14
    3306:	b0 e0       	ldi	r27, 0x00	; 0
    3308:	e8 e8       	ldi	r30, 0x88	; 136
    330a:	f9 e1       	ldi	r31, 0x19	; 25
    330c:	0c 94 92 17 	jmp	0x2f24	; 0x2f24 <__prologue_saves__+0x1c>
    3310:	0d 89       	ldd	r16, Y+21	; 0x15
    3312:	1e 89       	ldd	r17, Y+22	; 0x16
    3314:	86 e0       	ldi	r24, 0x06	; 6
    3316:	8c 83       	std	Y+4, r24	; 0x04
    3318:	1a 83       	std	Y+2, r17	; 0x02
    331a:	09 83       	std	Y+1, r16	; 0x01
    331c:	8f ef       	ldi	r24, 0xFF	; 255
    331e:	9f e7       	ldi	r25, 0x7F	; 127
    3320:	9e 83       	std	Y+6, r25	; 0x06
    3322:	8d 83       	std	Y+5, r24	; 0x05
    3324:	ae 01       	movw	r20, r28
    3326:	47 5e       	subi	r20, 0xE7	; 231
    3328:	5f 4f       	sbci	r21, 0xFF	; 255
    332a:	6f 89       	ldd	r22, Y+23	; 0x17
    332c:	78 8d       	ldd	r23, Y+24	; 0x18
    332e:	ce 01       	movw	r24, r28
    3330:	01 96       	adiw	r24, 0x01	; 1
    3332:	0e 94 91 13 	call	0x2722	; 0x2722 <vfprintf>
    3336:	ef 81       	ldd	r30, Y+7	; 0x07
    3338:	f8 85       	ldd	r31, Y+8	; 0x08
    333a:	e0 0f       	add	r30, r16
    333c:	f1 1f       	adc	r31, r17
    333e:	10 82       	st	Z, r1
    3340:	2e 96       	adiw	r28, 0x0e	; 14
    3342:	e4 e0       	ldi	r30, 0x04	; 4
    3344:	0c 94 ae 17 	jmp	0x2f5c	; 0x2f5c <__epilogue_restores__+0x1c>

00003348 <__ultoa_invert>:
    3348:	fa 01       	movw	r30, r20
    334a:	aa 27       	eor	r26, r26
    334c:	28 30       	cpi	r18, 0x08	; 8
    334e:	51 f1       	breq	.+84     	; 0x33a4 <__ultoa_invert+0x5c>
    3350:	20 31       	cpi	r18, 0x10	; 16
    3352:	81 f1       	breq	.+96     	; 0x33b4 <__ultoa_invert+0x6c>
    3354:	e8 94       	clt
    3356:	6f 93       	push	r22
    3358:	6e 7f       	andi	r22, 0xFE	; 254
    335a:	6e 5f       	subi	r22, 0xFE	; 254
    335c:	7f 4f       	sbci	r23, 0xFF	; 255
    335e:	8f 4f       	sbci	r24, 0xFF	; 255
    3360:	9f 4f       	sbci	r25, 0xFF	; 255
    3362:	af 4f       	sbci	r26, 0xFF	; 255
    3364:	b1 e0       	ldi	r27, 0x01	; 1
    3366:	3e d0       	rcall	.+124    	; 0x33e4 <__ultoa_invert+0x9c>
    3368:	b4 e0       	ldi	r27, 0x04	; 4
    336a:	3c d0       	rcall	.+120    	; 0x33e4 <__ultoa_invert+0x9c>
    336c:	67 0f       	add	r22, r23
    336e:	78 1f       	adc	r23, r24
    3370:	89 1f       	adc	r24, r25
    3372:	9a 1f       	adc	r25, r26
    3374:	a1 1d       	adc	r26, r1
    3376:	68 0f       	add	r22, r24
    3378:	79 1f       	adc	r23, r25
    337a:	8a 1f       	adc	r24, r26
    337c:	91 1d       	adc	r25, r1
    337e:	a1 1d       	adc	r26, r1
    3380:	6a 0f       	add	r22, r26
    3382:	71 1d       	adc	r23, r1
    3384:	81 1d       	adc	r24, r1
    3386:	91 1d       	adc	r25, r1
    3388:	a1 1d       	adc	r26, r1
    338a:	20 d0       	rcall	.+64     	; 0x33cc <__ultoa_invert+0x84>
    338c:	09 f4       	brne	.+2      	; 0x3390 <__ultoa_invert+0x48>
    338e:	68 94       	set
    3390:	3f 91       	pop	r19
    3392:	2a e0       	ldi	r18, 0x0A	; 10
    3394:	26 9f       	mul	r18, r22
    3396:	11 24       	eor	r1, r1
    3398:	30 19       	sub	r19, r0
    339a:	30 5d       	subi	r19, 0xD0	; 208
    339c:	31 93       	st	Z+, r19
    339e:	de f6       	brtc	.-74     	; 0x3356 <__ultoa_invert+0xe>
    33a0:	cf 01       	movw	r24, r30
    33a2:	08 95       	ret
    33a4:	46 2f       	mov	r20, r22
    33a6:	47 70       	andi	r20, 0x07	; 7
    33a8:	40 5d       	subi	r20, 0xD0	; 208
    33aa:	41 93       	st	Z+, r20
    33ac:	b3 e0       	ldi	r27, 0x03	; 3
    33ae:	0f d0       	rcall	.+30     	; 0x33ce <__ultoa_invert+0x86>
    33b0:	c9 f7       	brne	.-14     	; 0x33a4 <__ultoa_invert+0x5c>
    33b2:	f6 cf       	rjmp	.-20     	; 0x33a0 <__ultoa_invert+0x58>
    33b4:	46 2f       	mov	r20, r22
    33b6:	4f 70       	andi	r20, 0x0F	; 15
    33b8:	40 5d       	subi	r20, 0xD0	; 208
    33ba:	4a 33       	cpi	r20, 0x3A	; 58
    33bc:	18 f0       	brcs	.+6      	; 0x33c4 <__ultoa_invert+0x7c>
    33be:	49 5d       	subi	r20, 0xD9	; 217
    33c0:	31 fd       	sbrc	r19, 1
    33c2:	40 52       	subi	r20, 0x20	; 32
    33c4:	41 93       	st	Z+, r20
    33c6:	02 d0       	rcall	.+4      	; 0x33cc <__ultoa_invert+0x84>
    33c8:	a9 f7       	brne	.-22     	; 0x33b4 <__ultoa_invert+0x6c>
    33ca:	ea cf       	rjmp	.-44     	; 0x33a0 <__ultoa_invert+0x58>
    33cc:	b4 e0       	ldi	r27, 0x04	; 4
    33ce:	a6 95       	lsr	r26
    33d0:	97 95       	ror	r25
    33d2:	87 95       	ror	r24
    33d4:	77 95       	ror	r23
    33d6:	67 95       	ror	r22
    33d8:	ba 95       	dec	r27
    33da:	c9 f7       	brne	.-14     	; 0x33ce <__ultoa_invert+0x86>
    33dc:	00 97       	sbiw	r24, 0x00	; 0
    33de:	61 05       	cpc	r22, r1
    33e0:	71 05       	cpc	r23, r1
    33e2:	08 95       	ret
    33e4:	9b 01       	movw	r18, r22
    33e6:	ac 01       	movw	r20, r24
    33e8:	0a 2e       	mov	r0, r26
    33ea:	06 94       	lsr	r0
    33ec:	57 95       	ror	r21
    33ee:	47 95       	ror	r20
    33f0:	37 95       	ror	r19
    33f2:	27 95       	ror	r18
    33f4:	ba 95       	dec	r27
    33f6:	c9 f7       	brne	.-14     	; 0x33ea <__ultoa_invert+0xa2>
    33f8:	62 0f       	add	r22, r18
    33fa:	73 1f       	adc	r23, r19
    33fc:	84 1f       	adc	r24, r20
    33fe:	95 1f       	adc	r25, r21
    3400:	a0 1d       	adc	r26, r0
    3402:	08 95       	ret

00003404 <eeprom_read_byte>:
    3404:	e1 99       	sbic	0x1c, 1	; 28
    3406:	fe cf       	rjmp	.-4      	; 0x3404 <eeprom_read_byte>
    3408:	9f bb       	out	0x1f, r25	; 31
    340a:	8e bb       	out	0x1e, r24	; 30
    340c:	e0 9a       	sbi	0x1c, 0	; 28
    340e:	99 27       	eor	r25, r25
    3410:	8d b3       	in	r24, 0x1d	; 29
    3412:	08 95       	ret

00003414 <eeprom_write_byte>:
    3414:	26 2f       	mov	r18, r22

00003416 <eeprom_write_r18>:
    3416:	e1 99       	sbic	0x1c, 1	; 28
    3418:	fe cf       	rjmp	.-4      	; 0x3416 <eeprom_write_r18>
    341a:	9f bb       	out	0x1f, r25	; 31
    341c:	8e bb       	out	0x1e, r24	; 30
    341e:	2d bb       	out	0x1d, r18	; 29
    3420:	0f b6       	in	r0, 0x3f	; 63
    3422:	f8 94       	cli
    3424:	e2 9a       	sbi	0x1c, 2	; 28
    3426:	e1 9a       	sbi	0x1c, 1	; 28
    3428:	0f be       	out	0x3f, r0	; 63
    342a:	01 96       	adiw	r24, 0x01	; 1
    342c:	08 95       	ret

0000342e <_exit>:
    342e:	f8 94       	cli

00003430 <__stop_program>:
    3430:	ff cf       	rjmp	.-2      	; 0x3430 <__stop_program>
